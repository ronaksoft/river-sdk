// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.phone.proto

package msg

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DiscardReason int32

const (
	DiscardReasonUnknown    DiscardReason = 0
	DiscardReasonMissed     DiscardReason = 1
	DiscardReasonBusy       DiscardReason = 2
	DiscardReasonHangup     DiscardReason = 3
	DiscardReasonDisconnect DiscardReason = 4
)

var DiscardReason_name = map[int32]string{
	0: "DiscardReasonUnknown",
	1: "DiscardReasonMissed",
	2: "DiscardReasonBusy",
	3: "DiscardReasonHangup",
	4: "DiscardReasonDisconnect",
}

var DiscardReason_value = map[string]int32{
	"DiscardReasonUnknown":    0,
	"DiscardReasonMissed":     1,
	"DiscardReasonBusy":       2,
	"DiscardReasonHangup":     3,
	"DiscardReasonDisconnect": 4,
}

func (x DiscardReason) Enum() *DiscardReason {
	p := new(DiscardReason)
	*p = x
	return p
}

func (x DiscardReason) String() string {
	return proto.EnumName(DiscardReason_name, int32(x))
}

func (x *DiscardReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DiscardReason_value, data, "DiscardReason")
	if err != nil {
		return err
	}
	*x = DiscardReason(value)
	return nil
}

func (DiscardReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{0}
}

type PhoneCallAction int32

const (
	PhoneCallEmpty       PhoneCallAction = 0
	PhoneCallAccepted    PhoneCallAction = 1
	PhoneCallRequested   PhoneCallAction = 2
	PhoneCallCallWaiting PhoneCallAction = 3
	PhoneCallDiscarded   PhoneCallAction = 4
)

var PhoneCallAction_name = map[int32]string{
	0: "PhoneCallEmpty",
	1: "PhoneCallAccepted",
	2: "PhoneCallRequested",
	3: "PhoneCallCallWaiting",
	4: "PhoneCallDiscarded",
}

var PhoneCallAction_value = map[string]int32{
	"PhoneCallEmpty":       0,
	"PhoneCallAccepted":    1,
	"PhoneCallRequested":   2,
	"PhoneCallCallWaiting": 3,
	"PhoneCallDiscarded":   4,
}

func (x PhoneCallAction) Enum() *PhoneCallAction {
	p := new(PhoneCallAction)
	*p = x
	return p
}

func (x PhoneCallAction) String() string {
	return proto.EnumName(PhoneCallAction_name, int32(x))
}

func (x *PhoneCallAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PhoneCallAction_value, data, "PhoneCallAction")
	if err != nil {
		return err
	}
	*x = PhoneCallAction(value)
	return nil
}

func (PhoneCallAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{1}
}

// PhoneAcceptCall
// @Function
// @Return: PhoneCall
type PhoneAcceptCall struct {
	Peer      *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	AnswerSDP []byte     `protobuf:"bytes,2,req,name=AnswerSDP" json:"AnswerSDP"`
}

func (m *PhoneAcceptCall) Reset()         { *m = PhoneAcceptCall{} }
func (m *PhoneAcceptCall) String() string { return proto.CompactTextString(m) }
func (*PhoneAcceptCall) ProtoMessage()    {}
func (*PhoneAcceptCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{0}
}
func (m *PhoneAcceptCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneAcceptCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneAcceptCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneAcceptCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneAcceptCall.Merge(m, src)
}
func (m *PhoneAcceptCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneAcceptCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneAcceptCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneAcceptCall proto.InternalMessageInfo

func (m *PhoneAcceptCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneAcceptCall) GetAnswerSDP() []byte {
	if m != nil {
		return m.AnswerSDP
	}
	return nil
}

// PhoneRequestCall
// @Function
// @Return: PhoneCall
type PhoneRequestCall struct {
	Peer     *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	OfferSDP []byte     `protobuf:"bytes,2,req,name=OfferSDP" json:"OfferSDP"`
	Video    bool       `protobuf:"varint,3,req,name=Video" json:"Video"`
	RandomID int64      `protobuf:"varint,4,req,name=RandomID" json:"RandomID"`
}

func (m *PhoneRequestCall) Reset()         { *m = PhoneRequestCall{} }
func (m *PhoneRequestCall) String() string { return proto.CompactTextString(m) }
func (*PhoneRequestCall) ProtoMessage()    {}
func (*PhoneRequestCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{1}
}
func (m *PhoneRequestCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneRequestCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneRequestCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneRequestCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneRequestCall.Merge(m, src)
}
func (m *PhoneRequestCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneRequestCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneRequestCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneRequestCall proto.InternalMessageInfo

func (m *PhoneRequestCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneRequestCall) GetOfferSDP() []byte {
	if m != nil {
		return m.OfferSDP
	}
	return nil
}

func (m *PhoneRequestCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneRequestCall) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

// PhoneDiscardCall
// @Function
type PhoneDiscardCall struct {
	Peer     *InputUser    `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	Duration int32         `protobuf:"varint,2,req,name=Duration" json:"Duration"`
	Video    bool          `protobuf:"varint,3,req,name=Video" json:"Video"`
	Reason   DiscardReason `protobuf:"varint,4,req,name=Reason,enum=msg.DiscardReason" json:"Reason"`
}

func (m *PhoneDiscardCall) Reset()         { *m = PhoneDiscardCall{} }
func (m *PhoneDiscardCall) String() string { return proto.CompactTextString(m) }
func (*PhoneDiscardCall) ProtoMessage()    {}
func (*PhoneDiscardCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{2}
}
func (m *PhoneDiscardCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneDiscardCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneDiscardCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneDiscardCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneDiscardCall.Merge(m, src)
}
func (m *PhoneDiscardCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneDiscardCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneDiscardCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneDiscardCall proto.InternalMessageInfo

func (m *PhoneDiscardCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneDiscardCall) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PhoneDiscardCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneDiscardCall) GetReason() DiscardReason {
	if m != nil {
		return m.Reason
	}
	return DiscardReasonUnknown
}

// PhoneReceivedCall
// @Function
type PhoneReceivedCall struct {
	Peer *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
}

func (m *PhoneReceivedCall) Reset()         { *m = PhoneReceivedCall{} }
func (m *PhoneReceivedCall) String() string { return proto.CompactTextString(m) }
func (*PhoneReceivedCall) ProtoMessage()    {}
func (*PhoneReceivedCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{3}
}
func (m *PhoneReceivedCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneReceivedCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneReceivedCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneReceivedCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneReceivedCall.Merge(m, src)
}
func (m *PhoneReceivedCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneReceivedCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneReceivedCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneReceivedCall proto.InternalMessageInfo

func (m *PhoneReceivedCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

// PhoneSetCallRating
// @Function
type PhoneSetCallRating struct {
	Peer      *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	Initiator bool       `protobuf:"varint,2,req,name=Initiator" json:"Initiator"`
	Rate      int32      `protobuf:"varint,3,req,name=Rate" json:"Rate"`
	Comment   string     `protobuf:"bytes,4,opt,name=Comment" json:"Comment"`
}

func (m *PhoneSetCallRating) Reset()         { *m = PhoneSetCallRating{} }
func (m *PhoneSetCallRating) String() string { return proto.CompactTextString(m) }
func (*PhoneSetCallRating) ProtoMessage()    {}
func (*PhoneSetCallRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{4}
}
func (m *PhoneSetCallRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneSetCallRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneSetCallRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneSetCallRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneSetCallRating.Merge(m, src)
}
func (m *PhoneSetCallRating) XXX_Size() int {
	return m.Size()
}
func (m *PhoneSetCallRating) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneSetCallRating.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneSetCallRating proto.InternalMessageInfo

func (m *PhoneSetCallRating) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneSetCallRating) GetInitiator() bool {
	if m != nil {
		return m.Initiator
	}
	return false
}

func (m *PhoneSetCallRating) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *PhoneSetCallRating) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

// PhoneCall
type PhoneCall struct {
	UserID      int64    `protobuf:"varint,1,req,name=UserID" json:"UserID"`
	AccessHash  int64    `protobuf:"varint,2,req,name=AccessHash" json:"AccessHash"`
	Video       bool     `protobuf:"varint,3,req,name=Video" json:"Video"`
	Date        int64    `protobuf:"varint,4,req,name=Date" json:"Date"`
	StunServers []string `protobuf:"bytes,5,rep,name=StunServers" json:"StunServers,omitempty"`
}

func (m *PhoneCall) Reset()         { *m = PhoneCall{} }
func (m *PhoneCall) String() string { return proto.CompactTextString(m) }
func (*PhoneCall) ProtoMessage()    {}
func (*PhoneCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2bdd9662b80bdb9, []int{5}
}
func (m *PhoneCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneCall.Merge(m, src)
}
func (m *PhoneCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneCall proto.InternalMessageInfo

func (m *PhoneCall) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *PhoneCall) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *PhoneCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneCall) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *PhoneCall) GetStunServers() []string {
	if m != nil {
		return m.StunServers
	}
	return nil
}

func init() {
	proto.RegisterEnum("msg.DiscardReason", DiscardReason_name, DiscardReason_value)
	proto.RegisterEnum("msg.PhoneCallAction", PhoneCallAction_name, PhoneCallAction_value)
	proto.RegisterType((*PhoneAcceptCall)(nil), "msg.PhoneAcceptCall")
	proto.RegisterType((*PhoneRequestCall)(nil), "msg.PhoneRequestCall")
	proto.RegisterType((*PhoneDiscardCall)(nil), "msg.PhoneDiscardCall")
	proto.RegisterType((*PhoneReceivedCall)(nil), "msg.PhoneReceivedCall")
	proto.RegisterType((*PhoneSetCallRating)(nil), "msg.PhoneSetCallRating")
	proto.RegisterType((*PhoneCall)(nil), "msg.PhoneCall")
}

func init() { proto.RegisterFile("chat.api.phone.proto", fileDescriptor_f2bdd9662b80bdb9) }

var fileDescriptor_f2bdd9662b80bdb9 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x4d, 0x4f, 0xd4, 0x40,
	0x18, 0xc7, 0xfb, 0x06, 0xb2, 0x83, 0x62, 0x19, 0x41, 0x1a, 0x24, 0xb5, 0x69, 0x3c, 0x34, 0x24,
	0x16, 0xc3, 0xc5, 0x33, 0x50, 0x13, 0xf6, 0x60, 0x24, 0xdd, 0xa0, 0xf1, 0x38, 0xb4, 0x43, 0xb7,
	0x91, 0xce, 0xd4, 0xce, 0x14, 0xc2, 0x17, 0xf0, 0xaa, 0x27, 0x3f, 0x82, 0x7e, 0x15, 0x8e, 0x7b,
	0xf4, 0x64, 0x74, 0xf7, 0x8b, 0x98, 0x79, 0xb6, 0x5d, 0xb6, 0x21, 0x21, 0xeb, 0xa1, 0x49, 0xe7,
	0xf7, 0xbc, 0xcc, 0xff, 0x79, 0x19, 0xb4, 0x91, 0x0c, 0x89, 0x0c, 0x49, 0x99, 0x87, 0xe5, 0x90,
	0x33, 0x1a, 0x96, 0x15, 0x97, 0x1c, 0x9b, 0x85, 0xc8, 0xb6, 0x37, 0xc1, 0x94, 0xf0, 0x8a, 0x86,
	0xf2, 0xba, 0xa4, 0x62, 0x6a, 0xdb, 0x7e, 0x99, 0xe5, 0x72, 0x58, 0x9f, 0x85, 0x09, 0x2f, 0xf6,
	0x32, 0x9e, 0xf1, 0x3d, 0xc0, 0x67, 0xf5, 0x39, 0x9c, 0xe0, 0x00, 0x7f, 0x53, 0x77, 0xff, 0x23,
	0x7a, 0x7c, 0xa2, 0x32, 0x1f, 0x24, 0x09, 0x2d, 0xe5, 0x11, 0xb9, 0xb8, 0xc0, 0x3e, 0xb2, 0x4e,
	0x28, 0xad, 0x1c, 0xdd, 0x33, 0x82, 0xd5, 0xfd, 0xb5, 0xb0, 0x10, 0x59, 0xd8, 0x67, 0x65, 0x2d,
	0x4f, 0x05, 0xad, 0x62, 0xb0, 0x61, 0x1f, 0xf5, 0x0e, 0x98, 0xb8, 0xa2, 0xd5, 0x20, 0x3a, 0x71,
	0x0c, 0xcf, 0x08, 0x1e, 0x1e, 0x5a, 0x37, 0xbf, 0x9f, 0x6b, 0xf1, 0x2d, 0xf6, 0xbf, 0xeb, 0xc8,
	0x86, 0xdc, 0x31, 0xfd, 0x5c, 0x53, 0xb1, 0x78, 0x72, 0x0f, 0xad, 0xbc, 0x3b, 0x3f, 0xbf, 0x9b,
	0x7b, 0x46, 0xf1, 0x36, 0x5a, 0x7a, 0x9f, 0xa7, 0x94, 0x3b, 0xa6, 0x67, 0x04, 0x2b, 0x8d, 0x79,
	0x8a, 0x54, 0x74, 0x4c, 0x58, 0xca, 0x8b, 0x7e, 0xe4, 0x58, 0x9e, 0x11, 0x98, 0x6d, 0x74, 0x4b,
	0xfd, 0x1f, 0xad, 0xb0, 0x28, 0x17, 0x09, 0xa9, 0xd2, 0xff, 0x11, 0x16, 0xd5, 0x15, 0x91, 0x39,
	0x67, 0x20, 0x6c, 0xa9, 0x4d, 0xdd, 0xd2, 0x7b, 0x85, 0xbd, 0x42, 0xcb, 0x31, 0x25, 0x82, 0x33,
	0x90, 0xb5, 0xb6, 0x8f, 0xe1, 0x8e, 0x46, 0xc3, 0xd4, 0xd2, 0x04, 0x34, 0x7e, 0xfe, 0x6b, 0xb4,
	0xde, 0x34, 0x30, 0xa1, 0xf9, 0x25, 0x5d, 0x58, 0xa8, 0x6a, 0x3d, 0x86, 0xc8, 0x01, 0x85, 0xb6,
	0xc7, 0x44, 0xe6, 0x2c, 0x5b, 0x74, 0xb2, 0x7d, 0x96, 0xcb, 0x9c, 0x48, 0x5e, 0x41, 0x91, 0x6d,
	0x15, 0xb7, 0x18, 0x3b, 0xc8, 0x8a, 0x89, 0xa4, 0x50, 0x64, 0xdb, 0x03, 0x20, 0xd8, 0x45, 0x0f,
	0x8e, 0x78, 0x51, 0x50, 0x26, 0x1d, 0xcb, 0xd3, 0x83, 0x5e, 0x63, 0x6c, 0xa1, 0xff, 0x53, 0x47,
	0x3d, 0x10, 0x06, 0xa5, 0xec, 0xa0, 0x65, 0x75, 0x73, 0x3f, 0x02, 0x45, 0xed, 0xa0, 0x1a, 0x86,
	0x5f, 0x20, 0xa4, 0xb6, 0x52, 0x88, 0x63, 0x22, 0x86, 0x20, 0xa5, 0xf5, 0x98, 0xe3, 0xf7, 0x76,
	0xdc, 0x41, 0x56, 0xa4, 0x74, 0xce, 0xaf, 0x01, 0x10, 0xec, 0xa1, 0xd5, 0x81, 0xac, 0xd9, 0x80,
	0x56, 0x97, 0xb4, 0x12, 0xce, 0x92, 0x67, 0x06, 0xbd, 0x78, 0x1e, 0xed, 0x7e, 0xd5, 0xd1, 0xa3,
	0xce, 0x6c, 0xb0, 0x83, 0x36, 0x3a, 0xe0, 0x94, 0x7d, 0x62, 0xfc, 0x8a, 0xd9, 0x1a, 0xde, 0x42,
	0x4f, 0x3a, 0x96, 0xb7, 0xb9, 0x10, 0x34, 0xb5, 0x75, 0xbc, 0x89, 0xd6, 0xbb, 0xf3, 0xad, 0xc5,
	0xb5, 0x6d, 0xdc, 0xf1, 0x3f, 0x26, 0x2c, 0xab, 0x4b, 0xdb, 0xc4, 0xcf, 0xd0, 0x56, 0xc7, 0xa0,
	0x0e, 0x9c, 0x31, 0x9a, 0x48, 0xdb, 0xda, 0xfd, 0xa2, 0x37, 0x6f, 0x55, 0xf5, 0xee, 0x20, 0x81,
	0x7d, 0xc3, 0x68, 0x6d, 0x86, 0xde, 0x14, 0xa5, 0xbc, 0xb6, 0x35, 0x75, 0xe9, 0x9c, 0x9b, 0x7a,
	0xd6, 0xa0, 0xe5, 0x69, 0xb3, 0x12, 0xb0, 0x0f, 0xd3, 0x17, 0x49, 0x53, 0xdb, 0x50, 0x65, 0xcd,
	0xb8, 0xfa, 0x3e, 0x90, 0x5c, 0x2d, 0x8b, 0x6d, 0x76, 0x22, 0x1a, 0x59, 0x34, 0xb5, 0xad, 0xc3,
	0x9d, 0xd1, 0x5f, 0x57, 0xbb, 0x19, 0xbb, 0xfa, 0x68, 0xec, 0xea, 0x7f, 0xc6, 0xae, 0xfe, 0x6d,
	0xe2, 0x6a, 0xa3, 0x89, 0xab, 0xfd, 0x9a, 0xb8, 0xda, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1,
	0xe3, 0xf0, 0x57, 0xb3, 0x04, 0x00, 0x00,
}

func (m *PhoneAcceptCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneAcceptCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneAcceptCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AnswerSDP != nil {
		i -= len(m.AnswerSDP)
		copy(dAtA[i:], m.AnswerSDP)
		i = encodeVarintChatApiPhone(dAtA, i, uint64(len(m.AnswerSDP)))
		i--
		dAtA[i] = 0x12
	}
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneRequestCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneRequestCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneRequestCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x20
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	if m.OfferSDP != nil {
		i -= len(m.OfferSDP)
		copy(dAtA[i:], m.OfferSDP)
		i = encodeVarintChatApiPhone(dAtA, i, uint64(len(m.OfferSDP)))
		i--
		dAtA[i] = 0x12
	}
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneDiscardCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneDiscardCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneDiscardCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.Reason))
	i--
	dAtA[i] = 0x20
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.Duration))
	i--
	dAtA[i] = 0x10
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneReceivedCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneReceivedCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneReceivedCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneSetCallRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneSetCallRating) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneSetCallRating) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Comment)
	copy(dAtA[i:], m.Comment)
	i = encodeVarintChatApiPhone(dAtA, i, uint64(len(m.Comment)))
	i--
	dAtA[i] = 0x22
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.Rate))
	i--
	dAtA[i] = 0x18
	i--
	if m.Initiator {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StunServers) > 0 {
		for iNdEx := len(m.StunServers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.StunServers[iNdEx])
			copy(dAtA[i:], m.StunServers[iNdEx])
			i = encodeVarintChatApiPhone(dAtA, i, uint64(len(m.StunServers[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.Date))
	i--
	dAtA[i] = 0x20
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.AccessHash))
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatApiPhone(dAtA, i, uint64(m.UserID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintChatApiPhone(dAtA []byte, offset int, v uint64) int {
	offset -= sovChatApiPhone(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PhoneAcceptCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	if m.AnswerSDP != nil {
		l = len(m.AnswerSDP)
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	return n
}

func (m *PhoneRequestCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	if m.OfferSDP != nil {
		l = len(m.OfferSDP)
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	n += 2
	n += 1 + sovChatApiPhone(uint64(m.RandomID))
	return n
}

func (m *PhoneDiscardCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	n += 1 + sovChatApiPhone(uint64(m.Duration))
	n += 2
	n += 1 + sovChatApiPhone(uint64(m.Reason))
	return n
}

func (m *PhoneReceivedCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	return n
}

func (m *PhoneSetCallRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiPhone(uint64(l))
	}
	n += 2
	n += 1 + sovChatApiPhone(uint64(m.Rate))
	l = len(m.Comment)
	n += 1 + l + sovChatApiPhone(uint64(l))
	return n
}

func (m *PhoneCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiPhone(uint64(m.UserID))
	n += 1 + sovChatApiPhone(uint64(m.AccessHash))
	n += 2
	n += 1 + sovChatApiPhone(uint64(m.Date))
	if len(m.StunServers) > 0 {
		for _, s := range m.StunServers {
			l = len(s)
			n += 1 + l + sovChatApiPhone(uint64(l))
		}
	}
	return n
}

func sovChatApiPhone(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozChatApiPhone(x uint64) (n int) {
	return sovChatApiPhone(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PhoneAcceptCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneAcceptCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneAcceptCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnswerSDP", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnswerSDP = append(m.AnswerSDP[:0], dAtA[iNdEx:postIndex]...)
			if m.AnswerSDP == nil {
				m.AnswerSDP = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AnswerSDP")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneRequestCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneRequestCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneRequestCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferSDP", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OfferSDP = append(m.OfferSDP[:0], dAtA[iNdEx:postIndex]...)
			if m.OfferSDP == nil {
				m.OfferSDP = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("OfferSDP")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneDiscardCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneDiscardCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneDiscardCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= DiscardReason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Duration")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Reason")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneReceivedCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneReceivedCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneReceivedCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneSetCallRating) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneSetCallRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneSetCallRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initiator", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Initiator = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rate", wireType)
			}
			m.Rate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Initiator")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Rate")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessHash", wireType)
			}
			m.AccessHash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccessHash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			m.Date = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Date |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StunServers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StunServers = append(m.StunServers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("UserID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AccessHash")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Date")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiPhone(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiPhone
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiPhone
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChatApiPhone
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupChatApiPhone
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthChatApiPhone
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthChatApiPhone        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiPhone          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupChatApiPhone = fmt.Errorf("proto: unexpected end of group")
)
