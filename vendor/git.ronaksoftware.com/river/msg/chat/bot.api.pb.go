// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bot.api.proto

package msg

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// BotStart
// @Function (Client)
// @Return: Bool
type BotStart struct {
	Bot        *InputPeer `protobuf:"bytes,1,req,name=Bot" json:"Bot,omitempty"`
	RandomID   int64      `protobuf:"varint,2,req,name=RandomID" json:"RandomID"`
	StartParam string     `protobuf:"bytes,3,req,name=StartParam" json:"StartParam"`
}

func (m *BotStart) Reset()         { *m = BotStart{} }
func (m *BotStart) String() string { return proto.CompactTextString(m) }
func (*BotStart) ProtoMessage()    {}
func (*BotStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{0}
}
func (m *BotStart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotStart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotStart.Merge(m, src)
}
func (m *BotStart) XXX_Size() int {
	return m.Size()
}
func (m *BotStart) XXX_DiscardUnknown() {
	xxx_messageInfo_BotStart.DiscardUnknown(m)
}

var xxx_messageInfo_BotStart proto.InternalMessageInfo

func (m *BotStart) GetBot() *InputPeer {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *BotStart) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotStart) GetStartParam() string {
	if m != nil {
		return m.StartParam
	}
	return ""
}

// BotRecall
// @Function (BotOnly)
// @Return: BotRecalled
type BotRecall struct {
	Version int32 `protobuf:"varint,1,req,name=Version" json:"Version"`
}

func (m *BotRecall) Reset()         { *m = BotRecall{} }
func (m *BotRecall) String() string { return proto.CompactTextString(m) }
func (*BotRecall) ProtoMessage()    {}
func (*BotRecall) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{1}
}
func (m *BotRecall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotRecall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotRecall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotRecall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotRecall.Merge(m, src)
}
func (m *BotRecall) XXX_Size() int {
	return m.Size()
}
func (m *BotRecall) XXX_DiscardUnknown() {
	xxx_messageInfo_BotRecall.DiscardUnknown(m)
}

var xxx_messageInfo_BotRecall proto.InternalMessageInfo

func (m *BotRecall) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// BotSetInfo
// @Function (BotOnly)
// @Return: Bool
type BotSetInfo struct {
	BotID       int64          `protobuf:"varint,1,req,name=BotID" json:"BotID"`
	RandomID    int64          `protobuf:"varint,2,req,name=RandomID" json:"RandomID"`
	Owner       int64          `protobuf:"varint,3,req,name=Owner" json:"Owner"`
	BotCommands []*BotCommands `protobuf:"bytes,4,rep,name=BotCommands" json:"BotCommands,omitempty"`
	Description string         `protobuf:"bytes,5,req,name=Description" json:"Description"`
}

func (m *BotSetInfo) Reset()         { *m = BotSetInfo{} }
func (m *BotSetInfo) String() string { return proto.CompactTextString(m) }
func (*BotSetInfo) ProtoMessage()    {}
func (*BotSetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{2}
}
func (m *BotSetInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSetInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSetInfo.Merge(m, src)
}
func (m *BotSetInfo) XXX_Size() int {
	return m.Size()
}
func (m *BotSetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BotSetInfo proto.InternalMessageInfo

func (m *BotSetInfo) GetBotID() int64 {
	if m != nil {
		return m.BotID
	}
	return 0
}

func (m *BotSetInfo) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotSetInfo) GetOwner() int64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *BotSetInfo) GetBotCommands() []*BotCommands {
	if m != nil {
		return m.BotCommands
	}
	return nil
}

func (m *BotSetInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// BotGet
// @Function (BotOnly)
// @Return: BotInfo
type BotGet struct {
	UserID int64 `protobuf:"varint,1,req,name=UserID" json:"UserID"`
	Limit  int32 `protobuf:"varint,2,opt,name=Limit" json:"Limit"`
}

func (m *BotGet) Reset()         { *m = BotGet{} }
func (m *BotGet) String() string { return proto.CompactTextString(m) }
func (*BotGet) ProtoMessage()    {}
func (*BotGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{3}
}
func (m *BotGet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotGet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotGet.Merge(m, src)
}
func (m *BotGet) XXX_Size() int {
	return m.Size()
}
func (m *BotGet) XXX_DiscardUnknown() {
	xxx_messageInfo_BotGet.DiscardUnknown(m)
}

var xxx_messageInfo_BotGet proto.InternalMessageInfo

func (m *BotGet) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *BotGet) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// BotSendMessage
// @Function (BotOnly)
// @Return: UserMessage
type BotSendMessage struct {
	RandomID        int64            `protobuf:"varint,1,req,name=RandomID" json:"RandomID"`
	Peer            *InputPeer       `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	Body            string           `protobuf:"bytes,5,req,name=Body" json:"Body"`
	ReplyTo         int64            `protobuf:"varint,6,opt,name=ReplyTo" json:"ReplyTo"`
	ClearDraft      bool             `protobuf:"varint,7,opt,name=ClearDraft" json:"ClearDraft"`
	Entities        []*MessageEntity `protobuf:"bytes,8,rep,name=Entities" json:"Entities,omitempty"`
	ReplyMarkup     int64            `protobuf:"varint,9,opt,name=ReplyMarkup" json:"ReplyMarkup"`
	ReplyMarkupData []byte           `protobuf:"bytes,10,opt,name=ReplyMarkupData" json:"ReplyMarkupData"`
}

func (m *BotSendMessage) Reset()         { *m = BotSendMessage{} }
func (m *BotSendMessage) String() string { return proto.CompactTextString(m) }
func (*BotSendMessage) ProtoMessage()    {}
func (*BotSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{4}
}
func (m *BotSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSendMessage.Merge(m, src)
}
func (m *BotSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *BotSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BotSendMessage proto.InternalMessageInfo

func (m *BotSendMessage) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotSendMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotSendMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *BotSendMessage) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

func (m *BotSendMessage) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *BotSendMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *BotSendMessage) GetReplyMarkup() int64 {
	if m != nil {
		return m.ReplyMarkup
	}
	return 0
}

func (m *BotSendMessage) GetReplyMarkupData() []byte {
	if m != nil {
		return m.ReplyMarkupData
	}
	return nil
}

// BotEditMessage
// @Function (BotOnly)
// @Return: UserMessage
type BotEditMessage struct {
	RandomID        int64            `protobuf:"varint,1,req,name=RandomID" json:"RandomID"`
	Peer            *InputPeer       `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	Body            string           `protobuf:"bytes,3,req,name=Body" json:"Body"`
	MessageID       int64            `protobuf:"varint,4,req,name=MessageID" json:"MessageID"`
	Entities        []*MessageEntity `protobuf:"bytes,5,rep,name=Entities" json:"Entities,omitempty"`
	ReplyMarkup     int64            `protobuf:"varint,6,opt,name=ReplyMarkup" json:"ReplyMarkup"`
	ReplyMarkupData []byte           `protobuf:"bytes,7,opt,name=ReplyMarkupData" json:"ReplyMarkupData"`
}

func (m *BotEditMessage) Reset()         { *m = BotEditMessage{} }
func (m *BotEditMessage) String() string { return proto.CompactTextString(m) }
func (*BotEditMessage) ProtoMessage()    {}
func (*BotEditMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{5}
}
func (m *BotEditMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotEditMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotEditMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotEditMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotEditMessage.Merge(m, src)
}
func (m *BotEditMessage) XXX_Size() int {
	return m.Size()
}
func (m *BotEditMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BotEditMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BotEditMessage proto.InternalMessageInfo

func (m *BotEditMessage) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotEditMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotEditMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *BotEditMessage) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *BotEditMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *BotEditMessage) GetReplyMarkup() int64 {
	if m != nil {
		return m.ReplyMarkup
	}
	return 0
}

func (m *BotEditMessage) GetReplyMarkupData() []byte {
	if m != nil {
		return m.ReplyMarkupData
	}
	return nil
}

// BotSendMedia
// @Function (BotOnly)
// @Return: UserMessage
type BotSendMedia struct {
	RandomID  int64          `protobuf:"varint,1,req,name=RandomID" json:"RandomID"`
	Peer      *InputPeer     `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	MediaType InputMediaType `protobuf:"varint,3,req,name=MediaType,enum=msg.InputMediaType" json:"MediaType"`
	MediaData []byte         `protobuf:"bytes,4,req,name=MediaData" json:"MediaData"`
	ReplyTo   int64          `protobuf:"varint,5,opt,name=ReplyTo" json:"ReplyTo"`
}

func (m *BotSendMedia) Reset()         { *m = BotSendMedia{} }
func (m *BotSendMedia) String() string { return proto.CompactTextString(m) }
func (*BotSendMedia) ProtoMessage()    {}
func (*BotSendMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{6}
}
func (m *BotSendMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSendMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSendMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSendMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSendMedia.Merge(m, src)
}
func (m *BotSendMedia) XXX_Size() int {
	return m.Size()
}
func (m *BotSendMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSendMedia.DiscardUnknown(m)
}

var xxx_messageInfo_BotSendMedia proto.InternalMessageInfo

func (m *BotSendMedia) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotSendMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotSendMedia) GetMediaType() InputMediaType {
	if m != nil {
		return m.MediaType
	}
	return InputMediaTypeEmpty
}

func (m *BotSendMedia) GetMediaData() []byte {
	if m != nil {
		return m.MediaData
	}
	return nil
}

func (m *BotSendMedia) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

// BotSaveFilePart
// @Function (BotOnly)
// @Returns: Bool
type BotSaveFilePart struct {
	FileID     int64  `protobuf:"varint,1,req,name=FileID" json:"FileID"`
	PartID     int32  `protobuf:"varint,2,req,name=PartID" json:"PartID"`
	TotalParts int32  `protobuf:"varint,3,req,name=TotalParts" json:"TotalParts"`
	Bytes      []byte `protobuf:"bytes,4,req,name=Bytes" json:"Bytes"`
}

func (m *BotSaveFilePart) Reset()         { *m = BotSaveFilePart{} }
func (m *BotSaveFilePart) String() string { return proto.CompactTextString(m) }
func (*BotSaveFilePart) ProtoMessage()    {}
func (*BotSaveFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{7}
}
func (m *BotSaveFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSaveFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSaveFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSaveFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSaveFilePart.Merge(m, src)
}
func (m *BotSaveFilePart) XXX_Size() int {
	return m.Size()
}
func (m *BotSaveFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSaveFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_BotSaveFilePart proto.InternalMessageInfo

func (m *BotSaveFilePart) GetFileID() int64 {
	if m != nil {
		return m.FileID
	}
	return 0
}

func (m *BotSaveFilePart) GetPartID() int32 {
	if m != nil {
		return m.PartID
	}
	return 0
}

func (m *BotSaveFilePart) GetTotalParts() int32 {
	if m != nil {
		return m.TotalParts
	}
	return 0
}

func (m *BotSaveFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

// BotUpdateProfile
// @Function (BotOnly)
// @Return: Bool
type BotUpdateProfile struct {
	BotID int64  `protobuf:"varint,1,req,name=BotID" json:"BotID"`
	Name  string `protobuf:"bytes,2,req,name=Name" json:"Name"`
	Bio   string `protobuf:"bytes,4,opt,name=Bio" json:"Bio"`
}

func (m *BotUpdateProfile) Reset()         { *m = BotUpdateProfile{} }
func (m *BotUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*BotUpdateProfile) ProtoMessage()    {}
func (*BotUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{8}
}
func (m *BotUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotUpdateProfile.Merge(m, src)
}
func (m *BotUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *BotUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_BotUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_BotUpdateProfile proto.InternalMessageInfo

func (m *BotUpdateProfile) GetBotID() int64 {
	if m != nil {
		return m.BotID
	}
	return 0
}

func (m *BotUpdateProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BotUpdateProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

// BotUpdatePhoto
// @Function (BotOnly)
// @Returns: Bool
type BotUpdatePhoto struct {
	File  *InputFileLocation `protobuf:"bytes,1,opt,name=File" json:"File,omitempty"`
	BotID int64              `protobuf:"varint,2,req,name=BotID" json:"BotID"`
}

func (m *BotUpdatePhoto) Reset()         { *m = BotUpdatePhoto{} }
func (m *BotUpdatePhoto) String() string { return proto.CompactTextString(m) }
func (*BotUpdatePhoto) ProtoMessage()    {}
func (*BotUpdatePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{9}
}
func (m *BotUpdatePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotUpdatePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotUpdatePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotUpdatePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotUpdatePhoto.Merge(m, src)
}
func (m *BotUpdatePhoto) XXX_Size() int {
	return m.Size()
}
func (m *BotUpdatePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_BotUpdatePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_BotUpdatePhoto proto.InternalMessageInfo

func (m *BotUpdatePhoto) GetFile() *InputFileLocation {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *BotUpdatePhoto) GetBotID() int64 {
	if m != nil {
		return m.BotID
	}
	return 0
}

// BotRevokeToken
// @Function (BotOnly)
// @Returns: BotToken
type BotRevokeToken struct {
	BotID  int64 `protobuf:"varint,1,req,name=BotID" json:"BotID"`
	GetNew bool  `protobuf:"varint,2,req,name=GetNew" json:"GetNew"`
}

func (m *BotRevokeToken) Reset()         { *m = BotRevokeToken{} }
func (m *BotRevokeToken) String() string { return proto.CompactTextString(m) }
func (*BotRevokeToken) ProtoMessage()    {}
func (*BotRevokeToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{10}
}
func (m *BotRevokeToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotRevokeToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotRevokeToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotRevokeToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotRevokeToken.Merge(m, src)
}
func (m *BotRevokeToken) XXX_Size() int {
	return m.Size()
}
func (m *BotRevokeToken) XXX_DiscardUnknown() {
	xxx_messageInfo_BotRevokeToken.DiscardUnknown(m)
}

var xxx_messageInfo_BotRevokeToken proto.InternalMessageInfo

func (m *BotRevokeToken) GetBotID() int64 {
	if m != nil {
		return m.BotID
	}
	return 0
}

func (m *BotRevokeToken) GetGetNew() bool {
	if m != nil {
		return m.GetNew
	}
	return false
}

// BotDeleteMessage
// @Function (BotOnly)
// @Returns: Bool
type BotDeleteMessage struct {
	Peer       *InputPeer `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	MessageIDs []int64    `protobuf:"varint,2,rep,name=MessageIDs" json:"MessageIDs,omitempty"`
}

func (m *BotDeleteMessage) Reset()         { *m = BotDeleteMessage{} }
func (m *BotDeleteMessage) String() string { return proto.CompactTextString(m) }
func (*BotDeleteMessage) ProtoMessage()    {}
func (*BotDeleteMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{11}
}
func (m *BotDeleteMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotDeleteMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotDeleteMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotDeleteMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotDeleteMessage.Merge(m, src)
}
func (m *BotDeleteMessage) XXX_Size() int {
	return m.Size()
}
func (m *BotDeleteMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BotDeleteMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BotDeleteMessage proto.InternalMessageInfo

func (m *BotDeleteMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotDeleteMessage) GetMessageIDs() []int64 {
	if m != nil {
		return m.MessageIDs
	}
	return nil
}

// BotSetCallbackAnswer
// @Function (BotOnly)
// @Returns: Bool
type BotSetCallbackAnswer struct {
	QueryID   int64  `protobuf:"varint,1,req,name=QueryID" json:"QueryID"`
	Url       string `protobuf:"bytes,2,opt,name=Url" json:"Url"`
	Message   string `protobuf:"bytes,3,opt,name=Message" json:"Message"`
	CacheTime int32  `protobuf:"varint,4,req,name=CacheTime" json:"CacheTime"`
}

func (m *BotSetCallbackAnswer) Reset()         { *m = BotSetCallbackAnswer{} }
func (m *BotSetCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*BotSetCallbackAnswer) ProtoMessage()    {}
func (*BotSetCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{12}
}
func (m *BotSetCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSetCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSetCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSetCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSetCallbackAnswer.Merge(m, src)
}
func (m *BotSetCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *BotSetCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSetCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_BotSetCallbackAnswer proto.InternalMessageInfo

func (m *BotSetCallbackAnswer) GetQueryID() int64 {
	if m != nil {
		return m.QueryID
	}
	return 0
}

func (m *BotSetCallbackAnswer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *BotSetCallbackAnswer) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BotSetCallbackAnswer) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

// BotGetCallbackAnswer
// @Function (Client)
// @Returns: BotCallbackAnswer
type BotGetCallbackAnswer struct {
	Peer      *InputPeer `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	MessageID int64      `protobuf:"varint,2,opt,name=MessageID" json:"MessageID"`
	Data      []byte     `protobuf:"bytes,3,req,name=Data" json:"Data"`
}

func (m *BotGetCallbackAnswer) Reset()         { *m = BotGetCallbackAnswer{} }
func (m *BotGetCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*BotGetCallbackAnswer) ProtoMessage()    {}
func (*BotGetCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{13}
}
func (m *BotGetCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotGetCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotGetCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotGetCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotGetCallbackAnswer.Merge(m, src)
}
func (m *BotGetCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *BotGetCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_BotGetCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_BotGetCallbackAnswer proto.InternalMessageInfo

func (m *BotGetCallbackAnswer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotGetCallbackAnswer) GetMessageID() int64 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *BotGetCallbackAnswer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// BotGetInlineResults
// @Function (Client)
// @Returns: BotResults
type BotGetInlineResults struct {
	Bot      *InputUser        `protobuf:"bytes,1,req,name=Bot" json:"Bot,omitempty"`
	Peer     *InputPeer        `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	Query    string            `protobuf:"bytes,3,req,name=Query" json:"Query"`
	Offset   string            `protobuf:"bytes,4,req,name=Offset" json:"Offset"`
	Location *InputGeoLocation `protobuf:"bytes,5,opt,name=Location" json:"Location,omitempty"`
}

func (m *BotGetInlineResults) Reset()         { *m = BotGetInlineResults{} }
func (m *BotGetInlineResults) String() string { return proto.CompactTextString(m) }
func (*BotGetInlineResults) ProtoMessage()    {}
func (*BotGetInlineResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{14}
}
func (m *BotGetInlineResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotGetInlineResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotGetInlineResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotGetInlineResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotGetInlineResults.Merge(m, src)
}
func (m *BotGetInlineResults) XXX_Size() int {
	return m.Size()
}
func (m *BotGetInlineResults) XXX_DiscardUnknown() {
	xxx_messageInfo_BotGetInlineResults.DiscardUnknown(m)
}

var xxx_messageInfo_BotGetInlineResults proto.InternalMessageInfo

func (m *BotGetInlineResults) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *BotGetInlineResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotGetInlineResults) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *BotGetInlineResults) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *BotGetInlineResults) GetLocation() *InputGeoLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

// BotSetInlineResults
// @Function (BotOnly)
// @Returns: Bool
type BotSetInlineResults struct {
	// Set this flag if the results are composed of media files
	Gallery bool `protobuf:"varint,1,req,name=Gallery" json:"Gallery"`
	// Set this flag if results may be cached on the server side only for the user that sent the query.
	// By default, results may be returned to any user who sends the same query
	Private bool `protobuf:"varint,2,req,name=Private" json:"Private"`
	// The maximum amount of time in seconds that the result of the inline query may be cached on the server.
	// Defaults to 300.
	CacheTime int64 `protobuf:"varint,3,req,name=CacheTime" json:"CacheTime"`
	// Pass the offset that a client should send in the next query with the same text to receive more results.
	// Pass an empty string if there are no more results or if you don‘t
	// support pagination. Offset length can’t exceed 64 bytes.
	NextOffset string `protobuf:"bytes,4,opt,name=NextOffset" json:"NextOffset"`
	// Vector of results for the inline query
	Results []*InputBotInlineResult `protobuf:"bytes,5,rep,name=Results" json:"Results,omitempty"`
	// If passed, clients will display a button with specified text that switches the user to a private chat with
	// the bot and sends the bot a start message with a certain parameter.
	SwitchPM *BotInlineSwitchPM `protobuf:"bytes,6,opt,name=SwitchPM" json:"SwitchPM,omitempty"`
	// Unique identifier for the answered query
	QueryID int64 `protobuf:"varint,7,req,name=QueryID" json:"QueryID"`
}

func (m *BotSetInlineResults) Reset()         { *m = BotSetInlineResults{} }
func (m *BotSetInlineResults) String() string { return proto.CompactTextString(m) }
func (*BotSetInlineResults) ProtoMessage()    {}
func (*BotSetInlineResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{15}
}
func (m *BotSetInlineResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSetInlineResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSetInlineResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSetInlineResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSetInlineResults.Merge(m, src)
}
func (m *BotSetInlineResults) XXX_Size() int {
	return m.Size()
}
func (m *BotSetInlineResults) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSetInlineResults.DiscardUnknown(m)
}

var xxx_messageInfo_BotSetInlineResults proto.InternalMessageInfo

func (m *BotSetInlineResults) GetGallery() bool {
	if m != nil {
		return m.Gallery
	}
	return false
}

func (m *BotSetInlineResults) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *BotSetInlineResults) GetCacheTime() int64 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

func (m *BotSetInlineResults) GetNextOffset() string {
	if m != nil {
		return m.NextOffset
	}
	return ""
}

func (m *BotSetInlineResults) GetResults() []*InputBotInlineResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *BotSetInlineResults) GetSwitchPM() *BotInlineSwitchPM {
	if m != nil {
		return m.SwitchPM
	}
	return nil
}

func (m *BotSetInlineResults) GetQueryID() int64 {
	if m != nil {
		return m.QueryID
	}
	return 0
}

// BotSendInlineResults
// @Function (Client)
// @Returns: Bool + Updates
type BotSendInlineResults struct {
	RandomID   int64      `protobuf:"varint,1,req,name=RandomID" json:"RandomID"`
	QueryID    int64      `protobuf:"varint,2,req,name=QueryID" json:"QueryID"`
	ResultID   string     `protobuf:"bytes,3,req,name=ResultID" json:"ResultID"`
	ClearDraft bool       `protobuf:"varint,4,req,name=ClearDraft" json:"ClearDraft"`
	Peer       *InputPeer `protobuf:"bytes,5,req,name=Peer" json:"Peer,omitempty"`
	ReplyTo    int64      `protobuf:"varint,6,req,name=ReplyTo" json:"ReplyTo"`
	Silent     bool       `protobuf:"varint,7,opt,name=Silent" json:"Silent"`
	HideVia    bool       `protobuf:"varint,8,opt,name=HideVia" json:"HideVia"`
}

func (m *BotSendInlineResults) Reset()         { *m = BotSendInlineResults{} }
func (m *BotSendInlineResults) String() string { return proto.CompactTextString(m) }
func (*BotSendInlineResults) ProtoMessage()    {}
func (*BotSendInlineResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{16}
}
func (m *BotSendInlineResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSendInlineResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSendInlineResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSendInlineResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSendInlineResults.Merge(m, src)
}
func (m *BotSendInlineResults) XXX_Size() int {
	return m.Size()
}
func (m *BotSendInlineResults) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSendInlineResults.DiscardUnknown(m)
}

var xxx_messageInfo_BotSendInlineResults proto.InternalMessageInfo

func (m *BotSendInlineResults) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotSendInlineResults) GetQueryID() int64 {
	if m != nil {
		return m.QueryID
	}
	return 0
}

func (m *BotSendInlineResults) GetResultID() string {
	if m != nil {
		return m.ResultID
	}
	return ""
}

func (m *BotSendInlineResults) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *BotSendInlineResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotSendInlineResults) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

func (m *BotSendInlineResults) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *BotSendInlineResults) GetHideVia() bool {
	if m != nil {
		return m.HideVia
	}
	return false
}

// BotResults
type BotResults struct {
	Gallery    bool               `protobuf:"varint,1,req,name=Gallery" json:"Gallery"`
	QueryID    int64              `protobuf:"varint,2,req,name=QueryID" json:"QueryID"`
	NextOffset string             `protobuf:"bytes,3,opt,name=NextOffset" json:"NextOffset"`
	SwitchPM   *BotInlineSwitchPM `protobuf:"bytes,4,opt,name=SwitchPM" json:"SwitchPM,omitempty"`
	Results    []*BotInlineResult `protobuf:"bytes,5,rep,name=Results" json:"Results,omitempty"`
}

func (m *BotResults) Reset()         { *m = BotResults{} }
func (m *BotResults) String() string { return proto.CompactTextString(m) }
func (*BotResults) ProtoMessage()    {}
func (*BotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{17}
}
func (m *BotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotResults.Merge(m, src)
}
func (m *BotResults) XXX_Size() int {
	return m.Size()
}
func (m *BotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_BotResults.DiscardUnknown(m)
}

var xxx_messageInfo_BotResults proto.InternalMessageInfo

func (m *BotResults) GetGallery() bool {
	if m != nil {
		return m.Gallery
	}
	return false
}

func (m *BotResults) GetQueryID() int64 {
	if m != nil {
		return m.QueryID
	}
	return 0
}

func (m *BotResults) GetNextOffset() string {
	if m != nil {
		return m.NextOffset
	}
	return ""
}

func (m *BotResults) GetSwitchPM() *BotInlineSwitchPM {
	if m != nil {
		return m.SwitchPM
	}
	return nil
}

func (m *BotResults) GetResults() []*BotInlineResult {
	if m != nil {
		return m.Results
	}
	return nil
}

// BotInlineSwitchPM
type BotInlineSwitchPM struct {
	// Text for the button that switches the user to a private chat with the bot
	// and sends the bot a start message with the parameter start_parameter (can be empty)
	Text string `protobuf:"bytes,1,req,name=Text" json:"Text"`
	// The parameter for the /start parameter
	StartParam string `protobuf:"bytes,2,req,name=StartParam" json:"StartParam"`
}

func (m *BotInlineSwitchPM) Reset()         { *m = BotInlineSwitchPM{} }
func (m *BotInlineSwitchPM) String() string { return proto.CompactTextString(m) }
func (*BotInlineSwitchPM) ProtoMessage()    {}
func (*BotInlineSwitchPM) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{18}
}
func (m *BotInlineSwitchPM) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotInlineSwitchPM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotInlineSwitchPM.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotInlineSwitchPM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotInlineSwitchPM.Merge(m, src)
}
func (m *BotInlineSwitchPM) XXX_Size() int {
	return m.Size()
}
func (m *BotInlineSwitchPM) XXX_DiscardUnknown() {
	xxx_messageInfo_BotInlineSwitchPM.DiscardUnknown(m)
}

var xxx_messageInfo_BotInlineSwitchPM proto.InternalMessageInfo

func (m *BotInlineSwitchPM) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *BotInlineSwitchPM) GetStartParam() string {
	if m != nil {
		return m.StartParam
	}
	return ""
}

// BotInlineResult
type BotInlineResult struct {
	ID          string            `protobuf:"bytes,1,req,name=ID" json:"ID"`
	Type        MediaType         `protobuf:"varint,2,req,name=Type,enum=msg.MediaType" json:"Type"`
	Title       string            `protobuf:"bytes,3,opt,name=Title" json:"Title"`
	Description string            `protobuf:"bytes,4,opt,name=Description" json:"Description"`
	Url         string            `protobuf:"bytes,5,opt,name=Url" json:"Url"`
	Thumb       *MediaWebDocument `protobuf:"bytes,6,opt,name=Thumb" json:"Thumb,omitempty"`
	Message     *BotInlineMessage `protobuf:"bytes,7,req,name=Message" json:"Message,omitempty"`
}

func (m *BotInlineResult) Reset()         { *m = BotInlineResult{} }
func (m *BotInlineResult) String() string { return proto.CompactTextString(m) }
func (*BotInlineResult) ProtoMessage()    {}
func (*BotInlineResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{19}
}
func (m *BotInlineResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotInlineResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotInlineResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotInlineResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotInlineResult.Merge(m, src)
}
func (m *BotInlineResult) XXX_Size() int {
	return m.Size()
}
func (m *BotInlineResult) XXX_DiscardUnknown() {
	xxx_messageInfo_BotInlineResult.DiscardUnknown(m)
}

var xxx_messageInfo_BotInlineResult proto.InternalMessageInfo

func (m *BotInlineResult) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *BotInlineResult) GetType() MediaType {
	if m != nil {
		return m.Type
	}
	return MediaTypeEmpty
}

func (m *BotInlineResult) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BotInlineResult) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BotInlineResult) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *BotInlineResult) GetThumb() *MediaWebDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *BotInlineResult) GetMessage() *BotInlineMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type InputBotInlineResult struct {
	ID          string                 `protobuf:"bytes,1,req,name=ID" json:"ID"`
	Type        InputMediaType         `protobuf:"varint,2,req,name=Type,enum=msg.InputMediaType" json:"Type"`
	Title       string                 `protobuf:"bytes,3,opt,name=Title" json:"Title"`
	Description string                 `protobuf:"bytes,4,opt,name=Description" json:"Description"`
	Url         string                 `protobuf:"bytes,5,opt,name=Url" json:"Url"`
	Thumb       *InputMediaWebDocument `protobuf:"bytes,6,opt,name=Thumb" json:"Thumb,omitempty"`
	Message     *InputBotInlineMessage `protobuf:"bytes,8,req,name=Message" json:"Message,omitempty"`
}

func (m *InputBotInlineResult) Reset()         { *m = InputBotInlineResult{} }
func (m *InputBotInlineResult) String() string { return proto.CompactTextString(m) }
func (*InputBotInlineResult) ProtoMessage()    {}
func (*InputBotInlineResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{20}
}
func (m *InputBotInlineResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputBotInlineResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputBotInlineResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InputBotInlineResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputBotInlineResult.Merge(m, src)
}
func (m *InputBotInlineResult) XXX_Size() int {
	return m.Size()
}
func (m *InputBotInlineResult) XXX_DiscardUnknown() {
	xxx_messageInfo_InputBotInlineResult.DiscardUnknown(m)
}

var xxx_messageInfo_InputBotInlineResult proto.InternalMessageInfo

func (m *InputBotInlineResult) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *InputBotInlineResult) GetType() InputMediaType {
	if m != nil {
		return m.Type
	}
	return InputMediaTypeEmpty
}

func (m *InputBotInlineResult) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *InputBotInlineResult) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InputBotInlineResult) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *InputBotInlineResult) GetThumb() *InputMediaWebDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *InputBotInlineResult) GetMessage() *InputBotInlineMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

// BotInlineMessage
type BotInlineMessage struct {
	MediaData       []byte           `protobuf:"bytes,1,opt,name=MediaData" json:"MediaData"`
	Body            string           `protobuf:"bytes,10,opt,name=Body" json:"Body"`
	Entities        []*MessageEntity `protobuf:"bytes,11,rep,name=Entities" json:"Entities,omitempty"`
	ReplyTo         int64            `protobuf:"varint,12,opt,name=ReplyTo" json:"ReplyTo"`
	ReplyMarkup     int64            `protobuf:"varint,13,opt,name=ReplyMarkup" json:"ReplyMarkup"`
	ReplyMarkupData []byte           `protobuf:"bytes,14,opt,name=ReplyMarkupData" json:"ReplyMarkupData"`
}

func (m *BotInlineMessage) Reset()         { *m = BotInlineMessage{} }
func (m *BotInlineMessage) String() string { return proto.CompactTextString(m) }
func (*BotInlineMessage) ProtoMessage()    {}
func (*BotInlineMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{21}
}
func (m *BotInlineMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotInlineMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotInlineMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotInlineMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotInlineMessage.Merge(m, src)
}
func (m *BotInlineMessage) XXX_Size() int {
	return m.Size()
}
func (m *BotInlineMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BotInlineMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BotInlineMessage proto.InternalMessageInfo

func (m *BotInlineMessage) GetMediaData() []byte {
	if m != nil {
		return m.MediaData
	}
	return nil
}

func (m *BotInlineMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *BotInlineMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *BotInlineMessage) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

func (m *BotInlineMessage) GetReplyMarkup() int64 {
	if m != nil {
		return m.ReplyMarkup
	}
	return 0
}

func (m *BotInlineMessage) GetReplyMarkupData() []byte {
	if m != nil {
		return m.ReplyMarkupData
	}
	return nil
}

// InputBotInlineMessage
type InputBotInlineMessage struct {
	InputMediaData  []byte           `protobuf:"bytes,1,opt,name=InputMediaData" json:"InputMediaData"`
	NoWebPage       bool             `protobuf:"varint,2,opt,name=NoWebPage" json:"NoWebPage"`
	Body            string           `protobuf:"bytes,10,opt,name=Body" json:"Body"`
	Entities        []*MessageEntity `protobuf:"bytes,11,rep,name=Entities" json:"Entities,omitempty"`
	ReplyTo         int64            `protobuf:"varint,12,opt,name=ReplyTo" json:"ReplyTo"`
	ReplyMarkup     int64            `protobuf:"varint,13,opt,name=ReplyMarkup" json:"ReplyMarkup"`
	ReplyMarkupData []byte           `protobuf:"bytes,14,opt,name=ReplyMarkupData" json:"ReplyMarkupData"`
}

func (m *InputBotInlineMessage) Reset()         { *m = InputBotInlineMessage{} }
func (m *InputBotInlineMessage) String() string { return proto.CompactTextString(m) }
func (*InputBotInlineMessage) ProtoMessage()    {}
func (*InputBotInlineMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{22}
}
func (m *InputBotInlineMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputBotInlineMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputBotInlineMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InputBotInlineMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputBotInlineMessage.Merge(m, src)
}
func (m *InputBotInlineMessage) XXX_Size() int {
	return m.Size()
}
func (m *InputBotInlineMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InputBotInlineMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InputBotInlineMessage proto.InternalMessageInfo

func (m *InputBotInlineMessage) GetInputMediaData() []byte {
	if m != nil {
		return m.InputMediaData
	}
	return nil
}

func (m *InputBotInlineMessage) GetNoWebPage() bool {
	if m != nil {
		return m.NoWebPage
	}
	return false
}

func (m *InputBotInlineMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *InputBotInlineMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *InputBotInlineMessage) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

func (m *InputBotInlineMessage) GetReplyMarkup() int64 {
	if m != nil {
		return m.ReplyMarkup
	}
	return 0
}

func (m *InputBotInlineMessage) GetReplyMarkupData() []byte {
	if m != nil {
		return m.ReplyMarkupData
	}
	return nil
}

// BotToken
type BotToken struct {
	Token []byte `protobuf:"bytes,1,req,name=Token" json:"Token"`
}

func (m *BotToken) Reset()         { *m = BotToken{} }
func (m *BotToken) String() string { return proto.CompactTextString(m) }
func (*BotToken) ProtoMessage()    {}
func (*BotToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{23}
}
func (m *BotToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotToken.Merge(m, src)
}
func (m *BotToken) XXX_Size() int {
	return m.Size()
}
func (m *BotToken) XXX_DiscardUnknown() {
	xxx_messageInfo_BotToken.DiscardUnknown(m)
}

var xxx_messageInfo_BotToken proto.InternalMessageInfo

func (m *BotToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// BotRecalled
type BotRecalled struct {
	ID       int64  `protobuf:"varint,1,req,name=ID" json:"ID"`
	Username string `protobuf:"bytes,2,req,name=Username" json:"Username"`
}

func (m *BotRecalled) Reset()         { *m = BotRecalled{} }
func (m *BotRecalled) String() string { return proto.CompactTextString(m) }
func (*BotRecalled) ProtoMessage()    {}
func (*BotRecalled) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{24}
}
func (m *BotRecalled) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotRecalled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotRecalled.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotRecalled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotRecalled.Merge(m, src)
}
func (m *BotRecalled) XXX_Size() int {
	return m.Size()
}
func (m *BotRecalled) XXX_DiscardUnknown() {
	xxx_messageInfo_BotRecalled.DiscardUnknown(m)
}

var xxx_messageInfo_BotRecalled proto.InternalMessageInfo

func (m *BotRecalled) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *BotRecalled) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// BotCallbackAnswer
type BotCallbackAnswer struct {
	Url       string `protobuf:"bytes,1,opt,name=Url" json:"Url"`
	Message   string `protobuf:"bytes,2,opt,name=Message" json:"Message"`
	CacheTime int32  `protobuf:"varint,3,req,name=CacheTime" json:"CacheTime"`
}

func (m *BotCallbackAnswer) Reset()         { *m = BotCallbackAnswer{} }
func (m *BotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*BotCallbackAnswer) ProtoMessage()    {}
func (*BotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{25}
}
func (m *BotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotCallbackAnswer.Merge(m, src)
}
func (m *BotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *BotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_BotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_BotCallbackAnswer proto.InternalMessageInfo

func (m *BotCallbackAnswer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *BotCallbackAnswer) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BotCallbackAnswer) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

// BotsMany
type BotsMany struct {
	Bots []*BotInfo `protobuf:"bytes,1,rep,name=Bots" json:"Bots,omitempty"`
}

func (m *BotsMany) Reset()         { *m = BotsMany{} }
func (m *BotsMany) String() string { return proto.CompactTextString(m) }
func (*BotsMany) ProtoMessage()    {}
func (*BotsMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{26}
}
func (m *BotsMany) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotsMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotsMany.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotsMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotsMany.Merge(m, src)
}
func (m *BotsMany) XXX_Size() int {
	return m.Size()
}
func (m *BotsMany) XXX_DiscardUnknown() {
	xxx_messageInfo_BotsMany.DiscardUnknown(m)
}

var xxx_messageInfo_BotsMany proto.InternalMessageInfo

func (m *BotsMany) GetBots() []*BotInfo {
	if m != nil {
		return m.Bots
	}
	return nil
}

// BotGetCommands
// @Function
// @Return: BotCommandsMany
type BotGetCommands struct {
	Peer *InputPeer `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
}

func (m *BotGetCommands) Reset()         { *m = BotGetCommands{} }
func (m *BotGetCommands) String() string { return proto.CompactTextString(m) }
func (*BotGetCommands) ProtoMessage()    {}
func (*BotGetCommands) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{27}
}
func (m *BotGetCommands) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotGetCommands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotGetCommands.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotGetCommands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotGetCommands.Merge(m, src)
}
func (m *BotGetCommands) XXX_Size() int {
	return m.Size()
}
func (m *BotGetCommands) XXX_DiscardUnknown() {
	xxx_messageInfo_BotGetCommands.DiscardUnknown(m)
}

var xxx_messageInfo_BotGetCommands proto.InternalMessageInfo

func (m *BotGetCommands) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// BotCommandsMany
type BotCommandsMany struct {
	Commands []*BotCommands `protobuf:"bytes,1,rep,name=Commands" json:"Commands,omitempty"`
}

func (m *BotCommandsMany) Reset()         { *m = BotCommandsMany{} }
func (m *BotCommandsMany) String() string { return proto.CompactTextString(m) }
func (*BotCommandsMany) ProtoMessage()    {}
func (*BotCommandsMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{28}
}
func (m *BotCommandsMany) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotCommandsMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotCommandsMany.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotCommandsMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotCommandsMany.Merge(m, src)
}
func (m *BotCommandsMany) XXX_Size() int {
	return m.Size()
}
func (m *BotCommandsMany) XXX_DiscardUnknown() {
	xxx_messageInfo_BotCommandsMany.DiscardUnknown(m)
}

var xxx_messageInfo_BotCommandsMany proto.InternalMessageInfo

func (m *BotCommandsMany) GetCommands() []*BotCommands {
	if m != nil {
		return m.Commands
	}
	return nil
}

func init() {
	proto.RegisterType((*BotStart)(nil), "msg.BotStart")
	proto.RegisterType((*BotRecall)(nil), "msg.BotRecall")
	proto.RegisterType((*BotSetInfo)(nil), "msg.BotSetInfo")
	proto.RegisterType((*BotGet)(nil), "msg.BotGet")
	proto.RegisterType((*BotSendMessage)(nil), "msg.BotSendMessage")
	proto.RegisterType((*BotEditMessage)(nil), "msg.BotEditMessage")
	proto.RegisterType((*BotSendMedia)(nil), "msg.BotSendMedia")
	proto.RegisterType((*BotSaveFilePart)(nil), "msg.BotSaveFilePart")
	proto.RegisterType((*BotUpdateProfile)(nil), "msg.BotUpdateProfile")
	proto.RegisterType((*BotUpdatePhoto)(nil), "msg.BotUpdatePhoto")
	proto.RegisterType((*BotRevokeToken)(nil), "msg.BotRevokeToken")
	proto.RegisterType((*BotDeleteMessage)(nil), "msg.BotDeleteMessage")
	proto.RegisterType((*BotSetCallbackAnswer)(nil), "msg.BotSetCallbackAnswer")
	proto.RegisterType((*BotGetCallbackAnswer)(nil), "msg.BotGetCallbackAnswer")
	proto.RegisterType((*BotGetInlineResults)(nil), "msg.BotGetInlineResults")
	proto.RegisterType((*BotSetInlineResults)(nil), "msg.BotSetInlineResults")
	proto.RegisterType((*BotSendInlineResults)(nil), "msg.BotSendInlineResults")
	proto.RegisterType((*BotResults)(nil), "msg.BotResults")
	proto.RegisterType((*BotInlineSwitchPM)(nil), "msg.BotInlineSwitchPM")
	proto.RegisterType((*BotInlineResult)(nil), "msg.BotInlineResult")
	proto.RegisterType((*InputBotInlineResult)(nil), "msg.InputBotInlineResult")
	proto.RegisterType((*BotInlineMessage)(nil), "msg.BotInlineMessage")
	proto.RegisterType((*InputBotInlineMessage)(nil), "msg.InputBotInlineMessage")
	proto.RegisterType((*BotToken)(nil), "msg.BotToken")
	proto.RegisterType((*BotRecalled)(nil), "msg.BotRecalled")
	proto.RegisterType((*BotCallbackAnswer)(nil), "msg.BotCallbackAnswer")
	proto.RegisterType((*BotsMany)(nil), "msg.BotsMany")
	proto.RegisterType((*BotGetCommands)(nil), "msg.BotGetCommands")
	proto.RegisterType((*BotCommandsMany)(nil), "msg.BotCommandsMany")
}

func init() { proto.RegisterFile("bot.api.proto", fileDescriptor_802c818ed586bbc7) }

var fileDescriptor_802c818ed586bbc7 = []byte{
	// 1534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0x4d, 0x6f, 0x1b, 0x55,
	0x17, 0xce, 0xcc, 0xf8, 0x2b, 0xc7, 0x69, 0xda, 0x77, 0x9a, 0x54, 0xf3, 0x5a, 0x95, 0x19, 0x8d,
	0x50, 0x65, 0xd1, 0xd6, 0x2d, 0xa6, 0x12, 0x4b, 0x84, 0xe3, 0x12, 0x8c, 0x9a, 0xd4, 0x4c, 0x9c,
	0x96, 0x25, 0xd7, 0xf6, 0x75, 0x32, 0xca, 0x78, 0xae, 0x99, 0xb9, 0x4e, 0xe2, 0xdf, 0xc0, 0x06,
	0x58, 0x23, 0x21, 0xb1, 0x42, 0xe2, 0x3f, 0xb0, 0x60, 0xd5, 0x65, 0xd9, 0x20, 0x56, 0x08, 0xb5,
	0x7f, 0x82, 0x25, 0xba, 0x67, 0xbe, 0xee, 0x8c, 0x1d, 0x37, 0x91, 0xe8, 0x86, 0x55, 0x3c, 0xcf,
	0x39, 0x73, 0xef, 0xb9, 0xcf, 0xf9, 0xb8, 0x4f, 0x06, 0xae, 0x0d, 0x18, 0x6f, 0x92, 0xa9, 0xd3,
	0x9c, 0xfa, 0x8c, 0x33, 0x5d, 0x9b, 0x04, 0x47, 0xb5, 0xfb, 0x47, 0x0e, 0x3f, 0x9e, 0x0d, 0x9a,
	0x43, 0x36, 0x79, 0x70, 0xc4, 0x8e, 0xd8, 0x03, 0xb4, 0x0d, 0x66, 0x63, 0x7c, 0xc2, 0x07, 0xfc,
	0x15, 0xbe, 0x53, 0xdb, 0x1e, 0x1e, 0x13, 0xde, 0x1c, 0x32, 0x9f, 0x36, 0xf9, 0x7c, 0x4a, 0x83,
	0x08, 0xae, 0xa7, 0xf0, 0x84, 0x06, 0x01, 0x39, 0x12, 0x7f, 0x47, 0x0e, 0x89, 0xec, 0x16, 0x87,
	0x4a, 0x9b, 0xf1, 0x03, 0x4e, 0x7c, 0xae, 0x9b, 0xa0, 0xb5, 0x19, 0x37, 0x14, 0x53, 0x6d, 0x54,
	0x5b, 0x9b, 0xcd, 0x49, 0x70, 0xd4, 0xec, 0x7a, 0xd3, 0x19, 0xef, 0x51, 0xea, 0xdb, 0xc2, 0xa4,
	0x9b, 0x50, 0xb1, 0x89, 0x37, 0x62, 0x93, 0x6e, 0xc7, 0x50, 0x4d, 0xb5, 0xa1, 0xb5, 0x0b, 0x2f,
	0xfe, 0x7c, 0x67, 0xcd, 0x4e, 0x50, 0xfd, 0x5d, 0x00, 0x5c, 0xac, 0x47, 0x7c, 0x32, 0x31, 0x34,
	0x53, 0x6d, 0xac, 0x47, 0x3e, 0x12, 0x6e, 0xdd, 0x85, 0xf5, 0x36, 0xe3, 0x36, 0x1d, 0x12, 0xd7,
	0xd5, 0xeb, 0x50, 0x7e, 0x46, 0xfd, 0xc0, 0x61, 0x1e, 0x6e, 0x5d, 0x8c, 0xfc, 0x63, 0xd0, 0xfa,
	0x55, 0x01, 0x10, 0x31, 0x52, 0xde, 0xf5, 0xc6, 0x4c, 0xaf, 0x41, 0xb1, 0xcd, 0x78, 0xb7, 0x83,
	0xce, 0x71, 0x00, 0x21, 0x74, 0x89, 0xf8, 0x6a, 0x50, 0x7c, 0x7a, 0xe6, 0x51, 0x1f, 0x43, 0x4b,
	0xde, 0x46, 0x48, 0x6f, 0x41, 0xb5, 0xcd, 0xf8, 0x0e, 0x9b, 0x4c, 0x88, 0x37, 0x0a, 0x8c, 0x82,
	0xa9, 0x35, 0xaa, 0xad, 0x1b, 0xc8, 0x83, 0x84, 0xdb, 0xb2, 0x93, 0x7e, 0x07, 0xaa, 0x1d, 0x1a,
	0x0c, 0x7d, 0x67, 0xca, 0xc5, 0x01, 0x8a, 0xd2, 0x81, 0x65, 0x83, 0xd5, 0x81, 0x52, 0x9b, 0xf1,
	0x5d, 0xca, 0xf5, 0x3a, 0x94, 0x0e, 0x03, 0xea, 0x27, 0x07, 0x28, 0x09, 0xe7, 0x87, 0x8a, 0x1d,
	0xa1, 0x22, 0xc2, 0x27, 0xce, 0xc4, 0xe1, 0x86, 0x6a, 0x2a, 0x09, 0x19, 0x21, 0x64, 0xfd, 0xa2,
	0xc2, 0x26, 0x52, 0xe1, 0x8d, 0xf6, 0xc2, 0x6c, 0x66, 0x8e, 0xac, 0x2c, 0x3d, 0xb2, 0x05, 0x05,
	0x91, 0x41, 0x24, 0x64, 0x31, 0xaf, 0x68, 0xd3, 0x0d, 0x28, 0xb4, 0xd9, 0x68, 0x9e, 0x89, 0x1f,
	0x11, 0x91, 0x1d, 0x9b, 0x4e, 0xdd, 0x79, 0x9f, 0x19, 0x25, 0x53, 0x49, 0x96, 0x8f, 0x41, 0x91,
	0xf0, 0x1d, 0x97, 0x12, 0xbf, 0xe3, 0x93, 0x31, 0x37, 0xca, 0xa6, 0xd2, 0xa8, 0xc4, 0x09, 0x4f,
	0x71, 0xbd, 0x09, 0x95, 0xc7, 0x1e, 0x77, 0xb8, 0x43, 0x03, 0xa3, 0x82, 0xbc, 0xea, 0x18, 0x47,
	0x74, 0x0a, 0xb4, 0xcd, 0xed, 0xc4, 0x47, 0xd0, 0x8a, 0x1b, 0xec, 0x11, 0xff, 0x64, 0x36, 0x35,
	0xd6, 0xa5, 0x9d, 0x65, 0x83, 0xde, 0x84, 0xeb, 0xd2, 0x63, 0x87, 0x70, 0x62, 0x80, 0xa9, 0x34,
	0x36, 0x22, 0xdf, 0xbc, 0xd1, 0xfa, 0x3e, 0x24, 0xf0, 0xf1, 0xc8, 0xe1, 0x6f, 0x87, 0x40, 0x6d,
	0x81, 0x40, 0x0b, 0xd6, 0xa3, 0xad, 0xba, 0x1d, 0xa3, 0x20, 0x6d, 0x90, 0xc2, 0x19, 0x7a, 0x8a,
	0x57, 0xa7, 0xa7, 0x74, 0x05, 0x7a, 0xca, 0xab, 0xe8, 0xf9, 0x4d, 0x81, 0x8d, 0xa4, 0xbe, 0x46,
	0x0e, 0xf9, 0x97, 0xc8, 0xf9, 0x50, 0x50, 0x30, 0x72, 0x48, 0x7f, 0x3e, 0xa5, 0xc8, 0xd0, 0x66,
	0xeb, 0x66, 0xea, 0x98, 0x98, 0x52, 0x5e, 0x22, 0x20, 0xe4, 0x6e, 0xe4, 0x10, 0x8c, 0x5c, 0x70,
	0xb7, 0x91, 0xf1, 0x11, 0xb0, 0x5c, 0xa0, 0xc5, 0x25, 0x05, 0x6a, 0x7d, 0xab, 0xc0, 0x75, 0x71,
	0x26, 0x72, 0x4a, 0x3f, 0x71, 0x5c, 0xda, 0x13, 0x93, 0xae, 0x0e, 0x25, 0xf1, 0x7b, 0xb1, 0x07,
	0x43, 0x54, 0xbf, 0x0d, 0x25, 0xe1, 0x17, 0x4d, 0x91, 0xb8, 0x09, 0x23, 0x4c, 0x94, 0x7c, 0x9f,
	0x71, 0xe2, 0x8a, 0xc7, 0x00, 0xcf, 0x13, 0x7b, 0x48, 0x38, 0xce, 0xa9, 0x39, 0xa7, 0x41, 0x26,
	0xee, 0x10, 0xb2, 0xbe, 0x84, 0x1b, 0x6d, 0xc6, 0x0f, 0xa7, 0x23, 0xc2, 0x69, 0xcf, 0x67, 0x63,
	0xc7, 0xa5, 0x2b, 0xe7, 0x9a, 0x01, 0x85, 0x7d, 0x32, 0xa1, 0x18, 0x4d, 0x52, 0x5d, 0x02, 0xd1,
	0x6f, 0x81, 0xd6, 0x76, 0x98, 0x51, 0x30, 0x95, 0xc4, 0x20, 0x00, 0xeb, 0x0b, 0xac, 0xf3, 0x68,
	0x87, 0x63, 0x71, 0xa9, 0xbc, 0x07, 0x05, 0x71, 0x3a, 0x43, 0x31, 0x95, 0x46, 0xb5, 0x75, 0x2b,
	0xe5, 0x5f, 0xa0, 0x4f, 0xd8, 0x90, 0x88, 0x39, 0x65, 0xa3, 0x4f, 0x1a, 0x8b, 0xba, 0x10, 0x8b,
	0xf5, 0x19, 0xae, 0x6c, 0xd3, 0x53, 0x76, 0x42, 0xfb, 0xec, 0x84, 0x7a, 0x2b, 0x23, 0xbf, 0x0d,
	0xa5, 0x5d, 0xca, 0xf7, 0xe9, 0x19, 0x2e, 0x15, 0x8f, 0x86, 0x08, 0xb3, 0x9e, 0x21, 0x0f, 0x1d,
	0xea, 0x52, 0x4e, 0xe3, 0x7e, 0x8c, 0x0b, 0x4a, 0x59, 0x51, 0x50, 0x75, 0x80, 0xa4, 0x79, 0x02,
	0x43, 0x35, 0xb5, 0x86, 0x66, 0x4b, 0x88, 0xf5, 0x9d, 0x02, 0x5b, 0xe1, 0x95, 0xb1, 0x43, 0x5c,
	0x77, 0x40, 0x86, 0x27, 0x1f, 0x7b, 0xc1, 0x19, 0xbe, 0x58, 0xfe, 0x7c, 0x46, 0xfd, 0x79, 0x2e,
	0xd8, 0x18, 0x14, 0x74, 0x1e, 0xfa, 0x2e, 0x8e, 0xde, 0x84, 0xce, 0x43, 0x1f, 0xef, 0xa8, 0x68,
	0x79, 0x43, 0x93, 0x6c, 0xe5, 0x34, 0xe8, 0xf5, 0x1d, 0x32, 0x3c, 0xa6, 0x7d, 0x67, 0x42, 0x31,
	0xe1, 0x71, 0x45, 0xa4, 0xb0, 0x75, 0x8e, 0x31, 0xed, 0x2e, 0xc4, 0x74, 0x99, 0x03, 0x67, 0x86,
	0x88, 0x2a, 0x95, 0xb9, 0x34, 0x44, 0x0c, 0x28, 0x60, 0x9f, 0x68, 0x52, 0xbd, 0x21, 0x62, 0xbd,
	0x50, 0xe0, 0x66, 0xb8, 0x75, 0xd7, 0x73, 0x1d, 0x8f, 0xda, 0x34, 0x98, 0xb9, 0x3c, 0xb8, 0xf0,
	0xc2, 0x17, 0x37, 0x51, 0x78, 0xe1, 0x5f, 0xa6, 0xbb, 0x6b, 0x50, 0x44, 0xfa, 0x32, 0xb3, 0x2f,
	0x84, 0x44, 0xfa, 0x9f, 0x8e, 0xc7, 0x01, 0xe5, 0x48, 0x4a, 0x6c, 0x8c, 0x30, 0xfd, 0x7d, 0xa8,
	0xc4, 0x85, 0x87, 0xbd, 0x5b, 0x6d, 0x6d, 0xa7, 0x3b, 0xec, 0x52, 0x96, 0x54, 0x65, 0xe2, 0x66,
	0xfd, 0xa4, 0xe2, 0x51, 0x0e, 0xf2, 0x47, 0xa9, 0x43, 0x79, 0x97, 0xb8, 0xae, 0x08, 0x43, 0x91,
	0x0a, 0x2d, 0x06, 0x85, 0xbd, 0xe7, 0x3b, 0xa7, 0x84, 0xd3, 0x4c, 0x21, 0xc6, 0x60, 0x36, 0x81,
	0xb2, 0x36, 0x48, 0x61, 0xd1, 0xf7, 0xfb, 0xf4, 0x9c, 0x27, 0x07, 0x4a, 0xeb, 0x40, 0xc2, 0xf5,
	0x0f, 0xc4, 0x3c, 0xc2, 0xa0, 0xa2, 0x51, 0xfe, 0xff, 0xf4, 0x4c, 0xa2, 0x27, 0xa4, 0xb0, 0xed,
	0xd8, 0x53, 0x6f, 0x41, 0xe5, 0xe0, 0xcc, 0xe1, 0xc3, 0xe3, 0xde, 0x1e, 0x4e, 0xf3, 0xb8, 0x41,
	0x93, 0x17, 0x62, 0xab, 0x9d, 0xf8, 0xc9, 0xb5, 0x5c, 0x5e, 0x52, 0xcb, 0xd6, 0x8f, 0x6a, 0xd4,
	0x04, 0xde, 0x28, 0x9f, 0xf6, 0x37, 0x0d, 0x75, 0x69, 0x69, 0x75, 0x59, 0x9b, 0x88, 0x15, 0x70,
	0xb1, 0x6e, 0x27, 0x93, 0xf5, 0x04, 0xcd, 0xc9, 0x82, 0x82, 0x44, 0xb9, 0x2c, 0x0b, 0xe2, 0xf2,
	0x2a, 0xae, 0xec, 0x75, 0x49, 0x80, 0xa8, 0x8b, 0x02, 0xe4, 0x36, 0x94, 0x0e, 0x1c, 0x97, 0x7a,
	0x59, 0xf1, 0x11, 0x61, 0xe2, 0xed, 0x4f, 0x9d, 0x11, 0x7d, 0xe6, 0x10, 0xa3, 0x22, 0x99, 0x63,
	0xd0, 0xfa, 0x3d, 0x14, 0x97, 0x57, 0x28, 0xa3, 0x95, 0xc4, 0x64, 0x4b, 0x44, 0xbb, 0xa0, 0x44,
	0xe4, 0x6c, 0x17, 0x2e, 0x99, 0xed, 0x66, 0xbe, 0xac, 0xb6, 0xb2, 0xaf, 0xe4, 0x2a, 0xca, 0x3a,
	0x80, 0xff, 0x2d, 0x2c, 0x27, 0x46, 0x44, 0x9f, 0x9e, 0x87, 0x1d, 0x9f, 0xdc, 0x23, 0x02, 0xc9,
	0xe9, 0x76, 0xf5, 0x02, 0xdd, 0xfe, 0xb5, 0x8a, 0x77, 0xa9, 0xbc, 0xa3, 0xbe, 0x05, 0x6a, 0x54,
	0x47, 0xf1, 0x1b, 0x6a, 0xb7, 0xa3, 0x37, 0xa0, 0x80, 0xb7, 0xbd, 0x8a, 0xb7, 0xfd, 0x66, 0xa4,
	0x66, 0xb2, 0x17, 0x3d, 0x7a, 0x88, 0xf1, 0xd1, 0x77, 0xb8, 0x9b, 0x1d, 0xac, 0x21, 0x94, 0x57,
	0xd7, 0x72, 0xcb, 0xc9, 0x86, 0x78, 0x6c, 0x17, 0xf3, 0x63, 0xfb, 0x2e, 0x14, 0xfb, 0xc7, 0xb3,
	0xc9, 0x20, 0xea, 0xa9, 0xed, 0x34, 0x8c, 0xe7, 0x74, 0xd0, 0x61, 0xc3, 0xd9, 0x84, 0x7a, 0xdc,
	0x0e, 0x7d, 0xf4, 0x07, 0xe9, 0x8c, 0x2f, 0x63, 0x3d, 0x6e, 0x67, 0x19, 0x8e, 0x8c, 0xc9, 0xd0,
	0xb7, 0x7e, 0x50, 0x61, 0x6b, 0x59, 0x5b, 0x5f, 0x40, 0xc9, 0xfd, 0x0c, 0x25, 0x2b, 0x04, 0xd0,
	0xdb, 0xe7, 0xe5, 0x61, 0x96, 0x97, 0x5a, 0x2e, 0x96, 0x25, 0xe4, 0x3c, 0x4a, 0xc9, 0xa9, 0x20,
	0x39, 0xb5, 0x25, 0x53, 0x6d, 0x81, 0xa1, 0xbf, 0x15, 0xbc, 0xe0, 0x33, 0xd6, 0xac, 0xa8, 0x53,
	0x24, 0x39, 0x2a, 0x89, 0xba, 0x58, 0x4e, 0x83, 0x14, 0x79, 0x28, 0xa7, 0x65, 0xa9, 0x5c, 0xbd,
	0x84, 0x54, 0x96, 0xc6, 0xc7, 0xc6, 0xb2, 0xff, 0x5f, 0x72, 0x52, 0xfa, 0xda, 0x15, 0xa4, 0xf4,
	0xe6, 0x2a, 0x29, 0xfd, 0xb3, 0x0a, 0xdb, 0x4b, 0xd9, 0xd1, 0xef, 0xc1, 0x66, 0x4a, 0xf5, 0x02,
	0x09, 0x39, 0x9b, 0x60, 0x6b, 0x9f, 0x3d, 0xa7, 0x83, 0x9e, 0xa0, 0x5e, 0x95, 0x46, 0x58, 0x0a,
	0xff, 0x07, 0xd8, 0xba, 0x83, 0x9f, 0x21, 0x12, 0x39, 0x89, 0x3f, 0xb0, 0x81, 0x12, 0xe1, 0x8c,
	0x90, 0xf5, 0x18, 0xff, 0x45, 0x0f, 0x3f, 0x1c, 0xd0, 0x91, 0xd4, 0x68, 0x9a, 0xd4, 0x68, 0x26,
	0x54, 0x84, 0x82, 0xf1, 0xf2, 0x8a, 0x39, 0x41, 0x2d, 0x86, 0xc3, 0x31, 0xa7, 0xc3, 0xa2, 0x66,
	0x51, 0x56, 0x68, 0x3f, 0xf5, 0x8d, 0xda, 0x4f, 0x5b, 0xae, 0xfd, 0xee, 0xe1, 0xf9, 0x82, 0x3d,
	0xe2, 0xcd, 0x75, 0x53, 0x64, 0x8b, 0x07, 0x86, 0x82, 0xf9, 0xd8, 0x48, 0x87, 0xcc, 0x98, 0xd9,
	0x68, 0xb1, 0x1e, 0xa1, 0xc4, 0x16, 0x4a, 0x31, 0xfe, 0xcc, 0x70, 0x09, 0x8d, 0x68, 0x7d, 0x84,
	0xb3, 0x39, 0x7e, 0x05, 0xb7, 0xba, 0x07, 0x95, 0xe4, 0x73, 0x86, 0x72, 0xc1, 0xe7, 0x8c, 0xc4,
	0xa3, 0xf5, 0x14, 0x83, 0xec, 0xf9, 0xec, 0x7c, 0xae, 0xef, 0xc0, 0xf5, 0x03, 0xea, 0x9f, 0x52,
	0x64, 0xfb, 0xab, 0x19, 0x0d, 0xb8, 0xbe, 0x95, 0xad, 0x9c, 0x53, 0xea, 0xb2, 0x29, 0xad, 0x2d,
	0x45, 0xad, 0xb5, 0x86, 0xf2, 0x50, 0x69, 0x1b, 0x2f, 0x5e, 0xd5, 0x95, 0x97, 0xaf, 0xea, 0xca,
	0x5f, 0xaf, 0xea, 0xca, 0x37, 0xaf, 0xeb, 0x6b, 0x2f, 0x5f, 0xd7, 0xd7, 0xfe, 0x78, 0x5d, 0x5f,
	0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0x25, 0x96, 0x2a, 0xc4, 0xf1, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BotProxyClient is the client API for BotProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BotProxyClient interface {
	ServeBotRequest(ctx context.Context, opts ...grpc.CallOption) (BotProxy_ServeBotRequestClient, error)
}

type botProxyClient struct {
	cc *grpc.ClientConn
}

func NewBotProxyClient(cc *grpc.ClientConn) BotProxyClient {
	return &botProxyClient{cc}
}

func (c *botProxyClient) ServeBotRequest(ctx context.Context, opts ...grpc.CallOption) (BotProxy_ServeBotRequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BotProxy_serviceDesc.Streams[0], "/msg.BotProxy/ServeBotRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &botProxyServeBotRequestClient{stream}
	return x, nil
}

type BotProxy_ServeBotRequestClient interface {
	Send(*MessageEnvelope) error
	Recv() (*MessageEnvelope, error)
	grpc.ClientStream
}

type botProxyServeBotRequestClient struct {
	grpc.ClientStream
}

func (x *botProxyServeBotRequestClient) Send(m *MessageEnvelope) error {
	return x.ClientStream.SendMsg(m)
}

func (x *botProxyServeBotRequestClient) Recv() (*MessageEnvelope, error) {
	m := new(MessageEnvelope)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BotProxyServer is the server API for BotProxy service.
type BotProxyServer interface {
	ServeBotRequest(BotProxy_ServeBotRequestServer) error
}

// UnimplementedBotProxyServer can be embedded to have forward compatible implementations.
type UnimplementedBotProxyServer struct {
}

func (*UnimplementedBotProxyServer) ServeBotRequest(srv BotProxy_ServeBotRequestServer) error {
	return status.Errorf(codes.Unimplemented, "method ServeBotRequest not implemented")
}

func RegisterBotProxyServer(s *grpc.Server, srv BotProxyServer) {
	s.RegisterService(&_BotProxy_serviceDesc, srv)
}

func _BotProxy_ServeBotRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BotProxyServer).ServeBotRequest(&botProxyServeBotRequestServer{stream})
}

type BotProxy_ServeBotRequestServer interface {
	Send(*MessageEnvelope) error
	Recv() (*MessageEnvelope, error)
	grpc.ServerStream
}

type botProxyServeBotRequestServer struct {
	grpc.ServerStream
}

func (x *botProxyServeBotRequestServer) Send(m *MessageEnvelope) error {
	return x.ServerStream.SendMsg(m)
}

func (x *botProxyServeBotRequestServer) Recv() (*MessageEnvelope, error) {
	m := new(MessageEnvelope)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BotProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "msg.BotProxy",
	HandlerType: (*BotProxyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServeBotRequest",
			Handler:       _BotProxy_ServeBotRequest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "bot.api.proto",
}

func (m *BotStart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotStart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotStart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.StartParam)
	copy(dAtA[i:], m.StartParam)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.StartParam)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x10
	if m.Bot == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	} else {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotRecall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotRecall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotRecall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.Version))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotSetInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSetInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSetInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Description)
	copy(dAtA[i:], m.Description)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Description)))
	i--
	dAtA[i] = 0x2a
	if len(m.BotCommands) > 0 {
		for iNdEx := len(m.BotCommands) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BotCommands[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.Owner))
	i--
	dAtA[i] = 0x18
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.BotID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotGet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotGet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotGet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.Limit))
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.UserID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSendMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSendMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ReplyMarkupData != nil {
		i -= len(m.ReplyMarkupData)
		copy(dAtA[i:], m.ReplyMarkupData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.ReplyMarkupData)))
		i--
		dAtA[i] = 0x52
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyMarkup))
	i--
	dAtA[i] = 0x48
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	i--
	if m.ClearDraft {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x30
	i -= len(m.Body)
	copy(dAtA[i:], m.Body)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Body)))
	i--
	dAtA[i] = 0x2a
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotEditMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotEditMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotEditMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ReplyMarkupData != nil {
		i -= len(m.ReplyMarkupData)
		copy(dAtA[i:], m.ReplyMarkupData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.ReplyMarkupData)))
		i--
		dAtA[i] = 0x3a
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyMarkup))
	i--
	dAtA[i] = 0x30
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.MessageID))
	i--
	dAtA[i] = 0x20
	i -= len(m.Body)
	copy(dAtA[i:], m.Body)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Body)))
	i--
	dAtA[i] = 0x1a
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotSendMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSendMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSendMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x28
	if m.MediaData != nil {
		i -= len(m.MediaData)
		copy(dAtA[i:], m.MediaData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.MediaData)))
		i--
		dAtA[i] = 0x22
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.MediaType))
	i--
	dAtA[i] = 0x18
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotSaveFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSaveFilePart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSaveFilePart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Bytes != nil {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x22
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.TotalParts))
	i--
	dAtA[i] = 0x18
	i = encodeVarintBotApi(dAtA, i, uint64(m.PartID))
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.FileID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotUpdateProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Bio)
	copy(dAtA[i:], m.Bio)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Bio)))
	i--
	dAtA[i] = 0x22
	i -= len(m.Name)
	copy(dAtA[i:], m.Name)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Name)))
	i--
	dAtA[i] = 0x12
	i = encodeVarintBotApi(dAtA, i, uint64(m.BotID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotUpdatePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotUpdatePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotUpdatePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.BotID))
	i--
	dAtA[i] = 0x10
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotRevokeToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotRevokeToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotRevokeToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.GetNew {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.BotID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotDeleteMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotDeleteMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotDeleteMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MessageIDs) > 0 {
		for iNdEx := len(m.MessageIDs) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintBotApi(dAtA, i, uint64(m.MessageIDs[iNdEx]))
			i--
			dAtA[i] = 0x10
		}
	}
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotSetCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSetCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSetCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.CacheTime))
	i--
	dAtA[i] = 0x20
	i -= len(m.Message)
	copy(dAtA[i:], m.Message)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Message)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.Url)
	copy(dAtA[i:], m.Url)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Url)))
	i--
	dAtA[i] = 0x12
	i = encodeVarintBotApi(dAtA, i, uint64(m.QueryID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotGetCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotGetCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotGetCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1a
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.MessageID))
	i--
	dAtA[i] = 0x10
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotGetInlineResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotGetInlineResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotGetInlineResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	i -= len(m.Offset)
	copy(dAtA[i:], m.Offset)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Offset)))
	i--
	dAtA[i] = 0x22
	i -= len(m.Query)
	copy(dAtA[i:], m.Query)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Query)))
	i--
	dAtA[i] = 0x1a
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Bot == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	} else {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotSetInlineResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSetInlineResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSetInlineResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.QueryID))
	i--
	dAtA[i] = 0x38
	if m.SwitchPM != nil {
		{
			size, err := m.SwitchPM.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	i -= len(m.NextOffset)
	copy(dAtA[i:], m.NextOffset)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.NextOffset)))
	i--
	dAtA[i] = 0x22
	i = encodeVarintBotApi(dAtA, i, uint64(m.CacheTime))
	i--
	dAtA[i] = 0x18
	i--
	if m.Private {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	i--
	if m.Gallery {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotSendInlineResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSendInlineResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSendInlineResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.HideVia {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x40
	i--
	if m.Silent {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x30
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	i--
	if m.ClearDraft {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	i -= len(m.ResultID)
	copy(dAtA[i:], m.ResultID)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.ResultID)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintBotApi(dAtA, i, uint64(m.QueryID))
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.SwitchPM != nil {
		{
			size, err := m.SwitchPM.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	i -= len(m.NextOffset)
	copy(dAtA[i:], m.NextOffset)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.NextOffset)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintBotApi(dAtA, i, uint64(m.QueryID))
	i--
	dAtA[i] = 0x10
	i--
	if m.Gallery {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotInlineSwitchPM) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotInlineSwitchPM) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotInlineSwitchPM) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.StartParam)
	copy(dAtA[i:], m.StartParam)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.StartParam)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Text)
	copy(dAtA[i:], m.Text)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Text)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *BotInlineResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotInlineResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotInlineResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Message == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Message")
	} else {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	i -= len(m.Url)
	copy(dAtA[i:], m.Url)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Url)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Description)
	copy(dAtA[i:], m.Description)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Description)))
	i--
	dAtA[i] = 0x22
	i -= len(m.Title)
	copy(dAtA[i:], m.Title)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Title)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintBotApi(dAtA, i, uint64(m.Type))
	i--
	dAtA[i] = 0x10
	i -= len(m.ID)
	copy(dAtA[i:], m.ID)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.ID)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *InputBotInlineResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputBotInlineResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InputBotInlineResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Message == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Message")
	} else {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	i -= len(m.Url)
	copy(dAtA[i:], m.Url)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Url)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Description)
	copy(dAtA[i:], m.Description)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Description)))
	i--
	dAtA[i] = 0x22
	i -= len(m.Title)
	copy(dAtA[i:], m.Title)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Title)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintBotApi(dAtA, i, uint64(m.Type))
	i--
	dAtA[i] = 0x10
	i -= len(m.ID)
	copy(dAtA[i:], m.ID)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.ID)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *BotInlineMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotInlineMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotInlineMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ReplyMarkupData != nil {
		i -= len(m.ReplyMarkupData)
		copy(dAtA[i:], m.ReplyMarkupData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.ReplyMarkupData)))
		i--
		dAtA[i] = 0x72
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyMarkup))
	i--
	dAtA[i] = 0x68
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x60
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	i -= len(m.Body)
	copy(dAtA[i:], m.Body)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Body)))
	i--
	dAtA[i] = 0x52
	if m.MediaData != nil {
		i -= len(m.MediaData)
		copy(dAtA[i:], m.MediaData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.MediaData)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *InputBotInlineMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputBotInlineMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InputBotInlineMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ReplyMarkupData != nil {
		i -= len(m.ReplyMarkupData)
		copy(dAtA[i:], m.ReplyMarkupData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.ReplyMarkupData)))
		i--
		dAtA[i] = 0x72
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyMarkup))
	i--
	dAtA[i] = 0x68
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x60
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	i -= len(m.Body)
	copy(dAtA[i:], m.Body)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Body)))
	i--
	dAtA[i] = 0x52
	i--
	if m.NoWebPage {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	if m.InputMediaData != nil {
		i -= len(m.InputMediaData)
		copy(dAtA[i:], m.InputMediaData)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.InputMediaData)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Token != nil {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintBotApi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotRecalled) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotRecalled) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotRecalled) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Username)
	copy(dAtA[i:], m.Username)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Username)))
	i--
	dAtA[i] = 0x12
	i = encodeVarintBotApi(dAtA, i, uint64(m.ID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.CacheTime))
	i--
	dAtA[i] = 0x18
	i -= len(m.Message)
	copy(dAtA[i:], m.Message)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Message)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Url)
	copy(dAtA[i:], m.Url)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Url)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *BotsMany) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotsMany) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotsMany) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bots) > 0 {
		for iNdEx := len(m.Bots) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Bots[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *BotGetCommands) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotGetCommands) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotGetCommands) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotCommandsMany) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotCommandsMany) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotCommandsMany) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Commands) > 0 {
		for iNdEx := len(m.Commands) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Commands[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintBotApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovBotApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BotStart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.RandomID))
	l = len(m.StartParam)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotRecall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.Version))
	return n
}

func (m *BotSetInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.BotID))
	n += 1 + sovBotApi(uint64(m.RandomID))
	n += 1 + sovBotApi(uint64(m.Owner))
	if len(m.BotCommands) > 0 {
		for _, e := range m.BotCommands {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	l = len(m.Description)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotGet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.UserID))
	n += 1 + sovBotApi(uint64(m.Limit))
	return n
}

func (m *BotSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.RandomID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	l = len(m.Body)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.ReplyTo))
	n += 2
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	n += 1 + sovBotApi(uint64(m.ReplyMarkup))
	if m.ReplyMarkupData != nil {
		l = len(m.ReplyMarkupData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotEditMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.RandomID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	l = len(m.Body)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.MessageID))
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	n += 1 + sovBotApi(uint64(m.ReplyMarkup))
	if m.ReplyMarkupData != nil {
		l = len(m.ReplyMarkupData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotSendMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.RandomID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.MediaType))
	if m.MediaData != nil {
		l = len(m.MediaData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.ReplyTo))
	return n
}

func (m *BotSaveFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.FileID))
	n += 1 + sovBotApi(uint64(m.PartID))
	n += 1 + sovBotApi(uint64(m.TotalParts))
	if m.Bytes != nil {
		l = len(m.Bytes)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.BotID))
	l = len(m.Name)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Bio)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotUpdatePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.BotID))
	return n
}

func (m *BotRevokeToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.BotID))
	n += 2
	return n
}

func (m *BotDeleteMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	if len(m.MessageIDs) > 0 {
		for _, e := range m.MessageIDs {
			n += 1 + sovBotApi(uint64(e))
		}
	}
	return n
}

func (m *BotSetCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.QueryID))
	l = len(m.Url)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Message)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.CacheTime))
	return n
}

func (m *BotGetCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.MessageID))
	if m.Data != nil {
		l = len(m.Data)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotGetInlineResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	l = len(m.Query)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Offset)
	n += 1 + l + sovBotApi(uint64(l))
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotSetInlineResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	n += 2
	n += 1 + sovBotApi(uint64(m.CacheTime))
	l = len(m.NextOffset)
	n += 1 + l + sovBotApi(uint64(l))
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	if m.SwitchPM != nil {
		l = m.SwitchPM.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.QueryID))
	return n
}

func (m *BotSendInlineResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.RandomID))
	n += 1 + sovBotApi(uint64(m.QueryID))
	l = len(m.ResultID)
	n += 1 + l + sovBotApi(uint64(l))
	n += 2
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.ReplyTo))
	n += 2
	n += 2
	return n
}

func (m *BotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	n += 1 + sovBotApi(uint64(m.QueryID))
	l = len(m.NextOffset)
	n += 1 + l + sovBotApi(uint64(l))
	if m.SwitchPM != nil {
		l = m.SwitchPM.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	return n
}

func (m *BotInlineSwitchPM) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.StartParam)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotInlineResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.Type))
	l = len(m.Title)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Description)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Url)
	n += 1 + l + sovBotApi(uint64(l))
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *InputBotInlineResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.Type))
	l = len(m.Title)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Description)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Url)
	n += 1 + l + sovBotApi(uint64(l))
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotInlineMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MediaData != nil {
		l = len(m.MediaData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	l = len(m.Body)
	n += 1 + l + sovBotApi(uint64(l))
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	n += 1 + sovBotApi(uint64(m.ReplyTo))
	n += 1 + sovBotApi(uint64(m.ReplyMarkup))
	if m.ReplyMarkupData != nil {
		l = len(m.ReplyMarkupData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *InputBotInlineMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InputMediaData != nil {
		l = len(m.InputMediaData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 2
	l = len(m.Body)
	n += 1 + l + sovBotApi(uint64(l))
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	n += 1 + sovBotApi(uint64(m.ReplyTo))
	n += 1 + sovBotApi(uint64(m.ReplyMarkup))
	if m.ReplyMarkupData != nil {
		l = len(m.ReplyMarkupData)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Token != nil {
		l = len(m.Token)
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotRecalled) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.ID))
	l = len(m.Username)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	n += 1 + l + sovBotApi(uint64(l))
	l = len(m.Message)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.CacheTime))
	return n
}

func (m *BotsMany) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Bots) > 0 {
		for _, e := range m.Bots {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	return n
}

func (m *BotGetCommands) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	return n
}

func (m *BotCommandsMany) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Commands) > 0 {
		for _, e := range m.Commands {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	return n
}

func sovBotApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBotApi(x uint64) (n int) {
	return sovBotApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BotStart) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotStart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotStart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputPeer{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("StartParam")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotRecall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotRecall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotRecall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Version")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSetInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSetInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSetInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotID", wireType)
			}
			m.BotID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			m.Owner = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Owner |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotCommands", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BotCommands = append(m.BotCommands, &BotCommands{})
			if err := m.BotCommands[len(m.BotCommands)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("BotID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Owner")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Description")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotGet) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotGet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotGet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("UserID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSendMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			m.ReplyMarkup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyMarkup |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkupData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplyMarkupData = append(m.ReplyMarkupData[:0], dAtA[iNdEx:postIndex]...)
			if m.ReplyMarkupData == nil {
				m.ReplyMarkupData = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Body")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotEditMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotEditMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotEditMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageID", wireType)
			}
			m.MessageID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			m.ReplyMarkup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyMarkup |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkupData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplyMarkupData = append(m.ReplyMarkupData[:0], dAtA[iNdEx:postIndex]...)
			if m.ReplyMarkupData == nil {
				m.ReplyMarkupData = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Body")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("MessageID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSendMedia) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSendMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSendMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaType", wireType)
			}
			m.MediaType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MediaType |= InputMediaType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaData = append(m.MediaData[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaData == nil {
				m.MediaData = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("MediaType")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("MediaData")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSaveFilePart) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSaveFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSaveFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileID", wireType)
			}
			m.FileID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartID", wireType)
			}
			m.PartID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PartID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalParts", wireType)
			}
			m.TotalParts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalParts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FileID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PartID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TotalParts")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bytes")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotUpdateProfile) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotUpdateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotUpdateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotID", wireType)
			}
			m.BotID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("BotID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Name")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotUpdatePhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotUpdatePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotUpdatePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFileLocation{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotID", wireType)
			}
			m.BotID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("BotID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotRevokeToken) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotRevokeToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotRevokeToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotID", wireType)
			}
			m.BotID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetNew", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GetNew = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("BotID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("GetNew")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotDeleteMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotDeleteMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotDeleteMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowBotApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MessageIDs = append(m.MessageIDs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowBotApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthBotApi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthBotApi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MessageIDs) == 0 {
					m.MessageIDs = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowBotApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MessageIDs = append(m.MessageIDs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageIDs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSetCallbackAnswer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSetCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSetCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryID", wireType)
			}
			m.QueryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("QueryID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CacheTime")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotGetCallbackAnswer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotGetCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotGetCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageID", wireType)
			}
			m.MessageID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Data")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotGetInlineResults) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotGetInlineResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotGetInlineResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputGeoLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Query")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Offset")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSetInlineResults) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSetInlineResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSetInlineResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gallery", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gallery = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Private", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Private = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &InputBotInlineResult{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchPM", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchPM == nil {
				m.SwitchPM = &BotInlineSwitchPM{}
			}
			if err := m.SwitchPM.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryID", wireType)
			}
			m.QueryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Gallery")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Private")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CacheTime")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("QueryID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSendInlineResults) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSendInlineResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSendInlineResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryID", wireType)
			}
			m.QueryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResultID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HideVia", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HideVia = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("QueryID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ResultID")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClearDraft")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ReplyTo")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotResults) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gallery", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gallery = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryID", wireType)
			}
			m.QueryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchPM", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchPM == nil {
				m.SwitchPM = &BotInlineSwitchPM{}
			}
			if err := m.SwitchPM.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &BotInlineResult{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Gallery")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("QueryID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotInlineSwitchPM) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotInlineSwitchPM: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotInlineSwitchPM: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Text")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("StartParam")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotInlineResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotInlineResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotInlineResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= MediaType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &MediaWebDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &BotInlineMessage{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Message")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputBotInlineResult) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputBotInlineResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputBotInlineResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= InputMediaType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputMediaWebDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &InputBotInlineMessage{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Message")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotInlineMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotInlineMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotInlineMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaData = append(m.MediaData[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaData == nil {
				m.MediaData = []byte{}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			m.ReplyMarkup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyMarkup |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkupData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplyMarkupData = append(m.ReplyMarkupData[:0], dAtA[iNdEx:postIndex]...)
			if m.ReplyMarkupData == nil {
				m.ReplyMarkupData = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputBotInlineMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputBotInlineMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputBotInlineMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputMediaData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputMediaData = append(m.InputMediaData[:0], dAtA[iNdEx:postIndex]...)
			if m.InputMediaData == nil {
				m.InputMediaData = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebPage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebPage = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			m.ReplyMarkup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyMarkup |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkupData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplyMarkupData = append(m.ReplyMarkupData[:0], dAtA[iNdEx:postIndex]...)
			if m.ReplyMarkupData == nil {
				m.ReplyMarkupData = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotToken) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotRecalled) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotRecalled: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotRecalled: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotCallbackAnswer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CacheTime")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotsMany) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotsMany: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotsMany: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bots", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bots = append(m.Bots, &BotInfo{})
			if err := m.Bots[len(m.Bots)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotGetCommands) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotGetCommands: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotGetCommands: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotCommandsMany) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotCommandsMany: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotCommandsMany: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commands", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commands = append(m.Commands, &BotCommands{})
			if err := m.Commands[len(m.Commands)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBotApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBotApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBotApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBotApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBotApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBotApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBotApi = fmt.Errorf("proto: unexpected end of group")
)
