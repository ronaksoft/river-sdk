// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.auth.proto

package msg

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AuthRegister
// @Function
// @Return: AuthAuthorization
type AuthRegister struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	FirstName     string `protobuf:"bytes,2,req,name=FirstName" json:"FirstName"`
	LastName      string `protobuf:"bytes,3,req,name=LastName" json:"LastName"`
	PhoneCode     string `protobuf:"bytes,4,req,name=PhoneCode" json:"PhoneCode"`
	PhoneCodeHash string `protobuf:"bytes,5,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	LangCode      string `protobuf:"bytes,6,opt,name=LangCode" json:"LangCode"`
}

func (m *AuthRegister) Reset()         { *m = AuthRegister{} }
func (m *AuthRegister) String() string { return proto.CompactTextString(m) }
func (*AuthRegister) ProtoMessage()    {}
func (*AuthRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{0}
}
func (m *AuthRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRegister.Merge(m, src)
}
func (m *AuthRegister) XXX_Size() int {
	return m.Size()
}
func (m *AuthRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRegister.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRegister proto.InternalMessageInfo

func (m *AuthRegister) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthRegister) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AuthRegister) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AuthRegister) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

func (m *AuthRegister) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AuthRegister) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// AuthBotRegister
// @Function
// @Return: AuthBotAuthorization
type AuthBotRegister struct {
	Name     string `protobuf:"bytes,1,req,name=Name" json:"Name"`
	Username string `protobuf:"bytes,2,req,name=Username" json:"Username"`
	OwnerID  int64  `protobuf:"varint,3,req,name=OwnerID" json:"OwnerID"`
}

func (m *AuthBotRegister) Reset()         { *m = AuthBotRegister{} }
func (m *AuthBotRegister) String() string { return proto.CompactTextString(m) }
func (*AuthBotRegister) ProtoMessage()    {}
func (*AuthBotRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{1}
}
func (m *AuthBotRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthBotRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthBotRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthBotRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthBotRegister.Merge(m, src)
}
func (m *AuthBotRegister) XXX_Size() int {
	return m.Size()
}
func (m *AuthBotRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthBotRegister.DiscardUnknown(m)
}

var xxx_messageInfo_AuthBotRegister proto.InternalMessageInfo

func (m *AuthBotRegister) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthBotRegister) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthBotRegister) GetOwnerID() int64 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

// AuthLogin
// @Function
// @Return: AuthAuthorization
type AuthLogin struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	PhoneCode     string `protobuf:"bytes,3,req,name=PhoneCode" json:"PhoneCode"`
}

func (m *AuthLogin) Reset()         { *m = AuthLogin{} }
func (m *AuthLogin) String() string { return proto.CompactTextString(m) }
func (*AuthLogin) ProtoMessage()    {}
func (*AuthLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{2}
}
func (m *AuthLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLogin.Merge(m, src)
}
func (m *AuthLogin) XXX_Size() int {
	return m.Size()
}
func (m *AuthLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLogin.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLogin proto.InternalMessageInfo

func (m *AuthLogin) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthLogin) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AuthLogin) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// AuthCheckPassword
// @Function
// @Return: AuthAuthorization
type AuthCheckPassword struct {
	Password *InputPassword `protobuf:"bytes,1,req,name=Password" json:"Password,omitempty"`
}

func (m *AuthCheckPassword) Reset()         { *m = AuthCheckPassword{} }
func (m *AuthCheckPassword) String() string { return proto.CompactTextString(m) }
func (*AuthCheckPassword) ProtoMessage()    {}
func (*AuthCheckPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{3}
}
func (m *AuthCheckPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthCheckPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthCheckPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthCheckPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCheckPassword.Merge(m, src)
}
func (m *AuthCheckPassword) XXX_Size() int {
	return m.Size()
}
func (m *AuthCheckPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCheckPassword.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCheckPassword proto.InternalMessageInfo

func (m *AuthCheckPassword) GetPassword() *InputPassword {
	if m != nil {
		return m.Password
	}
	return nil
}

// AuthRecoverPassword
// @Function
// @Returns AuthAuthorization
type AuthRecoverPassword struct {
	Code string `protobuf:"bytes,1,req,name=Code" json:"Code"`
}

func (m *AuthRecoverPassword) Reset()         { *m = AuthRecoverPassword{} }
func (m *AuthRecoverPassword) String() string { return proto.CompactTextString(m) }
func (*AuthRecoverPassword) ProtoMessage()    {}
func (*AuthRecoverPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{4}
}
func (m *AuthRecoverPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRecoverPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRecoverPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthRecoverPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRecoverPassword.Merge(m, src)
}
func (m *AuthRecoverPassword) XXX_Size() int {
	return m.Size()
}
func (m *AuthRecoverPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRecoverPassword.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRecoverPassword proto.InternalMessageInfo

func (m *AuthRecoverPassword) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// AuthLogout
// @Function
// @Return: Bool
type AuthLogout struct {
	AuthIDs []int64 `protobuf:"varint,1,rep,name=AuthIDs" json:"AuthIDs,omitempty"`
}

func (m *AuthLogout) Reset()         { *m = AuthLogout{} }
func (m *AuthLogout) String() string { return proto.CompactTextString(m) }
func (*AuthLogout) ProtoMessage()    {}
func (*AuthLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{5}
}
func (m *AuthLogout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthLogout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLogout.Merge(m, src)
}
func (m *AuthLogout) XXX_Size() int {
	return m.Size()
}
func (m *AuthLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLogout.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLogout proto.InternalMessageInfo

func (m *AuthLogout) GetAuthIDs() []int64 {
	if m != nil {
		return m.AuthIDs
	}
	return nil
}

// AuthLoginByToken
// @Function
// @Return: AuthAuthorization
type AuthLoginByToken struct {
	Token    string `protobuf:"bytes,1,req,name=Token" json:"Token"`
	Provider string `protobuf:"bytes,2,req,name=Provider" json:"Provider"`
}

func (m *AuthLoginByToken) Reset()         { *m = AuthLoginByToken{} }
func (m *AuthLoginByToken) String() string { return proto.CompactTextString(m) }
func (*AuthLoginByToken) ProtoMessage()    {}
func (*AuthLoginByToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{6}
}
func (m *AuthLoginByToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthLoginByToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthLoginByToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthLoginByToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLoginByToken.Merge(m, src)
}
func (m *AuthLoginByToken) XXX_Size() int {
	return m.Size()
}
func (m *AuthLoginByToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLoginByToken.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLoginByToken proto.InternalMessageInfo

func (m *AuthLoginByToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthLoginByToken) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

// AuthCheckPhone
// @Function
// @Return: AuthCheckedPhone
type AuthCheckPhone struct {
	Phone string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
}

func (m *AuthCheckPhone) Reset()         { *m = AuthCheckPhone{} }
func (m *AuthCheckPhone) String() string { return proto.CompactTextString(m) }
func (*AuthCheckPhone) ProtoMessage()    {}
func (*AuthCheckPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{7}
}
func (m *AuthCheckPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthCheckPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthCheckPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthCheckPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCheckPhone.Merge(m, src)
}
func (m *AuthCheckPhone) XXX_Size() int {
	return m.Size()
}
func (m *AuthCheckPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCheckPhone.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCheckPhone proto.InternalMessageInfo

func (m *AuthCheckPhone) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// AuthSendCode
// @Function
// @Return: AuthSentCode
type AuthSendCode struct {
	Phone   string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	AppHash string `protobuf:"bytes,2,opt,name=AppHash" json:"AppHash"`
}

func (m *AuthSendCode) Reset()         { *m = AuthSendCode{} }
func (m *AuthSendCode) String() string { return proto.CompactTextString(m) }
func (*AuthSendCode) ProtoMessage()    {}
func (*AuthSendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{8}
}
func (m *AuthSendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthSendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthSendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthSendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthSendCode.Merge(m, src)
}
func (m *AuthSendCode) XXX_Size() int {
	return m.Size()
}
func (m *AuthSendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthSendCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthSendCode proto.InternalMessageInfo

func (m *AuthSendCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthSendCode) GetAppHash() string {
	if m != nil {
		return m.AppHash
	}
	return ""
}

// AuthResendCode
// @Function
// @Return: Bool
type AuthResendCode struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	AppHash       string `protobuf:"bytes,3,opt,name=AppHash" json:"AppHash"`
}

func (m *AuthResendCode) Reset()         { *m = AuthResendCode{} }
func (m *AuthResendCode) String() string { return proto.CompactTextString(m) }
func (*AuthResendCode) ProtoMessage()    {}
func (*AuthResendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{9}
}
func (m *AuthResendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthResendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthResendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthResendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResendCode.Merge(m, src)
}
func (m *AuthResendCode) XXX_Size() int {
	return m.Size()
}
func (m *AuthResendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResendCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResendCode proto.InternalMessageInfo

func (m *AuthResendCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthResendCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AuthResendCode) GetAppHash() string {
	if m != nil {
		return m.AppHash
	}
	return ""
}

// AuthRecall
// @Function
// @Return: AuthRecalled
type AuthRecall struct {
	ClientID   int64  `protobuf:"varint,1,req,name=ClientID" json:"ClientID"`
	Version    uint32 `protobuf:"varint,2,opt,name=Version" json:"Version"`
	AppVersion string `protobuf:"bytes,3,opt,name=AppVersion" json:"AppVersion"`
	Platform   string `protobuf:"bytes,4,opt,name=Platform" json:"Platform"`
	Vendor     string `protobuf:"bytes,5,opt,name=Vendor" json:"Vendor"`
	OSVersion  string `protobuf:"bytes,6,opt,name=OSVersion" json:"OSVersion"`
}

func (m *AuthRecall) Reset()         { *m = AuthRecall{} }
func (m *AuthRecall) String() string { return proto.CompactTextString(m) }
func (*AuthRecall) ProtoMessage()    {}
func (*AuthRecall) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{10}
}
func (m *AuthRecall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRecall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRecall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthRecall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRecall.Merge(m, src)
}
func (m *AuthRecall) XXX_Size() int {
	return m.Size()
}
func (m *AuthRecall) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRecall.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRecall proto.InternalMessageInfo

func (m *AuthRecall) GetClientID() int64 {
	if m != nil {
		return m.ClientID
	}
	return 0
}

func (m *AuthRecall) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *AuthRecall) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AuthRecall) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *AuthRecall) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *AuthRecall) GetOSVersion() string {
	if m != nil {
		return m.OSVersion
	}
	return ""
}

// AuthDestroyKey
// @Function
// @Return: Bool
type AuthDestroyKey struct {
}

func (m *AuthDestroyKey) Reset()         { *m = AuthDestroyKey{} }
func (m *AuthDestroyKey) String() string { return proto.CompactTextString(m) }
func (*AuthDestroyKey) ProtoMessage()    {}
func (*AuthDestroyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{11}
}
func (m *AuthDestroyKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthDestroyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthDestroyKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthDestroyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthDestroyKey.Merge(m, src)
}
func (m *AuthDestroyKey) XXX_Size() int {
	return m.Size()
}
func (m *AuthDestroyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthDestroyKey.DiscardUnknown(m)
}

var xxx_messageInfo_AuthDestroyKey proto.InternalMessageInfo

// AuthPasswordRecovery
type AuthPasswordRecovery struct {
	EmailPattern string `protobuf:"bytes,1,req,name=EmailPattern" json:"EmailPattern"`
}

func (m *AuthPasswordRecovery) Reset()         { *m = AuthPasswordRecovery{} }
func (m *AuthPasswordRecovery) String() string { return proto.CompactTextString(m) }
func (*AuthPasswordRecovery) ProtoMessage()    {}
func (*AuthPasswordRecovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{12}
}
func (m *AuthPasswordRecovery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthPasswordRecovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthPasswordRecovery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthPasswordRecovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthPasswordRecovery.Merge(m, src)
}
func (m *AuthPasswordRecovery) XXX_Size() int {
	return m.Size()
}
func (m *AuthPasswordRecovery) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthPasswordRecovery.DiscardUnknown(m)
}

var xxx_messageInfo_AuthPasswordRecovery proto.InternalMessageInfo

func (m *AuthPasswordRecovery) GetEmailPattern() string {
	if m != nil {
		return m.EmailPattern
	}
	return ""
}

// AuthRecalled
type AuthRecalled struct {
	ClientID       int64  `protobuf:"varint,1,req,name=ClientID" json:"ClientID"`
	Timestamp      int64  `protobuf:"varint,2,req,name=Timestamp" json:"Timestamp"`
	UpdateID       int64  `protobuf:"varint,3,opt,name=UpdateID" json:"UpdateID"`
	Available      bool   `protobuf:"varint,4,opt,name=Available" json:"Available"`
	Force          bool   `protobuf:"varint,5,opt,name=Force" json:"Force"`
	CurrentVersion string `protobuf:"bytes,6,opt,name=CurrentVersion" json:"CurrentVersion"`
}

func (m *AuthRecalled) Reset()         { *m = AuthRecalled{} }
func (m *AuthRecalled) String() string { return proto.CompactTextString(m) }
func (*AuthRecalled) ProtoMessage()    {}
func (*AuthRecalled) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{13}
}
func (m *AuthRecalled) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRecalled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRecalled.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthRecalled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRecalled.Merge(m, src)
}
func (m *AuthRecalled) XXX_Size() int {
	return m.Size()
}
func (m *AuthRecalled) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRecalled.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRecalled proto.InternalMessageInfo

func (m *AuthRecalled) GetClientID() int64 {
	if m != nil {
		return m.ClientID
	}
	return 0
}

func (m *AuthRecalled) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AuthRecalled) GetUpdateID() int64 {
	if m != nil {
		return m.UpdateID
	}
	return 0
}

func (m *AuthRecalled) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *AuthRecalled) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *AuthRecalled) GetCurrentVersion() string {
	if m != nil {
		return m.CurrentVersion
	}
	return ""
}

// AuthAuthorization
type AuthAuthorization struct {
	Expired uint64 `protobuf:"fixed64,1,req,name=Expired" json:"Expired"`
	User    *User  `protobuf:"bytes,2,req,name=User" json:"User,omitempty"`
}

func (m *AuthAuthorization) Reset()         { *m = AuthAuthorization{} }
func (m *AuthAuthorization) String() string { return proto.CompactTextString(m) }
func (*AuthAuthorization) ProtoMessage()    {}
func (*AuthAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{14}
}
func (m *AuthAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthAuthorization.Merge(m, src)
}
func (m *AuthAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AuthAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AuthAuthorization proto.InternalMessageInfo

func (m *AuthAuthorization) GetExpired() uint64 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *AuthAuthorization) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// AuthBotAuthorization
type AuthBotAuthorization struct {
	AuthID  int64  `protobuf:"varint,1,req,name=AuthID" json:"AuthID"`
	AuthKey []byte `protobuf:"bytes,2,req,name=AuthKey" json:"AuthKey"`
	Bot     *Bot   `protobuf:"bytes,3,req,name=Bot" json:"Bot,omitempty"`
}

func (m *AuthBotAuthorization) Reset()         { *m = AuthBotAuthorization{} }
func (m *AuthBotAuthorization) String() string { return proto.CompactTextString(m) }
func (*AuthBotAuthorization) ProtoMessage()    {}
func (*AuthBotAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{15}
}
func (m *AuthBotAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthBotAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthBotAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthBotAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthBotAuthorization.Merge(m, src)
}
func (m *AuthBotAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AuthBotAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthBotAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AuthBotAuthorization proto.InternalMessageInfo

func (m *AuthBotAuthorization) GetAuthID() int64 {
	if m != nil {
		return m.AuthID
	}
	return 0
}

func (m *AuthBotAuthorization) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

func (m *AuthBotAuthorization) GetBot() *Bot {
	if m != nil {
		return m.Bot
	}
	return nil
}

// AuthCheckedPhone
type AuthCheckedPhone struct {
	Invited    bool `protobuf:"varint,1,req,name=Invited" json:"Invited"`
	Registered bool `protobuf:"varint,2,req,name=Registered" json:"Registered"`
}

func (m *AuthCheckedPhone) Reset()         { *m = AuthCheckedPhone{} }
func (m *AuthCheckedPhone) String() string { return proto.CompactTextString(m) }
func (*AuthCheckedPhone) ProtoMessage()    {}
func (*AuthCheckedPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{16}
}
func (m *AuthCheckedPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthCheckedPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthCheckedPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthCheckedPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCheckedPhone.Merge(m, src)
}
func (m *AuthCheckedPhone) XXX_Size() int {
	return m.Size()
}
func (m *AuthCheckedPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCheckedPhone.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCheckedPhone proto.InternalMessageInfo

func (m *AuthCheckedPhone) GetInvited() bool {
	if m != nil {
		return m.Invited
	}
	return false
}

func (m *AuthCheckedPhone) GetRegistered() bool {
	if m != nil {
		return m.Registered
	}
	return false
}

// AuthSentCode
type AuthSentCode struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	SendToPhone   bool   `protobuf:"varint,3,opt,name=SendToPhone" json:"SendToPhone"`
}

func (m *AuthSentCode) Reset()         { *m = AuthSentCode{} }
func (m *AuthSentCode) String() string { return proto.CompactTextString(m) }
func (*AuthSentCode) ProtoMessage()    {}
func (*AuthSentCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b771a58039c158f, []int{17}
}
func (m *AuthSentCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthSentCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthSentCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthSentCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthSentCode.Merge(m, src)
}
func (m *AuthSentCode) XXX_Size() int {
	return m.Size()
}
func (m *AuthSentCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthSentCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthSentCode proto.InternalMessageInfo

func (m *AuthSentCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthSentCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AuthSentCode) GetSendToPhone() bool {
	if m != nil {
		return m.SendToPhone
	}
	return false
}

func init() {
	proto.RegisterType((*AuthRegister)(nil), "msg.AuthRegister")
	proto.RegisterType((*AuthBotRegister)(nil), "msg.AuthBotRegister")
	proto.RegisterType((*AuthLogin)(nil), "msg.AuthLogin")
	proto.RegisterType((*AuthCheckPassword)(nil), "msg.AuthCheckPassword")
	proto.RegisterType((*AuthRecoverPassword)(nil), "msg.AuthRecoverPassword")
	proto.RegisterType((*AuthLogout)(nil), "msg.AuthLogout")
	proto.RegisterType((*AuthLoginByToken)(nil), "msg.AuthLoginByToken")
	proto.RegisterType((*AuthCheckPhone)(nil), "msg.AuthCheckPhone")
	proto.RegisterType((*AuthSendCode)(nil), "msg.AuthSendCode")
	proto.RegisterType((*AuthResendCode)(nil), "msg.AuthResendCode")
	proto.RegisterType((*AuthRecall)(nil), "msg.AuthRecall")
	proto.RegisterType((*AuthDestroyKey)(nil), "msg.AuthDestroyKey")
	proto.RegisterType((*AuthPasswordRecovery)(nil), "msg.AuthPasswordRecovery")
	proto.RegisterType((*AuthRecalled)(nil), "msg.AuthRecalled")
	proto.RegisterType((*AuthAuthorization)(nil), "msg.AuthAuthorization")
	proto.RegisterType((*AuthBotAuthorization)(nil), "msg.AuthBotAuthorization")
	proto.RegisterType((*AuthCheckedPhone)(nil), "msg.AuthCheckedPhone")
	proto.RegisterType((*AuthSentCode)(nil), "msg.AuthSentCode")
}

func init() { proto.RegisterFile("chat.api.auth.proto", fileDescriptor_3b771a58039c158f) }

var fileDescriptor_3b771a58039c158f = []byte{
	// 803 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0xc7, 0xd7, 0x71, 0x36, 0x1f, 0x27, 0xdb, 0x52, 0xa6, 0x20, 0x59, 0xab, 0xc5, 0x44, 0x23,
	0x84, 0x56, 0x55, 0x15, 0xaa, 0x7d, 0x02, 0xe2, 0xa4, 0x15, 0xa1, 0x15, 0x8d, 0xdc, 0xa5, 0xe2,
	0x76, 0x88, 0x0f, 0x89, 0xd5, 0xd8, 0x63, 0x8d, 0x27, 0xd9, 0x86, 0x0b, 0x9e, 0x81, 0xc7, 0xea,
	0x65, 0x2f, 0x11, 0x17, 0x08, 0x65, 0x25, 0x9e, 0x03, 0xcd, 0x8c, 0x67, 0x62, 0x97, 0x65, 0xb5,
	0x48, 0x5c, 0x58, 0xb2, 0x7f, 0xe7, 0xe8, 0x1c, 0x9f, 0xff, 0xf9, 0x80, 0x87, 0x8b, 0x15, 0x93,
	0x23, 0x56, 0xa4, 0x23, 0xb6, 0x91, 0xab, 0x51, 0x21, 0xb8, 0xe4, 0xc4, 0xcf, 0xca, 0xe5, 0xe9,
	0xa7, 0xda, 0xb2, 0xe0, 0x02, 0x47, 0x72, 0x57, 0x60, 0x69, 0x6c, 0x74, 0xef, 0xc1, 0xc9, 0x78,
	0x23, 0x57, 0x31, 0x2e, 0xd3, 0x52, 0xa2, 0x20, 0xa7, 0x70, 0x3c, 0x5f, 0xf1, 0x1c, 0x03, 0x6f,
	0xd8, 0x3a, 0xef, 0x47, 0xed, 0x77, 0x7f, 0x7c, 0x7e, 0x14, 0x1b, 0x44, 0x28, 0xf4, 0x9f, 0xa5,
	0xa2, 0x94, 0xdf, 0xb1, 0x0c, 0x83, 0x56, 0xcd, 0x7e, 0xc0, 0x64, 0x08, 0xbd, 0x17, 0xac, 0x72,
	0xf1, 0x6b, 0x2e, 0x8e, 0xaa, 0x28, 0x3a, 0xdc, 0x84, 0x27, 0x18, 0xb4, 0xeb, 0x51, 0x1c, 0x26,
	0x8f, 0xe0, 0x9e, 0xfb, 0xf8, 0x86, 0x95, 0xab, 0xe0, 0xb8, 0xe6, 0xd7, 0x34, 0x99, 0x8c, 0xf9,
	0x52, 0x87, 0xeb, 0x0c, 0xbd, 0x7a, 0x46, 0x43, 0x69, 0x06, 0x1f, 0xa9, 0x1a, 0x23, 0x2e, 0x5d,
	0x99, 0x01, 0xb4, 0xf5, 0x2f, 0xd6, 0xab, 0x6c, 0xdb, 0x02, 0xbe, 0x2f, 0x51, 0xe4, 0x1f, 0xd6,
	0xe8, 0x28, 0x09, 0xa1, 0xfb, 0xf2, 0x2a, 0x47, 0x31, 0x9b, 0xea, 0x0a, 0xfd, 0xca, 0xc1, 0x42,
	0x7a, 0x05, 0x7d, 0x95, 0xee, 0x05, 0x5f, 0xa6, 0xf9, 0xad, 0x7a, 0xfe, 0xa3, 0xca, 0xd6, 0xbf,
	0x57, 0xd9, 0x50, 0xcd, 0xbf, 0x51, 0x35, 0x3a, 0x81, 0x8f, 0x55, 0xe2, 0xc9, 0x0a, 0x17, 0x6f,
	0xe6, 0xac, 0x2c, 0xaf, 0xb8, 0x48, 0xc8, 0x08, 0x7a, 0xf6, 0x5d, 0xff, 0xc3, 0xe0, 0x82, 0x8c,
	0xb2, 0x72, 0x39, 0x9a, 0xe5, 0xc5, 0x46, 0x5a, 0x4b, 0xec, 0x7c, 0xe8, 0x57, 0xf0, 0xd0, 0x0c,
	0xc4, 0x82, 0x6f, 0x51, 0xb8, 0x30, 0x01, 0xb4, 0x75, 0xea, 0x86, 0x60, 0x3a, 0xeb, 0x23, 0x80,
	0xaa, 0x5c, 0xbe, 0x91, 0xe4, 0x0c, 0xba, 0xea, 0x6b, 0x36, 0x2d, 0x03, 0x6f, 0xe8, 0x9f, 0xfb,
	0x51, 0xeb, 0x89, 0x17, 0x5b, 0x44, 0xe7, 0xf0, 0xc0, 0x49, 0x13, 0xed, 0x2e, 0xf9, 0x1b, 0xd4,
	0x0a, 0xe9, 0x97, 0xa6, 0x42, 0xc6, 0x36, 0x84, 0xde, 0x5c, 0xf0, 0x6d, 0x9a, 0xa0, 0x68, 0x36,
	0xc3, 0x52, 0xfa, 0x18, 0xee, 0x1f, 0x6a, 0xd6, 0xaa, 0xde, 0xa2, 0x38, 0xfd, 0xd6, 0x4c, 0xfb,
	0x2b, 0xcc, 0x13, 0x3d, 0x67, 0xb7, 0x75, 0x27, 0x84, 0xee, 0xb8, 0x28, 0xaa, 0xbe, 0x1c, 0xc6,
	0xca, 0x42, 0xfa, 0xd6, 0x64, 0x8e, 0xb1, 0xbc, 0x4b, 0xb4, 0xff, 0xd2, 0xeb, 0x5a, 0x66, 0xff,
	0xa6, 0xcc, 0xbf, 0x7b, 0x46, 0xf2, 0x18, 0x17, 0x6c, 0xbd, 0x26, 0x14, 0x7a, 0x93, 0x75, 0x8a,
	0xb9, 0x9c, 0x4d, 0x75, 0x66, 0x3f, 0xea, 0x28, 0xff, 0x27, 0x5e, 0xec, 0xb8, 0x0a, 0xf9, 0x1a,
	0x45, 0x99, 0xf2, 0x5c, 0x17, 0x73, 0xcf, 0x86, 0xac, 0x20, 0xf9, 0x02, 0x60, 0x5c, 0x14, 0xd6,
	0xa5, 0x9e, 0xb5, 0xc6, 0x75, 0x3b, 0xd6, 0x4c, 0xfe, 0xc4, 0x45, 0x16, 0xb4, 0xeb, 0xab, 0x66,
	0x29, 0x39, 0x83, 0xce, 0x6b, 0xcc, 0x13, 0x2e, 0x82, 0xe3, 0x9a, 0xbd, 0x62, 0x6a, 0x88, 0x5f,
	0xbe, 0xb2, 0x49, 0xea, 0xbb, 0x7a, 0xc0, 0xf4, 0x81, 0x91, 0x75, 0x8a, 0xa5, 0x14, 0x7c, 0xf7,
	0x1c, 0x77, 0xf4, 0x6b, 0xf8, 0x44, 0x11, 0x37, 0xab, 0x66, 0x32, 0x77, 0xe4, 0x1c, 0x4e, 0x9e,
	0x66, 0x2c, 0x5d, 0xcf, 0x99, 0x94, 0x28, 0x9a, 0xf3, 0xd3, 0xb0, 0xd0, 0xbf, 0xdc, 0x95, 0x53,
	0x82, 0x61, 0x72, 0x27, 0xc9, 0x28, 0xf4, 0x2f, 0xd3, 0x0c, 0x4b, 0xc9, 0xb2, 0x42, 0x77, 0xcb,
	0x2e, 0xfa, 0x01, 0xeb, 0x63, 0x51, 0x24, 0x4c, 0xa2, 0xbe, 0x05, 0x9e, 0x73, 0x71, 0x54, 0x45,
	0x19, 0x6f, 0x59, 0xba, 0x66, 0x3f, 0xae, 0x51, 0x6b, 0xd6, 0xb3, 0x51, 0x1c, 0x56, 0x73, 0xf3,
	0x8c, 0x8b, 0x05, 0x6a, 0xcd, 0xac, 0xdd, 0x20, 0xf2, 0x18, 0xee, 0x4f, 0x36, 0x42, 0x60, 0x2e,
	0x6f, 0xd2, 0xed, 0x03, 0x1b, 0x8d, 0xcd, 0x05, 0x50, 0x0f, 0x17, 0xe9, 0xcf, 0x4c, 0xaa, 0xae,
	0x85, 0xd0, 0x7d, 0xfa, 0xb6, 0x48, 0x05, 0x9a, 0x03, 0xd0, 0xb1, 0xbd, 0xaf, 0x20, 0xf9, 0x0c,
	0xda, 0xea, 0xb6, 0xe9, 0x1a, 0x07, 0x17, 0x7d, 0x7d, 0x1d, 0x14, 0x88, 0x35, 0xa6, 0x85, 0x91,
	0x3f, 0xe2, 0xb2, 0x19, 0xf6, 0x0c, 0x3a, 0x66, 0xad, 0x2b, 0x05, 0xab, 0x56, 0x1b, 0xa6, 0x67,
	0x78, 0x23, 0x57, 0xcf, 0x71, 0xa7, 0xe3, 0x9e, 0xb8, 0x19, 0x36, 0x90, 0x9c, 0x82, 0x1f, 0x71,
	0xa9, 0x2f, 0xd9, 0xe0, 0xa2, 0xa7, 0x73, 0xaa, 0xfb, 0xac, 0x20, 0xfd, 0xc1, 0x5c, 0x09, 0xbd,
	0xd3, 0x98, 0xb8, 0x6d, 0x9c, 0xe5, 0xdb, 0x54, 0x56, 0x45, 0x58, 0x95, 0x2c, 0x54, 0x03, 0x6c,
	0x8f, 0x3b, 0x26, 0x3a, 0xa5, 0x75, 0xa9, 0x71, 0xfa, 0x8b, 0xdb, 0x7f, 0xf9, 0xbf, 0x6e, 0xec,
	0x97, 0x30, 0x50, 0x37, 0xe5, 0x92, 0x9b, 0x68, 0x7e, 0xad, 0x8f, 0x75, 0x43, 0x14, 0xbc, 0xdb,
	0x87, 0xde, 0xfb, 0x7d, 0xe8, 0xfd, 0xb9, 0x0f, 0xbd, 0x5f, 0xaf, 0xc3, 0xa3, 0xf7, 0xd7, 0xe1,
	0xd1, 0x6f, 0xd7, 0xe1, 0xd1, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x9e, 0x59, 0xe0, 0xba,
	0x07, 0x00, 0x00,
}

func (m *AuthRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.LangCode)
	copy(dAtA[i:], m.LangCode)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.LangCode)))
	i--
	dAtA[i] = 0x32
	i -= len(m.PhoneCodeHash)
	copy(dAtA[i:], m.PhoneCodeHash)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.PhoneCode)
	copy(dAtA[i:], m.PhoneCode)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.PhoneCode)))
	i--
	dAtA[i] = 0x22
	i -= len(m.LastName)
	copy(dAtA[i:], m.LastName)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.LastName)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.FirstName)
	copy(dAtA[i:], m.FirstName)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.FirstName)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthBotRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthBotRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthBotRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.OwnerID))
	i--
	dAtA[i] = 0x18
	i -= len(m.Username)
	copy(dAtA[i:], m.Username)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Username)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Name)
	copy(dAtA[i:], m.Name)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Name)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.PhoneCode)
	copy(dAtA[i:], m.PhoneCode)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.PhoneCode)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.PhoneCodeHash)
	copy(dAtA[i:], m.PhoneCodeHash)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthCheckPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthCheckPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthCheckPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Password == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Password")
	} else {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAuth(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuthRecoverPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRecoverPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthRecoverPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Code)
	copy(dAtA[i:], m.Code)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Code)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthLogout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthLogout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthLogout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthIDs) > 0 {
		for iNdEx := len(m.AuthIDs) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintChatApiAuth(dAtA, i, uint64(m.AuthIDs[iNdEx]))
			i--
			dAtA[i] = 0x8
		}
	}
	return len(dAtA) - i, nil
}

func (m *AuthLoginByToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthLoginByToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthLoginByToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Provider)
	copy(dAtA[i:], m.Provider)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Provider)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Token)
	copy(dAtA[i:], m.Token)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Token)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthCheckPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthCheckPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthCheckPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthSendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthSendCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthSendCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.AppHash)
	copy(dAtA[i:], m.AppHash)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.AppHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthResendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthResendCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthResendCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.AppHash)
	copy(dAtA[i:], m.AppHash)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.AppHash)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.PhoneCodeHash)
	copy(dAtA[i:], m.PhoneCodeHash)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthRecall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRecall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthRecall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.OSVersion)
	copy(dAtA[i:], m.OSVersion)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.OSVersion)))
	i--
	dAtA[i] = 0x32
	i -= len(m.Vendor)
	copy(dAtA[i:], m.Vendor)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Vendor)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Platform)
	copy(dAtA[i:], m.Platform)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Platform)))
	i--
	dAtA[i] = 0x22
	i -= len(m.AppVersion)
	copy(dAtA[i:], m.AppVersion)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.AppVersion)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.Version))
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.ClientID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AuthDestroyKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthDestroyKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthDestroyKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AuthPasswordRecovery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthPasswordRecovery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthPasswordRecovery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.EmailPattern)
	copy(dAtA[i:], m.EmailPattern)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.EmailPattern)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AuthRecalled) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRecalled) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthRecalled) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.CurrentVersion)
	copy(dAtA[i:], m.CurrentVersion)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.CurrentVersion)))
	i--
	dAtA[i] = 0x32
	i--
	if m.Force {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	i--
	if m.Available {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.UpdateID))
	i--
	dAtA[i] = 0x18
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.Timestamp))
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.ClientID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AuthAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.User == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("User")
	} else {
		{
			size, err := m.User.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAuth(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i -= 8
	encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(m.Expired))
	i--
	dAtA[i] = 0x9
	return len(dAtA) - i, nil
}

func (m *AuthBotAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthBotAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthBotAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Bot == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	} else {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAuth(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.AuthKey != nil {
		i -= len(m.AuthKey)
		copy(dAtA[i:], m.AuthKey)
		i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.AuthKey)))
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintChatApiAuth(dAtA, i, uint64(m.AuthID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AuthCheckedPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthCheckedPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthCheckedPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.Registered {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	i--
	if m.Invited {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AuthSentCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthSentCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthSentCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.SendToPhone {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	i -= len(m.PhoneCodeHash)
	copy(dAtA[i:], m.PhoneCodeHash)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAuth(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintChatApiAuth(dAtA []byte, offset int, v uint64) int {
	offset -= sovChatApiAuth(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AuthRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.FirstName)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.LangCode)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthBotRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.Username)
	n += 1 + l + sovChatApiAuth(uint64(l))
	n += 1 + sovChatApiAuth(uint64(m.OwnerID))
	return n
}

func (m *AuthLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthCheckPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovChatApiAuth(uint64(l))
	}
	return n
}

func (m *AuthRecoverPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Code)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthLogout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AuthIDs) > 0 {
		for _, e := range m.AuthIDs {
			n += 1 + sovChatApiAuth(uint64(e))
		}
	}
	return n
}

func (m *AuthLoginByToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.Provider)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthCheckPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthSendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.AppHash)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthResendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.AppHash)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthRecall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAuth(uint64(m.ClientID))
	n += 1 + sovChatApiAuth(uint64(m.Version))
	l = len(m.AppVersion)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.Platform)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.Vendor)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.OSVersion)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthDestroyKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AuthPasswordRecovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EmailPattern)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthRecalled) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAuth(uint64(m.ClientID))
	n += 1 + sovChatApiAuth(uint64(m.Timestamp))
	n += 1 + sovChatApiAuth(uint64(m.UpdateID))
	n += 2
	n += 2
	l = len(m.CurrentVersion)
	n += 1 + l + sovChatApiAuth(uint64(l))
	return n
}

func (m *AuthAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 9
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovChatApiAuth(uint64(l))
	}
	return n
}

func (m *AuthBotAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAuth(uint64(m.AuthID))
	if m.AuthKey != nil {
		l = len(m.AuthKey)
		n += 1 + l + sovChatApiAuth(uint64(l))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovChatApiAuth(uint64(l))
	}
	return n
}

func (m *AuthCheckedPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	n += 2
	return n
}

func (m *AuthSentCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAuth(uint64(l))
	n += 2
	return n
}

func sovChatApiAuth(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozChatApiAuth(x uint64) (n int) {
	return sovChatApiAuth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AuthRegister) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FirstName")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastName")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthBotRegister) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthBotRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthBotRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerID", wireType)
			}
			m.OwnerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OwnerID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Name")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("OwnerID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthLogin) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthCheckPassword) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthCheckPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthCheckPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputPassword{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Password")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthRecoverPassword) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRecoverPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRecoverPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Code")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthLogout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthLogout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthLogout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowChatApiAuth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AuthIDs = append(m.AuthIDs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowChatApiAuth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthChatApiAuth
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthChatApiAuth
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AuthIDs) == 0 {
					m.AuthIDs = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowChatApiAuth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AuthIDs = append(m.AuthIDs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthIDs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthLoginByToken) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthLoginByToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthLoginByToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Provider")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthCheckPhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthCheckPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthCheckPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthSendCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthSendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthSendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthResendCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthResendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthResendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthRecall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRecall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRecall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			m.ClientID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClientID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OSVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OSVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthDestroyKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthDestroyKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthDestroyKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthPasswordRecovery) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthPasswordRecovery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthPasswordRecovery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailPattern", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailPattern = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("EmailPattern")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthRecalled) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRecalled: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRecalled: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			m.ClientID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClientID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateID", wireType)
			}
			m.UpdateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Available", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Available = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Timestamp")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expired", wireType)
			}
			m.Expired = 0
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			m.Expired = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &User{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Expired")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("User")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthBotAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthBotAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthBotAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthID", wireType)
			}
			m.AuthID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthKey = append(m.AuthKey[:0], dAtA[iNdEx:postIndex]...)
			if m.AuthKey == nil {
				m.AuthKey = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &Bot{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AuthID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AuthKey")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthCheckedPhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthCheckedPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthCheckedPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Invited", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Invited = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Registered", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Registered = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Invited")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Registered")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthSentCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthSentCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthSentCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendToPhone", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendToPhone = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiAuth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiAuth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChatApiAuth
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupChatApiAuth
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthChatApiAuth
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthChatApiAuth        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiAuth          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupChatApiAuth = fmt.Errorf("proto: unexpected end of group")
)
