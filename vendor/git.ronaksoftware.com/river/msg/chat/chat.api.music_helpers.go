// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.music.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_MusicsGet int64 = 1110460483

type poolMusicsGet struct {
	pool sync.Pool
}

func (p *poolMusicsGet) Get() *MusicsGet {
	x, ok := p.pool.Get().(*MusicsGet)
	if !ok {
		return &MusicsGet{}
	}
	x.PlaylistID = 0
	x.Index = 0
	x.File = nil
	x.Attribute = nil
	x.Thumbnail = nil
	x.MD5Checksum = ""
	return x
}

func (p *poolMusicsGet) Put(x *MusicsGet) {
	p.pool.Put(x)
}

var PoolMusicsGet = poolMusicsGet{}

func ResultMusicsGet(out *MessageEnvelope, res *MusicsGet) {
	out.Constructor = C_MusicsGet
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MusicsAdd int64 = 1108415956

type poolMusicsAdd struct {
	pool sync.Pool
}

func (p *poolMusicsAdd) Get() *MusicsAdd {
	x, ok := p.pool.Get().(*MusicsAdd)
	if !ok {
		return &MusicsAdd{}
	}
	x.PlaylistID = 0
	x.Index = 0
	x.Thumbnail = nil
	return x
}

func (p *poolMusicsAdd) Put(x *MusicsAdd) {
	p.pool.Put(x)
}

var PoolMusicsAdd = poolMusicsAdd{}

func ResultMusicsAdd(out *MessageEnvelope, res *MusicsAdd) {
	out.Constructor = C_MusicsAdd
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MusicsRemove int64 = 3940045807

type poolMusicsRemove struct {
	pool sync.Pool
}

func (p *poolMusicsRemove) Get() *MusicsRemove {
	x, ok := p.pool.Get().(*MusicsRemove)
	if !ok {
		return &MusicsRemove{}
	}
	return x
}

func (p *poolMusicsRemove) Put(x *MusicsRemove) {
	p.pool.Put(x)
}

var PoolMusicsRemove = poolMusicsRemove{}

func ResultMusicsRemove(out *MessageEnvelope, res *MusicsRemove) {
	out.Constructor = C_MusicsRemove
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MusicsSetStatus int64 = 4026186002

type poolMusicsSetStatus struct {
	pool sync.Pool
}

func (p *poolMusicsSetStatus) Get() *MusicsSetStatus {
	x, ok := p.pool.Get().(*MusicsSetStatus)
	if !ok {
		return &MusicsSetStatus{}
	}
	return x
}

func (p *poolMusicsSetStatus) Put(x *MusicsSetStatus) {
	p.pool.Put(x)
}

var PoolMusicsSetStatus = poolMusicsSetStatus{}

func ResultMusicsSetStatus(out *MessageEnvelope, res *MusicsSetStatus) {
	out.Constructor = C_MusicsSetStatus
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MusicsFollow int64 = 3932949167

type poolMusicsFollow struct {
	pool sync.Pool
}

func (p *poolMusicsFollow) Get() *MusicsFollow {
	x, ok := p.pool.Get().(*MusicsFollow)
	if !ok {
		return &MusicsFollow{}
	}
	return x
}

func (p *poolMusicsFollow) Put(x *MusicsFollow) {
	p.pool.Put(x)
}

var PoolMusicsFollow = poolMusicsFollow{}

func ResultMusicsFollow(out *MessageEnvelope, res *MusicsFollow) {
	out.Constructor = C_MusicsFollow
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MusicsUnFollow int64 = 327524575

type poolMusicsUnFollow struct {
	pool sync.Pool
}

func (p *poolMusicsUnFollow) Get() *MusicsUnFollow {
	x, ok := p.pool.Get().(*MusicsUnFollow)
	if !ok {
		return &MusicsUnFollow{}
	}
	return x
}

func (p *poolMusicsUnFollow) Put(x *MusicsUnFollow) {
	p.pool.Put(x)
}

var PoolMusicsUnFollow = poolMusicsUnFollow{}

func ResultMusicsUnFollow(out *MessageEnvelope, res *MusicsUnFollow) {
	out.Constructor = C_MusicsUnFollow
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[1110460483] = "MusicsGet"
	ConstructorNames[1108415956] = "MusicsAdd"
	ConstructorNames[3940045807] = "MusicsRemove"
	ConstructorNames[4026186002] = "MusicsSetStatus"
	ConstructorNames[3932949167] = "MusicsFollow"
	ConstructorNames[327524575] = "MusicsUnFollow"
}
