// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.messages.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_MessagesSend int64 = 3000244183

type poolMessagesSend struct {
	pool sync.Pool
}

func (p *poolMessagesSend) Get() *MessagesSend {
	x, ok := p.pool.Get().(*MessagesSend)
	if !ok {
		return &MessagesSend{}
	}
	x.ReplyTo = 0
	x.ClearDraft = false
	x.Entities = x.Entities[:0]
	return x
}

func (p *poolMessagesSend) Put(x *MessagesSend) {
	p.pool.Put(x)
}

var PoolMessagesSend = poolMessagesSend{}

func ResultMessagesSend(out *MessageEnvelope, res *MessagesSend) {
	out.Constructor = C_MessagesSend
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesBroadcast int64 = 142289348

type poolMessagesBroadcast struct {
	pool sync.Pool
}

func (p *poolMessagesBroadcast) Get() *MessagesBroadcast {
	x, ok := p.pool.Get().(*MessagesBroadcast)
	if !ok {
		return &MessagesBroadcast{}
	}
	x.ReceiverIDs = x.ReceiverIDs[:0]
	x.Entities = x.Entities[:0]
	return x
}

func (p *poolMessagesBroadcast) Put(x *MessagesBroadcast) {
	p.pool.Put(x)
}

var PoolMessagesBroadcast = poolMessagesBroadcast{}

func ResultMessagesBroadcast(out *MessageEnvelope, res *MessagesBroadcast) {
	out.Constructor = C_MessagesBroadcast
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesSendMedia int64 = 25498545

type poolMessagesSendMedia struct {
	pool sync.Pool
}

func (p *poolMessagesSendMedia) Get() *MessagesSendMedia {
	x, ok := p.pool.Get().(*MessagesSendMedia)
	if !ok {
		return &MessagesSendMedia{}
	}
	x.ReplyTo = 0
	x.ClearDraft = false
	return x
}

func (p *poolMessagesSendMedia) Put(x *MessagesSendMedia) {
	p.pool.Put(x)
}

var PoolMessagesSendMedia = poolMessagesSendMedia{}

func ResultMessagesSendMedia(out *MessageEnvelope, res *MessagesSendMedia) {
	out.Constructor = C_MessagesSendMedia
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesEdit int64 = 2492658432

type poolMessagesEdit struct {
	pool sync.Pool
}

func (p *poolMessagesEdit) Get() *MessagesEdit {
	x, ok := p.pool.Get().(*MessagesEdit)
	if !ok {
		return &MessagesEdit{}
	}
	x.Entities = x.Entities[:0]
	return x
}

func (p *poolMessagesEdit) Put(x *MessagesEdit) {
	p.pool.Put(x)
}

var PoolMessagesEdit = poolMessagesEdit{}

func ResultMessagesEdit(out *MessageEnvelope, res *MessagesEdit) {
	out.Constructor = C_MessagesEdit
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesReadHistory int64 = 1300826534

type poolMessagesReadHistory struct {
	pool sync.Pool
}

func (p *poolMessagesReadHistory) Get() *MessagesReadHistory {
	x, ok := p.pool.Get().(*MessagesReadHistory)
	if !ok {
		return &MessagesReadHistory{}
	}
	return x
}

func (p *poolMessagesReadHistory) Put(x *MessagesReadHistory) {
	p.pool.Put(x)
}

var PoolMessagesReadHistory = poolMessagesReadHistory{}

func ResultMessagesReadHistory(out *MessageEnvelope, res *MessagesReadHistory) {
	out.Constructor = C_MessagesReadHistory
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesGet int64 = 2151382317

type poolMessagesGet struct {
	pool sync.Pool
}

func (p *poolMessagesGet) Get() *MessagesGet {
	x, ok := p.pool.Get().(*MessagesGet)
	if !ok {
		return &MessagesGet{}
	}
	x.MessagesIDs = x.MessagesIDs[:0]
	return x
}

func (p *poolMessagesGet) Put(x *MessagesGet) {
	p.pool.Put(x)
}

var PoolMessagesGet = poolMessagesGet{}

func ResultMessagesGet(out *MessageEnvelope, res *MessagesGet) {
	out.Constructor = C_MessagesGet
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesGetHistory int64 = 3396939832

type poolMessagesGetHistory struct {
	pool sync.Pool
}

func (p *poolMessagesGetHistory) Get() *MessagesGetHistory {
	x, ok := p.pool.Get().(*MessagesGetHistory)
	if !ok {
		return &MessagesGetHistory{}
	}
	return x
}

func (p *poolMessagesGetHistory) Put(x *MessagesGetHistory) {
	p.pool.Put(x)
}

var PoolMessagesGetHistory = poolMessagesGetHistory{}

func ResultMessagesGetHistory(out *MessageEnvelope, res *MessagesGetHistory) {
	out.Constructor = C_MessagesGetHistory
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesGetDialogs int64 = 1429532372

type poolMessagesGetDialogs struct {
	pool sync.Pool
}

func (p *poolMessagesGetDialogs) Get() *MessagesGetDialogs {
	x, ok := p.pool.Get().(*MessagesGetDialogs)
	if !ok {
		return &MessagesGetDialogs{}
	}
	x.ExcludePinned = false
	return x
}

func (p *poolMessagesGetDialogs) Put(x *MessagesGetDialogs) {
	p.pool.Put(x)
}

var PoolMessagesGetDialogs = poolMessagesGetDialogs{}

func ResultMessagesGetDialogs(out *MessageEnvelope, res *MessagesGetDialogs) {
	out.Constructor = C_MessagesGetDialogs
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesGetPinnedDialogs int64 = 1963188912

type poolMessagesGetPinnedDialogs struct {
	pool sync.Pool
}

func (p *poolMessagesGetPinnedDialogs) Get() *MessagesGetPinnedDialogs {
	x, ok := p.pool.Get().(*MessagesGetPinnedDialogs)
	if !ok {
		return &MessagesGetPinnedDialogs{}
	}
	return x
}

func (p *poolMessagesGetPinnedDialogs) Put(x *MessagesGetPinnedDialogs) {
	p.pool.Put(x)
}

var PoolMessagesGetPinnedDialogs = poolMessagesGetPinnedDialogs{}

func ResultMessagesGetPinnedDialogs(out *MessageEnvelope, res *MessagesGetPinnedDialogs) {
	out.Constructor = C_MessagesGetPinnedDialogs
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesGetDialog int64 = 1050840034

type poolMessagesGetDialog struct {
	pool sync.Pool
}

func (p *poolMessagesGetDialog) Get() *MessagesGetDialog {
	x, ok := p.pool.Get().(*MessagesGetDialog)
	if !ok {
		return &MessagesGetDialog{}
	}
	return x
}

func (p *poolMessagesGetDialog) Put(x *MessagesGetDialog) {
	p.pool.Put(x)
}

var PoolMessagesGetDialog = poolMessagesGetDialog{}

func ResultMessagesGetDialog(out *MessageEnvelope, res *MessagesGetDialog) {
	out.Constructor = C_MessagesGetDialog
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesSetTyping int64 = 1540214486

type poolMessagesSetTyping struct {
	pool sync.Pool
}

func (p *poolMessagesSetTyping) Get() *MessagesSetTyping {
	x, ok := p.pool.Get().(*MessagesSetTyping)
	if !ok {
		return &MessagesSetTyping{}
	}
	return x
}

func (p *poolMessagesSetTyping) Put(x *MessagesSetTyping) {
	p.pool.Put(x)
}

var PoolMessagesSetTyping = poolMessagesSetTyping{}

func ResultMessagesSetTyping(out *MessageEnvelope, res *MessagesSetTyping) {
	out.Constructor = C_MessagesSetTyping
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesClearHistory int64 = 1981246180

type poolMessagesClearHistory struct {
	pool sync.Pool
}

func (p *poolMessagesClearHistory) Get() *MessagesClearHistory {
	x, ok := p.pool.Get().(*MessagesClearHistory)
	if !ok {
		return &MessagesClearHistory{}
	}
	return x
}

func (p *poolMessagesClearHistory) Put(x *MessagesClearHistory) {
	p.pool.Put(x)
}

var PoolMessagesClearHistory = poolMessagesClearHistory{}

func ResultMessagesClearHistory(out *MessageEnvelope, res *MessagesClearHistory) {
	out.Constructor = C_MessagesClearHistory
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesDelete int64 = 3487616910

type poolMessagesDelete struct {
	pool sync.Pool
}

func (p *poolMessagesDelete) Get() *MessagesDelete {
	x, ok := p.pool.Get().(*MessagesDelete)
	if !ok {
		return &MessagesDelete{}
	}
	x.MessageIDs = x.MessageIDs[:0]
	return x
}

func (p *poolMessagesDelete) Put(x *MessagesDelete) {
	p.pool.Put(x)
}

var PoolMessagesDelete = poolMessagesDelete{}

func ResultMessagesDelete(out *MessageEnvelope, res *MessagesDelete) {
	out.Constructor = C_MessagesDelete
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesForward int64 = 2662884753

type poolMessagesForward struct {
	pool sync.Pool
}

func (p *poolMessagesForward) Get() *MessagesForward {
	x, ok := p.pool.Get().(*MessagesForward)
	if !ok {
		return &MessagesForward{}
	}
	x.MessageIDs = x.MessageIDs[:0]
	return x
}

func (p *poolMessagesForward) Put(x *MessagesForward) {
	p.pool.Put(x)
}

var PoolMessagesForward = poolMessagesForward{}

func ResultMessagesForward(out *MessageEnvelope, res *MessagesForward) {
	out.Constructor = C_MessagesForward
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesReadContents int64 = 1781251275

type poolMessagesReadContents struct {
	pool sync.Pool
}

func (p *poolMessagesReadContents) Get() *MessagesReadContents {
	x, ok := p.pool.Get().(*MessagesReadContents)
	if !ok {
		return &MessagesReadContents{}
	}
	x.MessageIDs = x.MessageIDs[:0]
	return x
}

func (p *poolMessagesReadContents) Put(x *MessagesReadContents) {
	p.pool.Put(x)
}

var PoolMessagesReadContents = poolMessagesReadContents{}

func ResultMessagesReadContents(out *MessageEnvelope, res *MessagesReadContents) {
	out.Constructor = C_MessagesReadContents
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesSaveDraft int64 = 921840607

type poolMessagesSaveDraft struct {
	pool sync.Pool
}

func (p *poolMessagesSaveDraft) Get() *MessagesSaveDraft {
	x, ok := p.pool.Get().(*MessagesSaveDraft)
	if !ok {
		return &MessagesSaveDraft{}
	}
	x.Entities = x.Entities[:0]
	x.EditedID = 0
	return x
}

func (p *poolMessagesSaveDraft) Put(x *MessagesSaveDraft) {
	p.pool.Put(x)
}

var PoolMessagesSaveDraft = poolMessagesSaveDraft{}

func ResultMessagesSaveDraft(out *MessageEnvelope, res *MessagesSaveDraft) {
	out.Constructor = C_MessagesSaveDraft
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesClearDraft int64 = 2164204563

type poolMessagesClearDraft struct {
	pool sync.Pool
}

func (p *poolMessagesClearDraft) Get() *MessagesClearDraft {
	x, ok := p.pool.Get().(*MessagesClearDraft)
	if !ok {
		return &MessagesClearDraft{}
	}
	return x
}

func (p *poolMessagesClearDraft) Put(x *MessagesClearDraft) {
	p.pool.Put(x)
}

var PoolMessagesClearDraft = poolMessagesClearDraft{}

func ResultMessagesClearDraft(out *MessageEnvelope, res *MessagesClearDraft) {
	out.Constructor = C_MessagesClearDraft
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesToggleDialogPin int64 = 1352871220

type poolMessagesToggleDialogPin struct {
	pool sync.Pool
}

func (p *poolMessagesToggleDialogPin) Get() *MessagesToggleDialogPin {
	x, ok := p.pool.Get().(*MessagesToggleDialogPin)
	if !ok {
		return &MessagesToggleDialogPin{}
	}
	return x
}

func (p *poolMessagesToggleDialogPin) Put(x *MessagesToggleDialogPin) {
	p.pool.Put(x)
}

var PoolMessagesToggleDialogPin = poolMessagesToggleDialogPin{}

func ResultMessagesToggleDialogPin(out *MessageEnvelope, res *MessagesToggleDialogPin) {
	out.Constructor = C_MessagesToggleDialogPin
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesReorderPinnedDialogs int64 = 1409872986

type poolMessagesReorderPinnedDialogs struct {
	pool sync.Pool
}

func (p *poolMessagesReorderPinnedDialogs) Get() *MessagesReorderPinnedDialogs {
	x, ok := p.pool.Get().(*MessagesReorderPinnedDialogs)
	if !ok {
		return &MessagesReorderPinnedDialogs{}
	}
	x.Peers = x.Peers[:0]
	return x
}

func (p *poolMessagesReorderPinnedDialogs) Put(x *MessagesReorderPinnedDialogs) {
	p.pool.Put(x)
}

var PoolMessagesReorderPinnedDialogs = poolMessagesReorderPinnedDialogs{}

func ResultMessagesReorderPinnedDialogs(out *MessageEnvelope, res *MessagesReorderPinnedDialogs) {
	out.Constructor = C_MessagesReorderPinnedDialogs
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesSendScreenShotNotification int64 = 3682116055

type poolMessagesSendScreenShotNotification struct {
	pool sync.Pool
}

func (p *poolMessagesSendScreenShotNotification) Get() *MessagesSendScreenShotNotification {
	x, ok := p.pool.Get().(*MessagesSendScreenShotNotification)
	if !ok {
		return &MessagesSendScreenShotNotification{}
	}
	x.ReplyTo = 0
	x.MinID = 0
	x.MaxID = 0
	return x
}

func (p *poolMessagesSendScreenShotNotification) Put(x *MessagesSendScreenShotNotification) {
	p.pool.Put(x)
}

var PoolMessagesSendScreenShotNotification = poolMessagesSendScreenShotNotification{}

func ResultMessagesSendScreenShotNotification(out *MessageEnvelope, res *MessagesSendScreenShotNotification) {
	out.Constructor = C_MessagesSendScreenShotNotification
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesSendVote int64 = 2566114356

type poolMessagesSendVote struct {
	pool sync.Pool
}

func (p *poolMessagesSendVote) Get() *MessagesSendVote {
	x, ok := p.pool.Get().(*MessagesSendVote)
	if !ok {
		return &MessagesSendVote{}
	}
	x.Options = x.Options[:0]
	return x
}

func (p *poolMessagesSendVote) Put(x *MessagesSendVote) {
	p.pool.Put(x)
}

var PoolMessagesSendVote = poolMessagesSendVote{}

func ResultMessagesSendVote(out *MessageEnvelope, res *MessagesSendVote) {
	out.Constructor = C_MessagesSendVote
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesGetPollResults int64 = 1918165418

type poolMessagesGetPollResults struct {
	pool sync.Pool
}

func (p *poolMessagesGetPollResults) Get() *MessagesGetPollResults {
	x, ok := p.pool.Get().(*MessagesGetPollResults)
	if !ok {
		return &MessagesGetPollResults{}
	}
	return x
}

func (p *poolMessagesGetPollResults) Put(x *MessagesGetPollResults) {
	p.pool.Put(x)
}

var PoolMessagesGetPollResults = poolMessagesGetPollResults{}

func ResultMessagesGetPollResults(out *MessageEnvelope, res *MessagesGetPollResults) {
	out.Constructor = C_MessagesGetPollResults
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesDialogs int64 = 3252610224

type poolMessagesDialogs struct {
	pool sync.Pool
}

func (p *poolMessagesDialogs) Get() *MessagesDialogs {
	x, ok := p.pool.Get().(*MessagesDialogs)
	if !ok {
		return &MessagesDialogs{}
	}
	x.Dialogs = x.Dialogs[:0]
	x.Users = x.Users[:0]
	x.Messages = x.Messages[:0]
	x.Groups = x.Groups[:0]
	return x
}

func (p *poolMessagesDialogs) Put(x *MessagesDialogs) {
	p.pool.Put(x)
}

var PoolMessagesDialogs = poolMessagesDialogs{}

func ResultMessagesDialogs(out *MessageEnvelope, res *MessagesDialogs) {
	out.Constructor = C_MessagesDialogs
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesSent int64 = 2942502835

type poolMessagesSent struct {
	pool sync.Pool
}

func (p *poolMessagesSent) Get() *MessagesSent {
	x, ok := p.pool.Get().(*MessagesSent)
	if !ok {
		return &MessagesSent{}
	}
	return x
}

func (p *poolMessagesSent) Put(x *MessagesSent) {
	p.pool.Put(x)
}

var PoolMessagesSent = poolMessagesSent{}

func ResultMessagesSent(out *MessageEnvelope, res *MessagesSent) {
	out.Constructor = C_MessagesSent
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessagesMany int64 = 1713238910

type poolMessagesMany struct {
	pool sync.Pool
}

func (p *poolMessagesMany) Get() *MessagesMany {
	x, ok := p.pool.Get().(*MessagesMany)
	if !ok {
		return &MessagesMany{}
	}
	x.Messages = x.Messages[:0]
	x.Users = x.Users[:0]
	x.Groups = x.Groups[:0]
	x.Continuous = false
	return x
}

func (p *poolMessagesMany) Put(x *MessagesMany) {
	p.pool.Put(x)
}

var PoolMessagesMany = poolMessagesMany{}

func ResultMessagesMany(out *MessageEnvelope, res *MessagesMany) {
	out.Constructor = C_MessagesMany
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[3000244183] = "MessagesSend"
	ConstructorNames[142289348] = "MessagesBroadcast"
	ConstructorNames[25498545] = "MessagesSendMedia"
	ConstructorNames[2492658432] = "MessagesEdit"
	ConstructorNames[1300826534] = "MessagesReadHistory"
	ConstructorNames[2151382317] = "MessagesGet"
	ConstructorNames[3396939832] = "MessagesGetHistory"
	ConstructorNames[1429532372] = "MessagesGetDialogs"
	ConstructorNames[1963188912] = "MessagesGetPinnedDialogs"
	ConstructorNames[1050840034] = "MessagesGetDialog"
	ConstructorNames[1540214486] = "MessagesSetTyping"
	ConstructorNames[1981246180] = "MessagesClearHistory"
	ConstructorNames[3487616910] = "MessagesDelete"
	ConstructorNames[2662884753] = "MessagesForward"
	ConstructorNames[1781251275] = "MessagesReadContents"
	ConstructorNames[921840607] = "MessagesSaveDraft"
	ConstructorNames[2164204563] = "MessagesClearDraft"
	ConstructorNames[1352871220] = "MessagesToggleDialogPin"
	ConstructorNames[1409872986] = "MessagesReorderPinnedDialogs"
	ConstructorNames[3682116055] = "MessagesSendScreenShotNotification"
	ConstructorNames[2566114356] = "MessagesSendVote"
	ConstructorNames[1918165418] = "MessagesGetPollResults"
	ConstructorNames[3252610224] = "MessagesDialogs"
	ConstructorNames[2942502835] = "MessagesSent"
	ConstructorNames[1713238910] = "MessagesMany"
}
