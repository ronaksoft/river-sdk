// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.music.proto

package msg

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MusicGet
// @Function
// @Return: MusicMany
type MusicsGet struct {
	PlaylistID  int32                   `protobuf:"varint,1,opt,name=PlaylistID" json:"PlaylistID"`
	Index       int32                   `protobuf:"varint,2,opt,name=Index" json:"Index"`
	File        *FileLocation           `protobuf:"bytes,3,opt,name=File" json:"File,omitempty"`
	Attribute   *DocumentAttributeAudio `protobuf:"bytes,4,opt,name=Attribute" json:"Attribute,omitempty"`
	Thumbnail   *FileLocation           `protobuf:"bytes,9,opt,name=Thumbnail" json:"Thumbnail,omitempty"`
	MD5Checksum string                  `protobuf:"bytes,10,opt,name=MD5Checksum" json:"MD5Checksum"`
}

func (m *MusicsGet) Reset()         { *m = MusicsGet{} }
func (m *MusicsGet) String() string { return proto.CompactTextString(m) }
func (*MusicsGet) ProtoMessage()    {}
func (*MusicsGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc11e2d6eb76e854, []int{0}
}
func (m *MusicsGet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MusicsGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MusicsGet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MusicsGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicsGet.Merge(m, src)
}
func (m *MusicsGet) XXX_Size() int {
	return m.Size()
}
func (m *MusicsGet) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicsGet.DiscardUnknown(m)
}

var xxx_messageInfo_MusicsGet proto.InternalMessageInfo

func (m *MusicsGet) GetPlaylistID() int32 {
	if m != nil {
		return m.PlaylistID
	}
	return 0
}

func (m *MusicsGet) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MusicsGet) GetFile() *FileLocation {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *MusicsGet) GetAttribute() *DocumentAttributeAudio {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *MusicsGet) GetThumbnail() *FileLocation {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

func (m *MusicsGet) GetMD5Checksum() string {
	if m != nil {
		return m.MD5Checksum
	}
	return ""
}

// MusicsAdd
// @Function
// @Return: Bool
type MusicsAdd struct {
	PlaylistID int32              `protobuf:"varint,1,opt,name=PlaylistID" json:"PlaylistID"`
	Index      int32              `protobuf:"varint,2,opt,name=Index" json:"Index"`
	File       *InputFileLocation `protobuf:"bytes,3,req,name=File" json:"File,omitempty"`
	Thumbnail  *InputFileLocation `protobuf:"bytes,4,opt,name=Thumbnail" json:"Thumbnail,omitempty"`
}

func (m *MusicsAdd) Reset()         { *m = MusicsAdd{} }
func (m *MusicsAdd) String() string { return proto.CompactTextString(m) }
func (*MusicsAdd) ProtoMessage()    {}
func (*MusicsAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc11e2d6eb76e854, []int{1}
}
func (m *MusicsAdd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MusicsAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MusicsAdd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MusicsAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicsAdd.Merge(m, src)
}
func (m *MusicsAdd) XXX_Size() int {
	return m.Size()
}
func (m *MusicsAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicsAdd.DiscardUnknown(m)
}

var xxx_messageInfo_MusicsAdd proto.InternalMessageInfo

func (m *MusicsAdd) GetPlaylistID() int32 {
	if m != nil {
		return m.PlaylistID
	}
	return 0
}

func (m *MusicsAdd) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MusicsAdd) GetFile() *InputFileLocation {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *MusicsAdd) GetThumbnail() *InputFileLocation {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

// MusicsRemove
// @Function
// @Return: Bool
type MusicsRemove struct {
}

func (m *MusicsRemove) Reset()         { *m = MusicsRemove{} }
func (m *MusicsRemove) String() string { return proto.CompactTextString(m) }
func (*MusicsRemove) ProtoMessage()    {}
func (*MusicsRemove) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc11e2d6eb76e854, []int{2}
}
func (m *MusicsRemove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MusicsRemove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MusicsRemove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MusicsRemove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicsRemove.Merge(m, src)
}
func (m *MusicsRemove) XXX_Size() int {
	return m.Size()
}
func (m *MusicsRemove) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicsRemove.DiscardUnknown(m)
}

var xxx_messageInfo_MusicsRemove proto.InternalMessageInfo

// MusicsSetStatus
// @Function
// @Return: Bool
type MusicsSetStatus struct {
}

func (m *MusicsSetStatus) Reset()         { *m = MusicsSetStatus{} }
func (m *MusicsSetStatus) String() string { return proto.CompactTextString(m) }
func (*MusicsSetStatus) ProtoMessage()    {}
func (*MusicsSetStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc11e2d6eb76e854, []int{3}
}
func (m *MusicsSetStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MusicsSetStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MusicsSetStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MusicsSetStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicsSetStatus.Merge(m, src)
}
func (m *MusicsSetStatus) XXX_Size() int {
	return m.Size()
}
func (m *MusicsSetStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicsSetStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MusicsSetStatus proto.InternalMessageInfo

// MusicsFollow
// @Function
// @Return: Bool
type MusicsFollow struct {
}

func (m *MusicsFollow) Reset()         { *m = MusicsFollow{} }
func (m *MusicsFollow) String() string { return proto.CompactTextString(m) }
func (*MusicsFollow) ProtoMessage()    {}
func (*MusicsFollow) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc11e2d6eb76e854, []int{4}
}
func (m *MusicsFollow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MusicsFollow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MusicsFollow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MusicsFollow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicsFollow.Merge(m, src)
}
func (m *MusicsFollow) XXX_Size() int {
	return m.Size()
}
func (m *MusicsFollow) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicsFollow.DiscardUnknown(m)
}

var xxx_messageInfo_MusicsFollow proto.InternalMessageInfo

// MusicsUnFollow
// @Function
// @Return: Bool
type MusicsUnFollow struct {
}

func (m *MusicsUnFollow) Reset()         { *m = MusicsUnFollow{} }
func (m *MusicsUnFollow) String() string { return proto.CompactTextString(m) }
func (*MusicsUnFollow) ProtoMessage()    {}
func (*MusicsUnFollow) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc11e2d6eb76e854, []int{5}
}
func (m *MusicsUnFollow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MusicsUnFollow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MusicsUnFollow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MusicsUnFollow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicsUnFollow.Merge(m, src)
}
func (m *MusicsUnFollow) XXX_Size() int {
	return m.Size()
}
func (m *MusicsUnFollow) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicsUnFollow.DiscardUnknown(m)
}

var xxx_messageInfo_MusicsUnFollow proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MusicsGet)(nil), "msg.MusicsGet")
	proto.RegisterType((*MusicsAdd)(nil), "msg.MusicsAdd")
	proto.RegisterType((*MusicsRemove)(nil), "msg.MusicsRemove")
	proto.RegisterType((*MusicsSetStatus)(nil), "msg.MusicsSetStatus")
	proto.RegisterType((*MusicsFollow)(nil), "msg.MusicsFollow")
	proto.RegisterType((*MusicsUnFollow)(nil), "msg.MusicsUnFollow")
}

func init() { proto.RegisterFile("chat.api.music.proto", fileDescriptor_bc11e2d6eb76e854) }

var fileDescriptor_bc11e2d6eb76e854 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x90, 0x4f, 0x4e, 0xc2, 0x40,
	0x14, 0xc6, 0x3b, 0xfc, 0x59, 0x74, 0x30, 0x28, 0x8d, 0x9a, 0x06, 0x93, 0x4a, 0x1a, 0x35, 0x8d,
	0x8b, 0x9a, 0x10, 0x5d, 0xb8, 0x04, 0x09, 0x86, 0x44, 0x12, 0x53, 0xf4, 0x00, 0x43, 0x3b, 0x81,
	0x89, 0x9d, 0x4e, 0xc3, 0xbc, 0x51, 0xb9, 0x81, 0x4b, 0x6f, 0xe2, 0x35, 0x58, 0xb2, 0x74, 0x65,
	0x0c, 0x5c, 0xc4, 0xd0, 0x22, 0xed, 0x42, 0x76, 0xae, 0x9a, 0xf7, 0xfd, 0x7e, 0x9d, 0x79, 0xf3,
	0xe1, 0x7d, 0x7f, 0x4c, 0xc0, 0x25, 0x31, 0x73, 0xb9, 0x92, 0xcc, 0x77, 0xe3, 0x89, 0x00, 0x61,
	0x14, 0xb9, 0x1c, 0xd5, 0x0f, 0x12, 0xe4, 0x8b, 0x09, 0x75, 0x61, 0x1a, 0x53, 0x99, 0xb2, 0xba,
	0x95, 0xc5, 0x9c, 0x4a, 0x49, 0x46, 0xab, 0x6f, 0xc0, 0xc8, 0x9a, 0xdb, 0x6f, 0x05, 0xac, 0xf7,
	0x57, 0x67, 0xc9, 0x5b, 0x0a, 0xc6, 0x09, 0xc6, 0xf7, 0x21, 0x99, 0x86, 0x4c, 0x42, 0xaf, 0x63,
	0xa2, 0x06, 0x72, 0xca, 0xed, 0xd2, 0xec, 0xeb, 0x58, 0xf3, 0x72, 0xb9, 0x51, 0xc7, 0xe5, 0x5e,
	0x14, 0xd0, 0x57, 0xb3, 0x90, 0x13, 0xd2, 0xc8, 0x38, 0xc5, 0xa5, 0x2e, 0x0b, 0xa9, 0x59, 0x6c,
	0x20, 0xa7, 0xd2, 0xac, 0xb9, 0x5c, 0x8e, 0xdc, 0x55, 0x70, 0x27, 0x7c, 0x02, 0x4c, 0x44, 0x5e,
	0x82, 0x8d, 0x6b, 0xac, 0xb7, 0x00, 0x26, 0x6c, 0xa8, 0x80, 0x9a, 0xa5, 0xc4, 0x3d, 0x4a, 0xdc,
	0x8e, 0xf0, 0x15, 0xa7, 0x11, 0x6c, 0x68, 0x4b, 0x05, 0x4c, 0x78, 0x99, 0x6d, 0x5c, 0x60, 0xfd,
	0x61, 0xac, 0xf8, 0x30, 0x22, 0x2c, 0x34, 0xf5, 0x6d, 0xd7, 0x64, 0x8e, 0x71, 0x86, 0x2b, 0xfd,
	0xce, 0xd5, 0xcd, 0x98, 0xfa, 0x4f, 0x52, 0x71, 0x13, 0x37, 0x90, 0xa3, 0xaf, 0x97, 0xce, 0x03,
	0xfb, 0x03, 0xfd, 0x56, 0xd1, 0x0a, 0x82, 0x7f, 0xa8, 0xe2, 0x7c, 0x53, 0x45, 0xc1, 0xa9, 0x34,
	0x0f, 0x93, 0x1d, 0x7b, 0x51, 0xac, 0xe0, 0x8f, 0x3e, 0x2e, 0xf3, 0x8f, 0x4a, 0xfb, 0xd8, 0xf6,
	0x43, 0x26, 0xda, 0x55, 0xbc, 0x93, 0x2e, 0xec, 0x51, 0x2e, 0x9e, 0xa9, 0x5d, 0xc3, 0xbb, 0xe9,
	0x3c, 0xa0, 0x30, 0x00, 0x02, 0x4a, 0x66, 0x4a, 0x57, 0x84, 0xa1, 0x78, 0xb1, 0xf7, 0x70, 0x35,
	0x9d, 0x1f, 0xa3, 0x34, 0x69, 0x9b, 0xb3, 0x85, 0x85, 0xe6, 0x0b, 0x0b, 0x7d, 0x2f, 0x2c, 0xf4,
	0xbe, 0xb4, 0xb4, 0xf9, 0xd2, 0xd2, 0x3e, 0x97, 0x96, 0xf6, 0x13, 0x00, 0x00, 0xff, 0xff, 0x02,
	0xdf, 0xb1, 0x2f, 0x6e, 0x02, 0x00, 0x00,
}

func (m *MusicsGet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MusicsGet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MusicsGet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.MD5Checksum)
	copy(dAtA[i:], m.MD5Checksum)
	i = encodeVarintChatApiMusic(dAtA, i, uint64(len(m.MD5Checksum)))
	i--
	dAtA[i] = 0x52
	if m.Thumbnail != nil {
		{
			size, err := m.Thumbnail.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiMusic(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Attribute != nil {
		{
			size, err := m.Attribute.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiMusic(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiMusic(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	i = encodeVarintChatApiMusic(dAtA, i, uint64(m.Index))
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatApiMusic(dAtA, i, uint64(m.PlaylistID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *MusicsAdd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MusicsAdd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MusicsAdd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Thumbnail != nil {
		{
			size, err := m.Thumbnail.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiMusic(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.File == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	} else {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiMusic(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	i = encodeVarintChatApiMusic(dAtA, i, uint64(m.Index))
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatApiMusic(dAtA, i, uint64(m.PlaylistID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *MusicsRemove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MusicsRemove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MusicsRemove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MusicsSetStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MusicsSetStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MusicsSetStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MusicsFollow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MusicsFollow) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MusicsFollow) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MusicsUnFollow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MusicsUnFollow) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MusicsUnFollow) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintChatApiMusic(dAtA []byte, offset int, v uint64) int {
	offset -= sovChatApiMusic(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MusicsGet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiMusic(uint64(m.PlaylistID))
	n += 1 + sovChatApiMusic(uint64(m.Index))
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovChatApiMusic(uint64(l))
	}
	if m.Attribute != nil {
		l = m.Attribute.Size()
		n += 1 + l + sovChatApiMusic(uint64(l))
	}
	if m.Thumbnail != nil {
		l = m.Thumbnail.Size()
		n += 1 + l + sovChatApiMusic(uint64(l))
	}
	l = len(m.MD5Checksum)
	n += 1 + l + sovChatApiMusic(uint64(l))
	return n
}

func (m *MusicsAdd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiMusic(uint64(m.PlaylistID))
	n += 1 + sovChatApiMusic(uint64(m.Index))
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovChatApiMusic(uint64(l))
	}
	if m.Thumbnail != nil {
		l = m.Thumbnail.Size()
		n += 1 + l + sovChatApiMusic(uint64(l))
	}
	return n
}

func (m *MusicsRemove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MusicsSetStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MusicsFollow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MusicsUnFollow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovChatApiMusic(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozChatApiMusic(x uint64) (n int) {
	return sovChatApiMusic(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MusicsGet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MusicsGet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MusicsGet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlaylistID", wireType)
			}
			m.PlaylistID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlaylistID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &FileLocation{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attribute", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Attribute == nil {
				m.Attribute = &DocumentAttributeAudio{}
			}
			if err := m.Attribute.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumbnail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumbnail == nil {
				m.Thumbnail = &FileLocation{}
			}
			if err := m.Thumbnail.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MD5Checksum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MD5Checksum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiMusic(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MusicsAdd) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MusicsAdd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MusicsAdd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlaylistID", wireType)
			}
			m.PlaylistID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlaylistID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFileLocation{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumbnail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumbnail == nil {
				m.Thumbnail = &InputFileLocation{}
			}
			if err := m.Thumbnail.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiMusic(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MusicsRemove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MusicsRemove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MusicsRemove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiMusic(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MusicsSetStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MusicsSetStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MusicsSetStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiMusic(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MusicsFollow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MusicsFollow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MusicsFollow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiMusic(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MusicsUnFollow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MusicsUnFollow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MusicsUnFollow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiMusic(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiMusic
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiMusic(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiMusic
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiMusic
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChatApiMusic
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupChatApiMusic
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthChatApiMusic
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthChatApiMusic        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiMusic          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupChatApiMusic = fmt.Errorf("proto: unexpected end of group")
)
