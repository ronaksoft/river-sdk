// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: admin.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_AdminSetWelcomeMessage int64 = 1149591874

type poolAdminSetWelcomeMessage struct {
	pool sync.Pool
}

func (p *poolAdminSetWelcomeMessage) Get() *AdminSetWelcomeMessage {
	x, ok := p.pool.Get().(*AdminSetWelcomeMessage)
	if !ok {
		return &AdminSetWelcomeMessage{}
	}
	return x
}

func (p *poolAdminSetWelcomeMessage) Put(x *AdminSetWelcomeMessage) {
	p.pool.Put(x)
}

var PoolAdminSetWelcomeMessage = poolAdminSetWelcomeMessage{}

func ResultAdminSetWelcomeMessage(out *MessageEnvelope, res *AdminSetWelcomeMessage) {
	out.Constructor = C_AdminSetWelcomeMessage
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminGetWelcomeMessages int64 = 2794709448

type poolAdminGetWelcomeMessages struct {
	pool sync.Pool
}

func (p *poolAdminGetWelcomeMessages) Get() *AdminGetWelcomeMessages {
	x, ok := p.pool.Get().(*AdminGetWelcomeMessages)
	if !ok {
		return &AdminGetWelcomeMessages{}
	}
	return x
}

func (p *poolAdminGetWelcomeMessages) Put(x *AdminGetWelcomeMessages) {
	p.pool.Put(x)
}

var PoolAdminGetWelcomeMessages = poolAdminGetWelcomeMessages{}

func ResultAdminGetWelcomeMessages(out *MessageEnvelope, res *AdminGetWelcomeMessages) {
	out.Constructor = C_AdminGetWelcomeMessages
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminDeleteWelcomeMessage int64 = 3940015991

type poolAdminDeleteWelcomeMessage struct {
	pool sync.Pool
}

func (p *poolAdminDeleteWelcomeMessage) Get() *AdminDeleteWelcomeMessage {
	x, ok := p.pool.Get().(*AdminDeleteWelcomeMessage)
	if !ok {
		return &AdminDeleteWelcomeMessage{}
	}
	return x
}

func (p *poolAdminDeleteWelcomeMessage) Put(x *AdminDeleteWelcomeMessage) {
	p.pool.Put(x)
}

var PoolAdminDeleteWelcomeMessage = poolAdminDeleteWelcomeMessage{}

func ResultAdminDeleteWelcomeMessage(out *MessageEnvelope, res *AdminDeleteWelcomeMessage) {
	out.Constructor = C_AdminDeleteWelcomeMessage
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminSetPushProvider int64 = 1758606947

type poolAdminSetPushProvider struct {
	pool sync.Pool
}

func (p *poolAdminSetPushProvider) Get() *AdminSetPushProvider {
	x, ok := p.pool.Get().(*AdminSetPushProvider)
	if !ok {
		return &AdminSetPushProvider{}
	}
	return x
}

func (p *poolAdminSetPushProvider) Put(x *AdminSetPushProvider) {
	p.pool.Put(x)
}

var PoolAdminSetPushProvider = poolAdminSetPushProvider{}

func ResultAdminSetPushProvider(out *MessageEnvelope, res *AdminSetPushProvider) {
	out.Constructor = C_AdminSetPushProvider
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminGetPushProviders int64 = 4257963974

type poolAdminGetPushProviders struct {
	pool sync.Pool
}

func (p *poolAdminGetPushProviders) Get() *AdminGetPushProviders {
	x, ok := p.pool.Get().(*AdminGetPushProviders)
	if !ok {
		return &AdminGetPushProviders{}
	}
	return x
}

func (p *poolAdminGetPushProviders) Put(x *AdminGetPushProviders) {
	p.pool.Put(x)
}

var PoolAdminGetPushProviders = poolAdminGetPushProviders{}

func ResultAdminGetPushProviders(out *MessageEnvelope, res *AdminGetPushProviders) {
	out.Constructor = C_AdminGetPushProviders
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminDeletePushProvider int64 = 1864898932

type poolAdminDeletePushProvider struct {
	pool sync.Pool
}

func (p *poolAdminDeletePushProvider) Get() *AdminDeletePushProvider {
	x, ok := p.pool.Get().(*AdminDeletePushProvider)
	if !ok {
		return &AdminDeletePushProvider{}
	}
	return x
}

func (p *poolAdminDeletePushProvider) Put(x *AdminDeletePushProvider) {
	p.pool.Put(x)
}

var PoolAdminDeletePushProvider = poolAdminDeletePushProvider{}

func ResultAdminDeletePushProvider(out *MessageEnvelope, res *AdminDeletePushProvider) {
	out.Constructor = C_AdminDeletePushProvider
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminSetVersion int64 = 1311023404

type poolAdminSetVersion struct {
	pool sync.Pool
}

func (p *poolAdminSetVersion) Get() *AdminSetVersion {
	x, ok := p.pool.Get().(*AdminSetVersion)
	if !ok {
		return &AdminSetVersion{}
	}
	return x
}

func (p *poolAdminSetVersion) Put(x *AdminSetVersion) {
	p.pool.Put(x)
}

var PoolAdminSetVersion = poolAdminSetVersion{}

func ResultAdminSetVersion(out *MessageEnvelope, res *AdminSetVersion) {
	out.Constructor = C_AdminSetVersion
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminGetVersions int64 = 934752256

type poolAdminGetVersions struct {
	pool sync.Pool
}

func (p *poolAdminGetVersions) Get() *AdminGetVersions {
	x, ok := p.pool.Get().(*AdminGetVersions)
	if !ok {
		return &AdminGetVersions{}
	}
	return x
}

func (p *poolAdminGetVersions) Put(x *AdminGetVersions) {
	p.pool.Put(x)
}

var PoolAdminGetVersions = poolAdminGetVersions{}

func ResultAdminGetVersions(out *MessageEnvelope, res *AdminGetVersions) {
	out.Constructor = C_AdminGetVersions
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminSetToken int64 = 2892519162

type poolAdminSetToken struct {
	pool sync.Pool
}

func (p *poolAdminSetToken) Get() *AdminSetToken {
	x, ok := p.pool.Get().(*AdminSetToken)
	if !ok {
		return &AdminSetToken{}
	}
	return x
}

func (p *poolAdminSetToken) Put(x *AdminSetToken) {
	p.pool.Put(x)
}

var PoolAdminSetToken = poolAdminSetToken{}

func ResultAdminSetToken(out *MessageEnvelope, res *AdminSetToken) {
	out.Constructor = C_AdminSetToken
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminDeleteToken int64 = 3154441897

type poolAdminDeleteToken struct {
	pool sync.Pool
}

func (p *poolAdminDeleteToken) Get() *AdminDeleteToken {
	x, ok := p.pool.Get().(*AdminDeleteToken)
	if !ok {
		return &AdminDeleteToken{}
	}
	return x
}

func (p *poolAdminDeleteToken) Put(x *AdminDeleteToken) {
	p.pool.Put(x)
}

var PoolAdminDeleteToken = poolAdminDeleteToken{}

func ResultAdminDeleteToken(out *MessageEnvelope, res *AdminDeleteToken) {
	out.Constructor = C_AdminDeleteToken
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminReserveUsername int64 = 1947723452

type poolAdminReserveUsername struct {
	pool sync.Pool
}

func (p *poolAdminReserveUsername) Get() *AdminReserveUsername {
	x, ok := p.pool.Get().(*AdminReserveUsername)
	if !ok {
		return &AdminReserveUsername{}
	}
	x.Usernames = x.Usernames[:0]
	return x
}

func (p *poolAdminReserveUsername) Put(x *AdminReserveUsername) {
	p.pool.Put(x)
}

var PoolAdminReserveUsername = poolAdminReserveUsername{}

func ResultAdminReserveUsername(out *MessageEnvelope, res *AdminReserveUsername) {
	out.Constructor = C_AdminReserveUsername
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminGetReservedUsernames int64 = 1588181579

type poolAdminGetReservedUsernames struct {
	pool sync.Pool
}

func (p *poolAdminGetReservedUsernames) Get() *AdminGetReservedUsernames {
	x, ok := p.pool.Get().(*AdminGetReservedUsernames)
	if !ok {
		return &AdminGetReservedUsernames{}
	}
	return x
}

func (p *poolAdminGetReservedUsernames) Put(x *AdminGetReservedUsernames) {
	p.pool.Put(x)
}

var PoolAdminGetReservedUsernames = poolAdminGetReservedUsernames{}

func ResultAdminGetReservedUsernames(out *MessageEnvelope, res *AdminGetReservedUsernames) {
	out.Constructor = C_AdminGetReservedUsernames
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminTeamCreate int64 = 2797066608

type poolAdminTeamCreate struct {
	pool sync.Pool
}

func (p *poolAdminTeamCreate) Get() *AdminTeamCreate {
	x, ok := p.pool.Get().(*AdminTeamCreate)
	if !ok {
		return &AdminTeamCreate{}
	}
	return x
}

func (p *poolAdminTeamCreate) Put(x *AdminTeamCreate) {
	p.pool.Put(x)
}

var PoolAdminTeamCreate = poolAdminTeamCreate{}

func ResultAdminTeamCreate(out *MessageEnvelope, res *AdminTeamCreate) {
	out.Constructor = C_AdminTeamCreate
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_AdminToken int64 = 2895609620

type poolAdminToken struct {
	pool sync.Pool
}

func (p *poolAdminToken) Get() *AdminToken {
	x, ok := p.pool.Get().(*AdminToken)
	if !ok {
		return &AdminToken{}
	}
	return x
}

func (p *poolAdminToken) Put(x *AdminToken) {
	p.pool.Put(x)
}

var PoolAdminToken = poolAdminToken{}

func ResultAdminToken(out *MessageEnvelope, res *AdminToken) {
	out.Constructor = C_AdminToken
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_WelcomeMessagesMany int64 = 414982091

type poolWelcomeMessagesMany struct {
	pool sync.Pool
}

func (p *poolWelcomeMessagesMany) Get() *WelcomeMessagesMany {
	x, ok := p.pool.Get().(*WelcomeMessagesMany)
	if !ok {
		return &WelcomeMessagesMany{}
	}
	x.Messages = x.Messages[:0]
	return x
}

func (p *poolWelcomeMessagesMany) Put(x *WelcomeMessagesMany) {
	p.pool.Put(x)
}

var PoolWelcomeMessagesMany = poolWelcomeMessagesMany{}

func ResultWelcomeMessagesMany(out *MessageEnvelope, res *WelcomeMessagesMany) {
	out.Constructor = C_WelcomeMessagesMany
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_VersionsMany int64 = 2123920547

type poolVersionsMany struct {
	pool sync.Pool
}

func (p *poolVersionsMany) Get() *VersionsMany {
	x, ok := p.pool.Get().(*VersionsMany)
	if !ok {
		return &VersionsMany{}
	}
	x.Versions = x.Versions[:0]
	return x
}

func (p *poolVersionsMany) Put(x *VersionsMany) {
	p.pool.Put(x)
}

var PoolVersionsMany = poolVersionsMany{}

func ResultVersionsMany(out *MessageEnvelope, res *VersionsMany) {
	out.Constructor = C_VersionsMany
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_PushProvidersMany int64 = 5873573

type poolPushProvidersMany struct {
	pool sync.Pool
}

func (p *poolPushProvidersMany) Get() *PushProvidersMany {
	x, ok := p.pool.Get().(*PushProvidersMany)
	if !ok {
		return &PushProvidersMany{}
	}
	x.Providers = x.Providers[:0]
	return x
}

func (p *poolPushProvidersMany) Put(x *PushProvidersMany) {
	p.pool.Put(x)
}

var PoolPushProvidersMany = poolPushProvidersMany{}

func ResultPushProvidersMany(out *MessageEnvelope, res *PushProvidersMany) {
	out.Constructor = C_PushProvidersMany
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_WelcomeMessage int64 = 2506678571

type poolWelcomeMessage struct {
	pool sync.Pool
}

func (p *poolWelcomeMessage) Get() *WelcomeMessage {
	x, ok := p.pool.Get().(*WelcomeMessage)
	if !ok {
		return &WelcomeMessage{}
	}
	return x
}

func (p *poolWelcomeMessage) Put(x *WelcomeMessage) {
	p.pool.Put(x)
}

var PoolWelcomeMessage = poolWelcomeMessage{}

func ResultWelcomeMessage(out *MessageEnvelope, res *WelcomeMessage) {
	out.Constructor = C_WelcomeMessage
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_PushProvider int64 = 1015984470

type poolPushProvider struct {
	pool sync.Pool
}

func (p *poolPushProvider) Get() *PushProvider {
	x, ok := p.pool.Get().(*PushProvider)
	if !ok {
		return &PushProvider{}
	}
	x.Credentials = nil
	x.Credentials = x.Credentials[:0]
	x.KeyID = ""
	x.TeamID = ""
	x.Topic = ""
	return x
}

func (p *poolPushProvider) Put(x *PushProvider) {
	p.pool.Put(x)
}

var PoolPushProvider = poolPushProvider{}

func ResultPushProvider(out *MessageEnvelope, res *PushProvider) {
	out.Constructor = C_PushProvider
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_Version int64 = 1889659487

type poolVersion struct {
	pool sync.Pool
}

func (p *poolVersion) Get() *Version {
	x, ok := p.pool.Get().(*Version)
	if !ok {
		return &Version{}
	}
	x.ForcedVersions = x.ForcedVersions[:0]
	return x
}

func (p *poolVersion) Put(x *Version) {
	p.pool.Put(x)
}

var PoolVersion = poolVersion{}

func ResultVersion(out *MessageEnvelope, res *Version) {
	out.Constructor = C_Version
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

const C_ReservedUsernames int64 = 1388055751

type poolReservedUsernames struct {
	pool sync.Pool
}

func (p *poolReservedUsernames) Get() *ReservedUsernames {
	x, ok := p.pool.Get().(*ReservedUsernames)
	if !ok {
		return &ReservedUsernames{}
	}
	x.Usernames = x.Usernames[:0]
	return x
}

func (p *poolReservedUsernames) Put(x *ReservedUsernames) {
	p.pool.Put(x)
}

var PoolReservedUsernames = poolReservedUsernames{}

func ResultReservedUsernames(out *MessageEnvelope, res *ReservedUsernames) {
	out.Constructor = C_ReservedUsernames
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

func init() {
	ConstructorNames[1149591874] = "AdminSetWelcomeMessage"
	ConstructorNames[2794709448] = "AdminGetWelcomeMessages"
	ConstructorNames[3940015991] = "AdminDeleteWelcomeMessage"
	ConstructorNames[1758606947] = "AdminSetPushProvider"
	ConstructorNames[4257963974] = "AdminGetPushProviders"
	ConstructorNames[1864898932] = "AdminDeletePushProvider"
	ConstructorNames[1311023404] = "AdminSetVersion"
	ConstructorNames[934752256] = "AdminGetVersions"
	ConstructorNames[2892519162] = "AdminSetToken"
	ConstructorNames[3154441897] = "AdminDeleteToken"
	ConstructorNames[1947723452] = "AdminReserveUsername"
	ConstructorNames[1588181579] = "AdminGetReservedUsernames"
	ConstructorNames[2797066608] = "AdminTeamCreate"
	ConstructorNames[2895609620] = "AdminToken"
	ConstructorNames[414982091] = "WelcomeMessagesMany"
	ConstructorNames[2123920547] = "VersionsMany"
	ConstructorNames[5873573] = "PushProvidersMany"
	ConstructorNames[2506678571] = "WelcomeMessage"
	ConstructorNames[1015984470] = "PushProvider"
	ConstructorNames[1889659487] = "Version"
	ConstructorNames[1388055751] = "ReservedUsernames"
}
