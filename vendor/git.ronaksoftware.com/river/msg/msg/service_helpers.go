// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_ServiceSendMessage int64 = 824547051

type poolServiceSendMessage struct {
	pool sync.Pool
}

func (p *poolServiceSendMessage) Get() *ServiceSendMessage {
	x, ok := p.pool.Get().(*ServiceSendMessage)
	if !ok {
		return &ServiceSendMessage{}
	}
	return x
}

func (p *poolServiceSendMessage) Put(x *ServiceSendMessage) {
	x.ReplyTo = 0
	x.ClearDraft = false
	x.Entities = x.Entities[:0]
	p.pool.Put(x)
}

var PoolServiceSendMessage = poolServiceSendMessage{}

func ResultServiceSendMessage(out *MessageEnvelope, res *ServiceSendMessage) {
	out.Constructor = C_ServiceSendMessage
	protoSize := res.Size()
	if protoSize > cap(out.Message) {
		pbytes.Put(out.Message)
		out.Message = pbytes.GetLen(protoSize)
	} else {
		out.Message = out.Message[:protoSize]
	}
	res.MarshalToSizedBuffer(out.Message)
}

func init() {
	ConstructorNames[824547051] = "ServiceSendMessage"
}
