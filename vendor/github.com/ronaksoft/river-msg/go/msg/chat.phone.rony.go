// Code generated by Rony's protoc plugin; DO NOT EDIT.
// ProtoC ver. v4.25.2
// Rony ver. v0.12.22
// Source: chat.phone.proto

package msg

import (
	bytes "bytes"
	edge "github.com/ronaksoft/rony/edge"
	pools "github.com/ronaksoft/rony/pools"
	registry "github.com/ronaksoft/rony/registry"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
	sync "sync"
)

var _ = pools.Imported

const C_PhoneInitCall int64 = 2975617068

type poolPhoneInitCall struct {
	pool sync.Pool
}

func (p *poolPhoneInitCall) Get() *PhoneInitCall {
	x, ok := p.pool.Get().(*PhoneInitCall)
	if !ok {
		x = &PhoneInitCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneInitCall) Put(x *PhoneInitCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0

	p.pool.Put(x)
}

var PoolPhoneInitCall = poolPhoneInitCall{}

func (x *PhoneInitCall) DeepCopy(z *PhoneInitCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
}

func (x *PhoneInitCall) Clone() *PhoneInitCall {
	z := &PhoneInitCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneInitCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneInitCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneInitCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneInitCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneInitCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneInitCall, x)
}

const C_PhoneRequestCall int64 = 907942641

type poolPhoneRequestCall struct {
	pool sync.Pool
}

func (p *poolPhoneRequestCall) Get() *PhoneRequestCall {
	x, ok := p.pool.Get().(*PhoneRequestCall)
	if !ok {
		x = &PhoneRequestCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneRequestCall) Put(x *PhoneRequestCall) {
	if x == nil {
		return
	}

	x.RandomID = 0
	PoolInputPeer.Put(x.Peer)
	x.Initiator = false
	for _, z := range x.Participants {
		PoolPhoneParticipantSDP.Put(z)
	}
	x.Participants = x.Participants[:0]
	x.CallID = 0
	x.DeviceType = 0
	x.Video = false

	p.pool.Put(x)
}

var PoolPhoneRequestCall = poolPhoneRequestCall{}

func (x *PhoneRequestCall) DeepCopy(z *PhoneRequestCall) {
	z.RandomID = x.RandomID
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.Initiator = x.Initiator
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolPhoneParticipantSDP.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
	z.CallID = x.CallID
	z.DeviceType = x.DeviceType
	z.Video = x.Video
}

func (x *PhoneRequestCall) Clone() *PhoneRequestCall {
	z := &PhoneRequestCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneRequestCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneRequestCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneRequestCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneRequestCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneRequestCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneRequestCall, x)
}

const C_PhoneAcceptCall int64 = 4133092858

type poolPhoneAcceptCall struct {
	pool sync.Pool
}

func (p *poolPhoneAcceptCall) Get() *PhoneAcceptCall {
	x, ok := p.pool.Get().(*PhoneAcceptCall)
	if !ok {
		x = &PhoneAcceptCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneAcceptCall) Put(x *PhoneAcceptCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	for _, z := range x.Participants {
		PoolPhoneParticipantSDP.Put(z)
	}
	x.Participants = x.Participants[:0]
	x.DeviceType = 0

	p.pool.Put(x)
}

var PoolPhoneAcceptCall = poolPhoneAcceptCall{}

func (x *PhoneAcceptCall) DeepCopy(z *PhoneAcceptCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolPhoneParticipantSDP.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
	z.DeviceType = x.DeviceType
}

func (x *PhoneAcceptCall) Clone() *PhoneAcceptCall {
	z := &PhoneAcceptCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneAcceptCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneAcceptCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneAcceptCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneAcceptCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneAcceptCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneAcceptCall, x)
}

const C_PhoneDiscardCall int64 = 2712700137

type poolPhoneDiscardCall struct {
	pool sync.Pool
}

func (p *poolPhoneDiscardCall) Get() *PhoneDiscardCall {
	x, ok := p.pool.Get().(*PhoneDiscardCall)
	if !ok {
		x = &PhoneDiscardCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneDiscardCall) Put(x *PhoneDiscardCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	x.Duration = 0
	x.Reason = 0

	p.pool.Put(x)
}

var PoolPhoneDiscardCall = poolPhoneDiscardCall{}

func (x *PhoneDiscardCall) DeepCopy(z *PhoneDiscardCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	z.Duration = x.Duration
	z.Reason = x.Reason
}

func (x *PhoneDiscardCall) Clone() *PhoneDiscardCall {
	z := &PhoneDiscardCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneDiscardCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneDiscardCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneDiscardCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneDiscardCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneDiscardCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneDiscardCall, x)
}

const C_PhoneGetCall int64 = 432049159

type poolPhoneGetCall struct {
	pool sync.Pool
}

func (p *poolPhoneGetCall) Get() *PhoneGetCall {
	x, ok := p.pool.Get().(*PhoneGetCall)
	if !ok {
		x = &PhoneGetCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneGetCall) Put(x *PhoneGetCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0

	p.pool.Put(x)
}

var PoolPhoneGetCall = poolPhoneGetCall{}

func (x *PhoneGetCall) DeepCopy(z *PhoneGetCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
}

func (x *PhoneGetCall) Clone() *PhoneGetCall {
	z := &PhoneGetCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneGetCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneGetCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneGetCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneGetCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneGetCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneGetCall, x)
}

const C_PhoneJoinCall int64 = 3019166552

type poolPhoneJoinCall struct {
	pool sync.Pool
}

func (p *poolPhoneJoinCall) Get() *PhoneJoinCall {
	x, ok := p.pool.Get().(*PhoneJoinCall)
	if !ok {
		x = &PhoneJoinCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneJoinCall) Put(x *PhoneJoinCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0

	p.pool.Put(x)
}

var PoolPhoneJoinCall = poolPhoneJoinCall{}

func (x *PhoneJoinCall) DeepCopy(z *PhoneJoinCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
}

func (x *PhoneJoinCall) Clone() *PhoneJoinCall {
	z := &PhoneJoinCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneJoinCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneJoinCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneJoinCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneJoinCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneJoinCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneJoinCall, x)
}

const C_PhoneAddParticipant int64 = 2867411100

type poolPhoneAddParticipant struct {
	pool sync.Pool
}

func (p *poolPhoneAddParticipant) Get() *PhoneAddParticipant {
	x, ok := p.pool.Get().(*PhoneAddParticipant)
	if !ok {
		x = &PhoneAddParticipant{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneAddParticipant) Put(x *PhoneAddParticipant) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	for _, z := range x.Participants {
		PoolInputUser.Put(z)
	}
	x.Participants = x.Participants[:0]

	p.pool.Put(x)
}

var PoolPhoneAddParticipant = poolPhoneAddParticipant{}

func (x *PhoneAddParticipant) DeepCopy(z *PhoneAddParticipant) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolInputUser.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
}

func (x *PhoneAddParticipant) Clone() *PhoneAddParticipant {
	z := &PhoneAddParticipant{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneAddParticipant) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneAddParticipant) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneAddParticipant) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneAddParticipant) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneAddParticipant) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneAddParticipant, x)
}

const C_PhoneRemoveParticipant int64 = 188662172

type poolPhoneRemoveParticipant struct {
	pool sync.Pool
}

func (p *poolPhoneRemoveParticipant) Get() *PhoneRemoveParticipant {
	x, ok := p.pool.Get().(*PhoneRemoveParticipant)
	if !ok {
		x = &PhoneRemoveParticipant{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneRemoveParticipant) Put(x *PhoneRemoveParticipant) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	for _, z := range x.Participants {
		PoolInputUser.Put(z)
	}
	x.Participants = x.Participants[:0]
	x.Timeout = false

	p.pool.Put(x)
}

var PoolPhoneRemoveParticipant = poolPhoneRemoveParticipant{}

func (x *PhoneRemoveParticipant) DeepCopy(z *PhoneRemoveParticipant) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolInputUser.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
	z.Timeout = x.Timeout
}

func (x *PhoneRemoveParticipant) Clone() *PhoneRemoveParticipant {
	z := &PhoneRemoveParticipant{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneRemoveParticipant) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneRemoveParticipant) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneRemoveParticipant) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneRemoveParticipant) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneRemoveParticipant) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneRemoveParticipant, x)
}

const C_PhoneGetParticipants int64 = 3924781570

type poolPhoneGetParticipants struct {
	pool sync.Pool
}

func (p *poolPhoneGetParticipants) Get() *PhoneGetParticipants {
	x, ok := p.pool.Get().(*PhoneGetParticipants)
	if !ok {
		x = &PhoneGetParticipants{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneGetParticipants) Put(x *PhoneGetParticipants) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0

	p.pool.Put(x)
}

var PoolPhoneGetParticipants = poolPhoneGetParticipants{}

func (x *PhoneGetParticipants) DeepCopy(z *PhoneGetParticipants) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
}

func (x *PhoneGetParticipants) Clone() *PhoneGetParticipants {
	z := &PhoneGetParticipants{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneGetParticipants) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneGetParticipants) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneGetParticipants) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneGetParticipants) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneGetParticipants) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneGetParticipants, x)
}

const C_PhoneUpdateCall int64 = 1976202226

type poolPhoneUpdateCall struct {
	pool sync.Pool
}

func (p *poolPhoneUpdateCall) Get() *PhoneUpdateCall {
	x, ok := p.pool.Get().(*PhoneUpdateCall)
	if !ok {
		x = &PhoneUpdateCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneUpdateCall) Put(x *PhoneUpdateCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	for _, z := range x.Participants {
		PoolInputUser.Put(z)
	}
	x.Participants = x.Participants[:0]
	x.Action = 0
	x.ActionData = x.ActionData[:0]

	p.pool.Put(x)
}

var PoolPhoneUpdateCall = poolPhoneUpdateCall{}

func (x *PhoneUpdateCall) DeepCopy(z *PhoneUpdateCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolInputUser.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
	z.Action = x.Action
	z.ActionData = append(z.ActionData[:0], x.ActionData...)
}

func (x *PhoneUpdateCall) Clone() *PhoneUpdateCall {
	z := &PhoneUpdateCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneUpdateCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneUpdateCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneUpdateCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneUpdateCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneUpdateCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneUpdateCall, x)
}

const C_PhoneRateCall int64 = 2215486159

type poolPhoneRateCall struct {
	pool sync.Pool
}

func (p *poolPhoneRateCall) Get() *PhoneRateCall {
	x, ok := p.pool.Get().(*PhoneRateCall)
	if !ok {
		x = &PhoneRateCall{}
	}

	x.Peer = PoolInputPeer.Get()

	return x
}

func (p *poolPhoneRateCall) Put(x *PhoneRateCall) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	x.Rate = 0
	x.ReasonType = 0
	x.ReasonData = x.ReasonData[:0]

	p.pool.Put(x)
}

var PoolPhoneRateCall = poolPhoneRateCall{}

func (x *PhoneRateCall) DeepCopy(z *PhoneRateCall) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	z.Rate = x.Rate
	z.ReasonType = x.ReasonType
	z.ReasonData = append(z.ReasonData[:0], x.ReasonData...)
}

func (x *PhoneRateCall) Clone() *PhoneRateCall {
	z := &PhoneRateCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneRateCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneRateCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneRateCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneRateCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneRateCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneRateCall, x)
}

const C_PhoneGetHistory int64 = 407776572

type poolPhoneGetHistory struct {
	pool sync.Pool
}

func (p *poolPhoneGetHistory) Get() *PhoneGetHistory {
	x, ok := p.pool.Get().(*PhoneGetHistory)
	if !ok {
		x = &PhoneGetHistory{}
	}

	return x
}

func (p *poolPhoneGetHistory) Put(x *PhoneGetHistory) {
	if x == nil {
		return
	}

	x.Limit = 0
	x.After = 0

	p.pool.Put(x)
}

var PoolPhoneGetHistory = poolPhoneGetHistory{}

func (x *PhoneGetHistory) DeepCopy(z *PhoneGetHistory) {
	z.Limit = x.Limit
	z.After = x.After
}

func (x *PhoneGetHistory) Clone() *PhoneGetHistory {
	z := &PhoneGetHistory{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneGetHistory) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneGetHistory) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneGetHistory) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneGetHistory) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneGetHistory) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneGetHistory, x)
}

const C_PhoneDeleteHistory int64 = 2528259211

type poolPhoneDeleteHistory struct {
	pool sync.Pool
}

func (p *poolPhoneDeleteHistory) Get() *PhoneDeleteHistory {
	x, ok := p.pool.Get().(*PhoneDeleteHistory)
	if !ok {
		x = &PhoneDeleteHistory{}
	}

	return x
}

func (p *poolPhoneDeleteHistory) Put(x *PhoneDeleteHistory) {
	if x == nil {
		return
	}

	x.CallIDs = x.CallIDs[:0]

	p.pool.Put(x)
}

var PoolPhoneDeleteHistory = poolPhoneDeleteHistory{}

func (x *PhoneDeleteHistory) DeepCopy(z *PhoneDeleteHistory) {
	z.CallIDs = append(z.CallIDs[:0], x.CallIDs...)
}

func (x *PhoneDeleteHistory) Clone() *PhoneDeleteHistory {
	z := &PhoneDeleteHistory{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneDeleteHistory) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneDeleteHistory) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneDeleteHistory) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneDeleteHistory) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneDeleteHistory) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneDeleteHistory, x)
}

const C_PhoneCallRecord int64 = 4147150312

type poolPhoneCallRecord struct {
	pool sync.Pool
}

func (p *poolPhoneCallRecord) Get() *PhoneCallRecord {
	x, ok := p.pool.Get().(*PhoneCallRecord)
	if !ok {
		x = &PhoneCallRecord{}
	}

	return x
}

func (p *poolPhoneCallRecord) Put(x *PhoneCallRecord) {
	if x == nil {
		return
	}

	x.UserID = 0
	x.TeamID = 0
	x.CallID = 0
	x.CreatedOn = 0
	x.EndedOn = 0
	x.Incoming = false
	x.PeerID = 0
	x.PeerType = 0
	x.Status = 0

	p.pool.Put(x)
}

var PoolPhoneCallRecord = poolPhoneCallRecord{}

func (x *PhoneCallRecord) DeepCopy(z *PhoneCallRecord) {
	z.UserID = x.UserID
	z.TeamID = x.TeamID
	z.CallID = x.CallID
	z.CreatedOn = x.CreatedOn
	z.EndedOn = x.EndedOn
	z.Incoming = x.Incoming
	z.PeerID = x.PeerID
	z.PeerType = x.PeerType
	z.Status = x.Status
}

func (x *PhoneCallRecord) Clone() *PhoneCallRecord {
	z := &PhoneCallRecord{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneCallRecord) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneCallRecord) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneCallRecord) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneCallRecord) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneCallRecord) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneCallRecord, x)
}

const C_PhoneCallsMany int64 = 1227520020

type poolPhoneCallsMany struct {
	pool sync.Pool
}

func (p *poolPhoneCallsMany) Get() *PhoneCallsMany {
	x, ok := p.pool.Get().(*PhoneCallsMany)
	if !ok {
		x = &PhoneCallsMany{}
	}

	return x
}

func (p *poolPhoneCallsMany) Put(x *PhoneCallsMany) {
	if x == nil {
		return
	}

	for _, z := range x.PhoneCalls {
		PoolPhoneCallRecord.Put(z)
	}
	x.PhoneCalls = x.PhoneCalls[:0]
	for _, z := range x.Users {
		PoolUser.Put(z)
	}
	x.Users = x.Users[:0]
	for _, z := range x.Groups {
		PoolGroup.Put(z)
	}
	x.Groups = x.Groups[:0]
	x.Continuous = false
	x.Empty = false

	p.pool.Put(x)
}

var PoolPhoneCallsMany = poolPhoneCallsMany{}

func (x *PhoneCallsMany) DeepCopy(z *PhoneCallsMany) {
	for idx := range x.PhoneCalls {
		if x.PhoneCalls[idx] == nil {
			continue
		}
		xx := PoolPhoneCallRecord.Get()
		x.PhoneCalls[idx].DeepCopy(xx)
		z.PhoneCalls = append(z.PhoneCalls, xx)
	}
	for idx := range x.Users {
		if x.Users[idx] == nil {
			continue
		}
		xx := PoolUser.Get()
		x.Users[idx].DeepCopy(xx)
		z.Users = append(z.Users, xx)
	}
	for idx := range x.Groups {
		if x.Groups[idx] == nil {
			continue
		}
		xx := PoolGroup.Get()
		x.Groups[idx].DeepCopy(xx)
		z.Groups = append(z.Groups, xx)
	}
	z.Continuous = x.Continuous
	z.Empty = x.Empty
}

func (x *PhoneCallsMany) Clone() *PhoneCallsMany {
	z := &PhoneCallsMany{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneCallsMany) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneCallsMany) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneCallsMany) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneCallsMany) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneCallsMany) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneCallsMany, x)
}

const C_PhoneUpdateAdmin int64 = 442877873

type poolPhoneUpdateAdmin struct {
	pool sync.Pool
}

func (p *poolPhoneUpdateAdmin) Get() *PhoneUpdateAdmin {
	x, ok := p.pool.Get().(*PhoneUpdateAdmin)
	if !ok {
		x = &PhoneUpdateAdmin{}
	}

	x.Peer = PoolInputPeer.Get()

	x.User = PoolInputUser.Get()

	return x
}

func (p *poolPhoneUpdateAdmin) Put(x *PhoneUpdateAdmin) {
	if x == nil {
		return
	}

	PoolInputPeer.Put(x.Peer)
	x.CallID = 0
	PoolInputUser.Put(x.User)
	x.Admin = false

	p.pool.Put(x)
}

var PoolPhoneUpdateAdmin = poolPhoneUpdateAdmin{}

func (x *PhoneUpdateAdmin) DeepCopy(z *PhoneUpdateAdmin) {
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputPeer.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputPeer.Put(z.Peer)
		z.Peer = nil
	}
	z.CallID = x.CallID
	if x.User != nil {
		if z.User == nil {
			z.User = PoolInputUser.Get()
		}
		x.User.DeepCopy(z.User)
	} else {
		PoolInputUser.Put(z.User)
		z.User = nil
	}
	z.Admin = x.Admin
}

func (x *PhoneUpdateAdmin) Clone() *PhoneUpdateAdmin {
	z := &PhoneUpdateAdmin{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneUpdateAdmin) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneUpdateAdmin) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneUpdateAdmin) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneUpdateAdmin) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneUpdateAdmin) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneUpdateAdmin, x)
}

const C_PhoneCall int64 = 3296664529

type poolPhoneCall struct {
	pool sync.Pool
}

func (p *poolPhoneCall) Get() *PhoneCall {
	x, ok := p.pool.Get().(*PhoneCall)
	if !ok {
		x = &PhoneCall{}
	}

	return x
}

func (p *poolPhoneCall) Put(x *PhoneCall) {
	if x == nil {
		return
	}

	x.ID = 0
	x.CreatedOn = 0

	p.pool.Put(x)
}

var PoolPhoneCall = poolPhoneCall{}

func (x *PhoneCall) DeepCopy(z *PhoneCall) {
	z.ID = x.ID
	z.CreatedOn = x.CreatedOn
}

func (x *PhoneCall) Clone() *PhoneCall {
	z := &PhoneCall{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneCall) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneCall) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneCall) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneCall) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneCall) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneCall, x)
}

const C_PhoneInit int64 = 3464876187

type poolPhoneInit struct {
	pool sync.Pool
}

func (p *poolPhoneInit) Get() *PhoneInit {
	x, ok := p.pool.Get().(*PhoneInit)
	if !ok {
		x = &PhoneInit{}
	}

	return x
}

func (p *poolPhoneInit) Put(x *PhoneInit) {
	if x == nil {
		return
	}

	for _, z := range x.IceServers {
		PoolIceServer.Put(z)
	}
	x.IceServers = x.IceServers[:0]

	p.pool.Put(x)
}

var PoolPhoneInit = poolPhoneInit{}

func (x *PhoneInit) DeepCopy(z *PhoneInit) {
	for idx := range x.IceServers {
		if x.IceServers[idx] == nil {
			continue
		}
		xx := PoolIceServer.Get()
		x.IceServers[idx].DeepCopy(xx)
		z.IceServers = append(z.IceServers, xx)
	}
}

func (x *PhoneInit) Clone() *PhoneInit {
	z := &PhoneInit{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneInit) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneInit) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneInit) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneInit) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneInit) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneInit, x)
}

const C_PhoneParticipants int64 = 2567653219

type poolPhoneParticipants struct {
	pool sync.Pool
}

func (p *poolPhoneParticipants) Get() *PhoneParticipants {
	x, ok := p.pool.Get().(*PhoneParticipants)
	if !ok {
		x = &PhoneParticipants{}
	}

	return x
}

func (p *poolPhoneParticipants) Put(x *PhoneParticipants) {
	if x == nil {
		return
	}

	for _, z := range x.Participants {
		PoolPhoneParticipant.Put(z)
	}
	x.Participants = x.Participants[:0]

	p.pool.Put(x)
}

var PoolPhoneParticipants = poolPhoneParticipants{}

func (x *PhoneParticipants) DeepCopy(z *PhoneParticipants) {
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolPhoneParticipant.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
}

func (x *PhoneParticipants) Clone() *PhoneParticipants {
	z := &PhoneParticipants{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneParticipants) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneParticipants) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneParticipants) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneParticipants) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneParticipants) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneParticipants, x)
}

const C_IceServer int64 = 4291892363

type poolIceServer struct {
	pool sync.Pool
}

func (p *poolIceServer) Get() *IceServer {
	x, ok := p.pool.Get().(*IceServer)
	if !ok {
		x = &IceServer{}
	}

	return x
}

func (p *poolIceServer) Put(x *IceServer) {
	if x == nil {
		return
	}

	x.Urls = x.Urls[:0]
	x.Username = ""
	x.Credential = ""

	p.pool.Put(x)
}

var PoolIceServer = poolIceServer{}

func (x *IceServer) DeepCopy(z *IceServer) {
	z.Urls = append(z.Urls[:0], x.Urls...)
	z.Username = x.Username
	z.Credential = x.Credential
}

func (x *IceServer) Clone() *IceServer {
	z := &IceServer{}
	x.DeepCopy(z)
	return z
}

func (x *IceServer) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *IceServer) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *IceServer) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *IceServer) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *IceServer) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_IceServer, x)
}

const C_PhoneParticipant int64 = 226273622

type poolPhoneParticipant struct {
	pool sync.Pool
}

func (p *poolPhoneParticipant) Get() *PhoneParticipant {
	x, ok := p.pool.Get().(*PhoneParticipant)
	if !ok {
		x = &PhoneParticipant{}
	}

	x.Peer = PoolInputUser.Get()

	return x
}

func (p *poolPhoneParticipant) Put(x *PhoneParticipant) {
	if x == nil {
		return
	}

	x.ConnectionId = 0
	PoolInputUser.Put(x.Peer)
	x.Initiator = false
	x.Admin = false

	p.pool.Put(x)
}

var PoolPhoneParticipant = poolPhoneParticipant{}

func (x *PhoneParticipant) DeepCopy(z *PhoneParticipant) {
	z.ConnectionId = x.ConnectionId
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputUser.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputUser.Put(z.Peer)
		z.Peer = nil
	}
	z.Initiator = x.Initiator
	z.Admin = x.Admin
}

func (x *PhoneParticipant) Clone() *PhoneParticipant {
	z := &PhoneParticipant{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneParticipant) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneParticipant) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneParticipant) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneParticipant) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneParticipant) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneParticipant, x)
}

const C_PhoneParticipantSDP int64 = 545454774

type poolPhoneParticipantSDP struct {
	pool sync.Pool
}

func (p *poolPhoneParticipantSDP) Get() *PhoneParticipantSDP {
	x, ok := p.pool.Get().(*PhoneParticipantSDP)
	if !ok {
		x = &PhoneParticipantSDP{}
	}

	x.Peer = PoolInputUser.Get()

	return x
}

func (p *poolPhoneParticipantSDP) Put(x *PhoneParticipantSDP) {
	if x == nil {
		return
	}

	x.ConnectionId = 0
	PoolInputUser.Put(x.Peer)
	x.SDP = ""
	x.Type = ""

	p.pool.Put(x)
}

var PoolPhoneParticipantSDP = poolPhoneParticipantSDP{}

func (x *PhoneParticipantSDP) DeepCopy(z *PhoneParticipantSDP) {
	z.ConnectionId = x.ConnectionId
	if x.Peer != nil {
		if z.Peer == nil {
			z.Peer = PoolInputUser.Get()
		}
		x.Peer.DeepCopy(z.Peer)
	} else {
		PoolInputUser.Put(z.Peer)
		z.Peer = nil
	}
	z.SDP = x.SDP
	z.Type = x.Type
}

func (x *PhoneParticipantSDP) Clone() *PhoneParticipantSDP {
	z := &PhoneParticipantSDP{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneParticipantSDP) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneParticipantSDP) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneParticipantSDP) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneParticipantSDP) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneParticipantSDP) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneParticipantSDP, x)
}

const C_PhoneActionCallEmpty int64 = 1073285997

type poolPhoneActionCallEmpty struct {
	pool sync.Pool
}

func (p *poolPhoneActionCallEmpty) Get() *PhoneActionCallEmpty {
	x, ok := p.pool.Get().(*PhoneActionCallEmpty)
	if !ok {
		x = &PhoneActionCallEmpty{}
	}

	return x
}

func (p *poolPhoneActionCallEmpty) Put(x *PhoneActionCallEmpty) {
	if x == nil {
		return
	}

	x.Empty = false

	p.pool.Put(x)
}

var PoolPhoneActionCallEmpty = poolPhoneActionCallEmpty{}

func (x *PhoneActionCallEmpty) DeepCopy(z *PhoneActionCallEmpty) {
	z.Empty = x.Empty
}

func (x *PhoneActionCallEmpty) Clone() *PhoneActionCallEmpty {
	z := &PhoneActionCallEmpty{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionCallEmpty) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionCallEmpty) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionCallEmpty) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionCallEmpty) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionCallEmpty) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionCallEmpty, x)
}

const C_PhoneActionAccepted int64 = 2493210645

type poolPhoneActionAccepted struct {
	pool sync.Pool
}

func (p *poolPhoneActionAccepted) Get() *PhoneActionAccepted {
	x, ok := p.pool.Get().(*PhoneActionAccepted)
	if !ok {
		x = &PhoneActionAccepted{}
	}

	return x
}

func (p *poolPhoneActionAccepted) Put(x *PhoneActionAccepted) {
	if x == nil {
		return
	}

	x.SDP = ""
	x.Type = ""
	x.DeviceType = 0

	p.pool.Put(x)
}

var PoolPhoneActionAccepted = poolPhoneActionAccepted{}

func (x *PhoneActionAccepted) DeepCopy(z *PhoneActionAccepted) {
	z.SDP = x.SDP
	z.Type = x.Type
	z.DeviceType = x.DeviceType
}

func (x *PhoneActionAccepted) Clone() *PhoneActionAccepted {
	z := &PhoneActionAccepted{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionAccepted) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionAccepted) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionAccepted) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionAccepted) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionAccepted) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionAccepted, x)
}

const C_PhoneActionRequested int64 = 1678316869

type poolPhoneActionRequested struct {
	pool sync.Pool
}

func (p *poolPhoneActionRequested) Get() *PhoneActionRequested {
	x, ok := p.pool.Get().(*PhoneActionRequested)
	if !ok {
		x = &PhoneActionRequested{}
	}

	return x
}

func (p *poolPhoneActionRequested) Put(x *PhoneActionRequested) {
	if x == nil {
		return
	}

	x.SDP = ""
	x.Type = ""
	for _, z := range x.Participants {
		PoolPhoneParticipant.Put(z)
	}
	x.Participants = x.Participants[:0]
	x.DeviceType = 0
	x.Video = false

	p.pool.Put(x)
}

var PoolPhoneActionRequested = poolPhoneActionRequested{}

func (x *PhoneActionRequested) DeepCopy(z *PhoneActionRequested) {
	z.SDP = x.SDP
	z.Type = x.Type
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolPhoneParticipant.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
	z.DeviceType = x.DeviceType
	z.Video = x.Video
}

func (x *PhoneActionRequested) Clone() *PhoneActionRequested {
	z := &PhoneActionRequested{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionRequested) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionRequested) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionRequested) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionRequested) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionRequested) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionRequested, x)
}

const C_PhoneActionCallWaiting int64 = 3634710697

type poolPhoneActionCallWaiting struct {
	pool sync.Pool
}

func (p *poolPhoneActionCallWaiting) Get() *PhoneActionCallWaiting {
	x, ok := p.pool.Get().(*PhoneActionCallWaiting)
	if !ok {
		x = &PhoneActionCallWaiting{}
	}

	return x
}

func (p *poolPhoneActionCallWaiting) Put(x *PhoneActionCallWaiting) {
	if x == nil {
		return
	}

	x.Empty = false

	p.pool.Put(x)
}

var PoolPhoneActionCallWaiting = poolPhoneActionCallWaiting{}

func (x *PhoneActionCallWaiting) DeepCopy(z *PhoneActionCallWaiting) {
	z.Empty = x.Empty
}

func (x *PhoneActionCallWaiting) Clone() *PhoneActionCallWaiting {
	z := &PhoneActionCallWaiting{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionCallWaiting) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionCallWaiting) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionCallWaiting) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionCallWaiting) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionCallWaiting) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionCallWaiting, x)
}

const C_PhoneActionDiscarded int64 = 4285966731

type poolPhoneActionDiscarded struct {
	pool sync.Pool
}

func (p *poolPhoneActionDiscarded) Get() *PhoneActionDiscarded {
	x, ok := p.pool.Get().(*PhoneActionDiscarded)
	if !ok {
		x = &PhoneActionDiscarded{}
	}

	return x
}

func (p *poolPhoneActionDiscarded) Put(x *PhoneActionDiscarded) {
	if x == nil {
		return
	}

	x.Duration = 0
	x.Video = false
	x.Reason = 0
	x.Terminate = false

	p.pool.Put(x)
}

var PoolPhoneActionDiscarded = poolPhoneActionDiscarded{}

func (x *PhoneActionDiscarded) DeepCopy(z *PhoneActionDiscarded) {
	z.Duration = x.Duration
	z.Video = x.Video
	z.Reason = x.Reason
	z.Terminate = x.Terminate
}

func (x *PhoneActionDiscarded) Clone() *PhoneActionDiscarded {
	z := &PhoneActionDiscarded{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionDiscarded) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionDiscarded) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionDiscarded) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionDiscarded) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionDiscarded) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionDiscarded, x)
}

const C_PhoneActionIceExchange int64 = 1618781621

type poolPhoneActionIceExchange struct {
	pool sync.Pool
}

func (p *poolPhoneActionIceExchange) Get() *PhoneActionIceExchange {
	x, ok := p.pool.Get().(*PhoneActionIceExchange)
	if !ok {
		x = &PhoneActionIceExchange{}
	}

	return x
}

func (p *poolPhoneActionIceExchange) Put(x *PhoneActionIceExchange) {
	if x == nil {
		return
	}

	x.Candidate = ""
	x.SdpMLineIndex = 0
	x.SdpMid = ""
	x.UsernameFragment = ""

	p.pool.Put(x)
}

var PoolPhoneActionIceExchange = poolPhoneActionIceExchange{}

func (x *PhoneActionIceExchange) DeepCopy(z *PhoneActionIceExchange) {
	z.Candidate = x.Candidate
	z.SdpMLineIndex = x.SdpMLineIndex
	z.SdpMid = x.SdpMid
	z.UsernameFragment = x.UsernameFragment
}

func (x *PhoneActionIceExchange) Clone() *PhoneActionIceExchange {
	z := &PhoneActionIceExchange{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionIceExchange) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionIceExchange) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionIceExchange) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionIceExchange) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionIceExchange) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionIceExchange, x)
}

const C_PhoneActionAck int64 = 1221076803

type poolPhoneActionAck struct {
	pool sync.Pool
}

func (p *poolPhoneActionAck) Get() *PhoneActionAck {
	x, ok := p.pool.Get().(*PhoneActionAck)
	if !ok {
		x = &PhoneActionAck{}
	}

	return x
}

func (p *poolPhoneActionAck) Put(x *PhoneActionAck) {
	if x == nil {
		return
	}

	p.pool.Put(x)
}

var PoolPhoneActionAck = poolPhoneActionAck{}

func (x *PhoneActionAck) DeepCopy(z *PhoneActionAck) {
}

func (x *PhoneActionAck) Clone() *PhoneActionAck {
	z := &PhoneActionAck{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionAck) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionAck) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionAck) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionAck) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionAck) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionAck, x)
}

const C_PhoneActionParticipantAdded int64 = 2638615078

type poolPhoneActionParticipantAdded struct {
	pool sync.Pool
}

func (p *poolPhoneActionParticipantAdded) Get() *PhoneActionParticipantAdded {
	x, ok := p.pool.Get().(*PhoneActionParticipantAdded)
	if !ok {
		x = &PhoneActionParticipantAdded{}
	}

	return x
}

func (p *poolPhoneActionParticipantAdded) Put(x *PhoneActionParticipantAdded) {
	if x == nil {
		return
	}

	for _, z := range x.Participants {
		PoolPhoneParticipant.Put(z)
	}
	x.Participants = x.Participants[:0]

	p.pool.Put(x)
}

var PoolPhoneActionParticipantAdded = poolPhoneActionParticipantAdded{}

func (x *PhoneActionParticipantAdded) DeepCopy(z *PhoneActionParticipantAdded) {
	for idx := range x.Participants {
		if x.Participants[idx] == nil {
			continue
		}
		xx := PoolPhoneParticipant.Get()
		x.Participants[idx].DeepCopy(xx)
		z.Participants = append(z.Participants, xx)
	}
}

func (x *PhoneActionParticipantAdded) Clone() *PhoneActionParticipantAdded {
	z := &PhoneActionParticipantAdded{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionParticipantAdded) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionParticipantAdded) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionParticipantAdded) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionParticipantAdded) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionParticipantAdded) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionParticipantAdded, x)
}

const C_PhoneActionParticipantRemoved int64 = 3280922507

type poolPhoneActionParticipantRemoved struct {
	pool sync.Pool
}

func (p *poolPhoneActionParticipantRemoved) Get() *PhoneActionParticipantRemoved {
	x, ok := p.pool.Get().(*PhoneActionParticipantRemoved)
	if !ok {
		x = &PhoneActionParticipantRemoved{}
	}

	return x
}

func (p *poolPhoneActionParticipantRemoved) Put(x *PhoneActionParticipantRemoved) {
	if x == nil {
		return
	}

	x.UserIDs = x.UserIDs[:0]
	x.Timeout = false

	p.pool.Put(x)
}

var PoolPhoneActionParticipantRemoved = poolPhoneActionParticipantRemoved{}

func (x *PhoneActionParticipantRemoved) DeepCopy(z *PhoneActionParticipantRemoved) {
	z.UserIDs = append(z.UserIDs[:0], x.UserIDs...)
	z.Timeout = x.Timeout
}

func (x *PhoneActionParticipantRemoved) Clone() *PhoneActionParticipantRemoved {
	z := &PhoneActionParticipantRemoved{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionParticipantRemoved) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionParticipantRemoved) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionParticipantRemoved) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionParticipantRemoved) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionParticipantRemoved) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionParticipantRemoved, x)
}

const C_PhoneActionJoinRequested int64 = 656125601

type poolPhoneActionJoinRequested struct {
	pool sync.Pool
}

func (p *poolPhoneActionJoinRequested) Get() *PhoneActionJoinRequested {
	x, ok := p.pool.Get().(*PhoneActionJoinRequested)
	if !ok {
		x = &PhoneActionJoinRequested{}
	}

	return x
}

func (p *poolPhoneActionJoinRequested) Put(x *PhoneActionJoinRequested) {
	if x == nil {
		return
	}

	x.UserIDs = x.UserIDs[:0]

	p.pool.Put(x)
}

var PoolPhoneActionJoinRequested = poolPhoneActionJoinRequested{}

func (x *PhoneActionJoinRequested) DeepCopy(z *PhoneActionJoinRequested) {
	z.UserIDs = append(z.UserIDs[:0], x.UserIDs...)
}

func (x *PhoneActionJoinRequested) Clone() *PhoneActionJoinRequested {
	z := &PhoneActionJoinRequested{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionJoinRequested) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionJoinRequested) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionJoinRequested) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionJoinRequested) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionJoinRequested) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionJoinRequested, x)
}

const C_PhoneActionAdminUpdated int64 = 1804765545

type poolPhoneActionAdminUpdated struct {
	pool sync.Pool
}

func (p *poolPhoneActionAdminUpdated) Get() *PhoneActionAdminUpdated {
	x, ok := p.pool.Get().(*PhoneActionAdminUpdated)
	if !ok {
		x = &PhoneActionAdminUpdated{}
	}

	return x
}

func (p *poolPhoneActionAdminUpdated) Put(x *PhoneActionAdminUpdated) {
	if x == nil {
		return
	}

	x.UserID = 0
	x.Admin = false

	p.pool.Put(x)
}

var PoolPhoneActionAdminUpdated = poolPhoneActionAdminUpdated{}

func (x *PhoneActionAdminUpdated) DeepCopy(z *PhoneActionAdminUpdated) {
	z.UserID = x.UserID
	z.Admin = x.Admin
}

func (x *PhoneActionAdminUpdated) Clone() *PhoneActionAdminUpdated {
	z := &PhoneActionAdminUpdated{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionAdminUpdated) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionAdminUpdated) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionAdminUpdated) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionAdminUpdated) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionAdminUpdated) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionAdminUpdated, x)
}

const C_PhoneActionScreenShare int64 = 813039088

type poolPhoneActionScreenShare struct {
	pool sync.Pool
}

func (p *poolPhoneActionScreenShare) Get() *PhoneActionScreenShare {
	x, ok := p.pool.Get().(*PhoneActionScreenShare)
	if !ok {
		x = &PhoneActionScreenShare{}
	}

	return x
}

func (p *poolPhoneActionScreenShare) Put(x *PhoneActionScreenShare) {
	if x == nil {
		return
	}

	x.Enable = false
	x.TrackIDs = x.TrackIDs[:0]

	p.pool.Put(x)
}

var PoolPhoneActionScreenShare = poolPhoneActionScreenShare{}

func (x *PhoneActionScreenShare) DeepCopy(z *PhoneActionScreenShare) {
	z.Enable = x.Enable
	z.TrackIDs = append(z.TrackIDs[:0], x.TrackIDs...)
}

func (x *PhoneActionScreenShare) Clone() *PhoneActionScreenShare {
	z := &PhoneActionScreenShare{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionScreenShare) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionScreenShare) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionScreenShare) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionScreenShare) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionScreenShare) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionScreenShare, x)
}

const C_PhoneActionPicked int64 = 2478763318

type poolPhoneActionPicked struct {
	pool sync.Pool
}

func (p *poolPhoneActionPicked) Get() *PhoneActionPicked {
	x, ok := p.pool.Get().(*PhoneActionPicked)
	if !ok {
		x = &PhoneActionPicked{}
	}

	return x
}

func (p *poolPhoneActionPicked) Put(x *PhoneActionPicked) {
	if x == nil {
		return
	}

	x.AuthID = 0

	p.pool.Put(x)
}

var PoolPhoneActionPicked = poolPhoneActionPicked{}

func (x *PhoneActionPicked) DeepCopy(z *PhoneActionPicked) {
	z.AuthID = x.AuthID
}

func (x *PhoneActionPicked) Clone() *PhoneActionPicked {
	z := &PhoneActionPicked{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionPicked) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionPicked) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionPicked) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionPicked) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionPicked) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionPicked, x)
}

const C_PhoneActionRestarted int64 = 1979061868

type poolPhoneActionRestarted struct {
	pool sync.Pool
}

func (p *poolPhoneActionRestarted) Get() *PhoneActionRestarted {
	x, ok := p.pool.Get().(*PhoneActionRestarted)
	if !ok {
		x = &PhoneActionRestarted{}
	}

	return x
}

func (p *poolPhoneActionRestarted) Put(x *PhoneActionRestarted) {
	if x == nil {
		return
	}

	x.Sender = false

	p.pool.Put(x)
}

var PoolPhoneActionRestarted = poolPhoneActionRestarted{}

func (x *PhoneActionRestarted) DeepCopy(z *PhoneActionRestarted) {
	z.Sender = x.Sender
}

func (x *PhoneActionRestarted) Clone() *PhoneActionRestarted {
	z := &PhoneActionRestarted{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionRestarted) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionRestarted) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionRestarted) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionRestarted) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionRestarted) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionRestarted, x)
}

const C_PhoneActionMediaSettingsUpdated int64 = 2310335221

type poolPhoneActionMediaSettingsUpdated struct {
	pool sync.Pool
}

func (p *poolPhoneActionMediaSettingsUpdated) Get() *PhoneActionMediaSettingsUpdated {
	x, ok := p.pool.Get().(*PhoneActionMediaSettingsUpdated)
	if !ok {
		x = &PhoneActionMediaSettingsUpdated{}
	}

	return x
}

func (p *poolPhoneActionMediaSettingsUpdated) Put(x *PhoneActionMediaSettingsUpdated) {
	if x == nil {
		return
	}

	x.Video = false
	x.Audio = false
	x.ScreenShare = false

	p.pool.Put(x)
}

var PoolPhoneActionMediaSettingsUpdated = poolPhoneActionMediaSettingsUpdated{}

func (x *PhoneActionMediaSettingsUpdated) DeepCopy(z *PhoneActionMediaSettingsUpdated) {
	z.Video = x.Video
	z.Audio = x.Audio
	z.ScreenShare = x.ScreenShare
}

func (x *PhoneActionMediaSettingsUpdated) Clone() *PhoneActionMediaSettingsUpdated {
	z := &PhoneActionMediaSettingsUpdated{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionMediaSettingsUpdated) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionMediaSettingsUpdated) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionMediaSettingsUpdated) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionMediaSettingsUpdated) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionMediaSettingsUpdated) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionMediaSettingsUpdated, x)
}

const C_PhoneActionReactionSet int64 = 2047679815

type poolPhoneActionReactionSet struct {
	pool sync.Pool
}

func (p *poolPhoneActionReactionSet) Get() *PhoneActionReactionSet {
	x, ok := p.pool.Get().(*PhoneActionReactionSet)
	if !ok {
		x = &PhoneActionReactionSet{}
	}

	return x
}

func (p *poolPhoneActionReactionSet) Put(x *PhoneActionReactionSet) {
	if x == nil {
		return
	}

	x.Reaction = ""

	p.pool.Put(x)
}

var PoolPhoneActionReactionSet = poolPhoneActionReactionSet{}

func (x *PhoneActionReactionSet) DeepCopy(z *PhoneActionReactionSet) {
	z.Reaction = x.Reaction
}

func (x *PhoneActionReactionSet) Clone() *PhoneActionReactionSet {
	z := &PhoneActionReactionSet{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionReactionSet) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionReactionSet) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionReactionSet) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionReactionSet) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionReactionSet) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionReactionSet, x)
}

const C_PhoneActionSDPOffer int64 = 931453435

type poolPhoneActionSDPOffer struct {
	pool sync.Pool
}

func (p *poolPhoneActionSDPOffer) Get() *PhoneActionSDPOffer {
	x, ok := p.pool.Get().(*PhoneActionSDPOffer)
	if !ok {
		x = &PhoneActionSDPOffer{}
	}

	return x
}

func (p *poolPhoneActionSDPOffer) Put(x *PhoneActionSDPOffer) {
	if x == nil {
		return
	}

	x.SDP = ""
	x.Type = ""

	p.pool.Put(x)
}

var PoolPhoneActionSDPOffer = poolPhoneActionSDPOffer{}

func (x *PhoneActionSDPOffer) DeepCopy(z *PhoneActionSDPOffer) {
	z.SDP = x.SDP
	z.Type = x.Type
}

func (x *PhoneActionSDPOffer) Clone() *PhoneActionSDPOffer {
	z := &PhoneActionSDPOffer{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionSDPOffer) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionSDPOffer) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionSDPOffer) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionSDPOffer) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionSDPOffer) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionSDPOffer, x)
}

const C_PhoneActionSDPAnswer int64 = 835530308

type poolPhoneActionSDPAnswer struct {
	pool sync.Pool
}

func (p *poolPhoneActionSDPAnswer) Get() *PhoneActionSDPAnswer {
	x, ok := p.pool.Get().(*PhoneActionSDPAnswer)
	if !ok {
		x = &PhoneActionSDPAnswer{}
	}

	return x
}

func (p *poolPhoneActionSDPAnswer) Put(x *PhoneActionSDPAnswer) {
	if x == nil {
		return
	}

	x.SDP = ""
	x.Type = ""

	p.pool.Put(x)
}

var PoolPhoneActionSDPAnswer = poolPhoneActionSDPAnswer{}

func (x *PhoneActionSDPAnswer) DeepCopy(z *PhoneActionSDPAnswer) {
	z.SDP = x.SDP
	z.Type = x.Type
}

func (x *PhoneActionSDPAnswer) Clone() *PhoneActionSDPAnswer {
	z := &PhoneActionSDPAnswer{}
	x.DeepCopy(z)
	return z
}

func (x *PhoneActionSDPAnswer) Unmarshal(b []byte) error {
	return proto.UnmarshalOptions{Merge: true}.Unmarshal(b, x)
}

func (x *PhoneActionSDPAnswer) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

func (x *PhoneActionSDPAnswer) UnmarshalJSON(b []byte) error {
	return protojson.Unmarshal(b, x)
}

func (x *PhoneActionSDPAnswer) MarshalJSON() ([]byte, error) {
	return protojson.Marshal(x)
}

func (x *PhoneActionSDPAnswer) PushToContext(ctx *edge.RequestCtx) {
	ctx.PushMessage(C_PhoneActionSDPAnswer, x)
}

func init() {
	registry.RegisterConstructor(2975617068, "PhoneInitCall")
	registry.RegisterConstructor(907942641, "PhoneRequestCall")
	registry.RegisterConstructor(4133092858, "PhoneAcceptCall")
	registry.RegisterConstructor(2712700137, "PhoneDiscardCall")
	registry.RegisterConstructor(432049159, "PhoneGetCall")
	registry.RegisterConstructor(3019166552, "PhoneJoinCall")
	registry.RegisterConstructor(2867411100, "PhoneAddParticipant")
	registry.RegisterConstructor(188662172, "PhoneRemoveParticipant")
	registry.RegisterConstructor(3924781570, "PhoneGetParticipants")
	registry.RegisterConstructor(1976202226, "PhoneUpdateCall")
	registry.RegisterConstructor(2215486159, "PhoneRateCall")
	registry.RegisterConstructor(407776572, "PhoneGetHistory")
	registry.RegisterConstructor(2528259211, "PhoneDeleteHistory")
	registry.RegisterConstructor(4147150312, "PhoneCallRecord")
	registry.RegisterConstructor(1227520020, "PhoneCallsMany")
	registry.RegisterConstructor(442877873, "PhoneUpdateAdmin")
	registry.RegisterConstructor(3296664529, "PhoneCall")
	registry.RegisterConstructor(3464876187, "PhoneInit")
	registry.RegisterConstructor(2567653219, "PhoneParticipants")
	registry.RegisterConstructor(4291892363, "IceServer")
	registry.RegisterConstructor(226273622, "PhoneParticipant")
	registry.RegisterConstructor(545454774, "PhoneParticipantSDP")
	registry.RegisterConstructor(1073285997, "PhoneActionCallEmpty")
	registry.RegisterConstructor(2493210645, "PhoneActionAccepted")
	registry.RegisterConstructor(1678316869, "PhoneActionRequested")
	registry.RegisterConstructor(3634710697, "PhoneActionCallWaiting")
	registry.RegisterConstructor(4285966731, "PhoneActionDiscarded")
	registry.RegisterConstructor(1618781621, "PhoneActionIceExchange")
	registry.RegisterConstructor(1221076803, "PhoneActionAck")
	registry.RegisterConstructor(2638615078, "PhoneActionParticipantAdded")
	registry.RegisterConstructor(3280922507, "PhoneActionParticipantRemoved")
	registry.RegisterConstructor(656125601, "PhoneActionJoinRequested")
	registry.RegisterConstructor(1804765545, "PhoneActionAdminUpdated")
	registry.RegisterConstructor(813039088, "PhoneActionScreenShare")
	registry.RegisterConstructor(2478763318, "PhoneActionPicked")
	registry.RegisterConstructor(1979061868, "PhoneActionRestarted")
	registry.RegisterConstructor(2310335221, "PhoneActionMediaSettingsUpdated")
	registry.RegisterConstructor(2047679815, "PhoneActionReactionSet")
	registry.RegisterConstructor(931453435, "PhoneActionSDPOffer")
	registry.RegisterConstructor(835530308, "PhoneActionSDPAnswer")
}

var _ = bytes.MinRead
