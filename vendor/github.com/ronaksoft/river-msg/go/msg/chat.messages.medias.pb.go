// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.2
// source: chat.messages.medias.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Document Type
type DocumentType int32

const (
	DocumentType_DocumentTypeUnknown   DocumentType = 0
	DocumentType_DocumentTypePhoto     DocumentType = 1
	DocumentType_DocumentTypeVoice     DocumentType = 2
	DocumentType_DocumentTypeVideo     DocumentType = 3
	DocumentType_DocumentTypeWebPage   DocumentType = 4
	DocumentType_DocumentTypeReserved1 DocumentType = 5
	DocumentType_DocumentTypeReserved2 DocumentType = 6
	DocumentType_DocumentTypeReserved3 DocumentType = 7
	DocumentType_DocumentTypeReserved4 DocumentType = 8
)

// Enum value maps for DocumentType.
var (
	DocumentType_name = map[int32]string{
		0: "DocumentTypeUnknown",
		1: "DocumentTypePhoto",
		2: "DocumentTypeVoice",
		3: "DocumentTypeVideo",
		4: "DocumentTypeWebPage",
		5: "DocumentTypeReserved1",
		6: "DocumentTypeReserved2",
		7: "DocumentTypeReserved3",
		8: "DocumentTypeReserved4",
	}
	DocumentType_value = map[string]int32{
		"DocumentTypeUnknown":   0,
		"DocumentTypePhoto":     1,
		"DocumentTypeVoice":     2,
		"DocumentTypeVideo":     3,
		"DocumentTypeWebPage":   4,
		"DocumentTypeReserved1": 5,
		"DocumentTypeReserved2": 6,
		"DocumentTypeReserved3": 7,
		"DocumentTypeReserved4": 8,
	}
)

func (x DocumentType) Enum() *DocumentType {
	p := new(DocumentType)
	*p = x
	return p
}

func (x DocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_messages_medias_proto_enumTypes[0].Descriptor()
}

func (DocumentType) Type() protoreflect.EnumType {
	return &file_chat_messages_medias_proto_enumTypes[0]
}

func (x DocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentType.Descriptor instead.
func (DocumentType) EnumDescriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{0}
}

// DocumentAttributeType
type DocumentAttributeType int32

const (
	DocumentAttributeType_AttributeTypeNone      DocumentAttributeType = 0
	DocumentAttributeType_AttributeTypeAudio     DocumentAttributeType = 1
	DocumentAttributeType_AttributeTypeVideo     DocumentAttributeType = 2
	DocumentAttributeType_AttributeTypePhoto     DocumentAttributeType = 3
	DocumentAttributeType_AttributeTypeFile      DocumentAttributeType = 4
	DocumentAttributeType_AttributeTypeAnimated  DocumentAttributeType = 5
	DocumentAttributeType_AttributeTypeVoiceCall DocumentAttributeType = 6
	DocumentAttributeType_AttributeReserved2     DocumentAttributeType = 7
	DocumentAttributeType_AttributeReserved3     DocumentAttributeType = 8
	DocumentAttributeType_AttributeReserved4     DocumentAttributeType = 9
)

// Enum value maps for DocumentAttributeType.
var (
	DocumentAttributeType_name = map[int32]string{
		0: "AttributeTypeNone",
		1: "AttributeTypeAudio",
		2: "AttributeTypeVideo",
		3: "AttributeTypePhoto",
		4: "AttributeTypeFile",
		5: "AttributeTypeAnimated",
		6: "AttributeTypeVoiceCall",
		7: "AttributeReserved2",
		8: "AttributeReserved3",
		9: "AttributeReserved4",
	}
	DocumentAttributeType_value = map[string]int32{
		"AttributeTypeNone":      0,
		"AttributeTypeAudio":     1,
		"AttributeTypeVideo":     2,
		"AttributeTypePhoto":     3,
		"AttributeTypeFile":      4,
		"AttributeTypeAnimated":  5,
		"AttributeTypeVoiceCall": 6,
		"AttributeReserved2":     7,
		"AttributeReserved3":     8,
		"AttributeReserved4":     9,
	}
)

func (x DocumentAttributeType) Enum() *DocumentAttributeType {
	p := new(DocumentAttributeType)
	*p = x
	return p
}

func (x DocumentAttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentAttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_messages_medias_proto_enumTypes[1].Descriptor()
}

func (DocumentAttributeType) Type() protoreflect.EnumType {
	return &file_chat_messages_medias_proto_enumTypes[1]
}

func (x DocumentAttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentAttributeType.Descriptor instead.
func (DocumentAttributeType) EnumDescriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{1}
}

type DocumentAttributeVoiceCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxCallAttempts  uint32 `protobuf:"varint,1,opt,name=MaxCallAttempts,proto3" json:"MaxCallAttempts,omitempty"`
	CallAttemptSleep uint32 `protobuf:"varint,2,opt,name=CallAttemptSleep,proto3" json:"CallAttemptSleep,omitempty"` // In Seconds
}

func (x *DocumentAttributeVoiceCall) Reset() {
	*x = DocumentAttributeVoiceCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttributeVoiceCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttributeVoiceCall) ProtoMessage() {}

func (x *DocumentAttributeVoiceCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttributeVoiceCall.ProtoReflect.Descriptor instead.
func (*DocumentAttributeVoiceCall) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{0}
}

func (x *DocumentAttributeVoiceCall) GetMaxCallAttempts() uint32 {
	if x != nil {
		return x.MaxCallAttempts
	}
	return 0
}

func (x *DocumentAttributeVoiceCall) GetCallAttemptSleep() uint32 {
	if x != nil {
		return x.CallAttemptSleep
	}
	return 0
}

// DocumentAttributeAudio
type DocumentAttributeAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voice     bool   `protobuf:"varint,1,opt,name=Voice,proto3" json:"Voice,omitempty"`
	Duration  uint32 `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Performer string `protobuf:"bytes,4,opt,name=Performer,proto3" json:"Performer,omitempty"`
	Album     string `protobuf:"bytes,5,opt,name=Album,proto3" json:"Album,omitempty"`
	Waveform  []byte `protobuf:"bytes,6,opt,name=Waveform,proto3" json:"Waveform,omitempty"`
}

func (x *DocumentAttributeAudio) Reset() {
	*x = DocumentAttributeAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttributeAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttributeAudio) ProtoMessage() {}

func (x *DocumentAttributeAudio) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttributeAudio.ProtoReflect.Descriptor instead.
func (*DocumentAttributeAudio) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{1}
}

func (x *DocumentAttributeAudio) GetVoice() bool {
	if x != nil {
		return x.Voice
	}
	return false
}

func (x *DocumentAttributeAudio) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DocumentAttributeAudio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentAttributeAudio) GetPerformer() string {
	if x != nil {
		return x.Performer
	}
	return ""
}

func (x *DocumentAttributeAudio) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *DocumentAttributeAudio) GetWaveform() []byte {
	if x != nil {
		return x.Waveform
	}
	return nil
}

// DocumentAttributeVideo
type DocumentAttributeVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width    uint32 `protobuf:"varint,1,opt,name=Width,proto3" json:"Width,omitempty"`
	Height   uint32 `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	Duration uint32 `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Round    bool   `protobuf:"varint,4,opt,name=Round,proto3" json:"Round,omitempty"`
}

func (x *DocumentAttributeVideo) Reset() {
	*x = DocumentAttributeVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttributeVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttributeVideo) ProtoMessage() {}

func (x *DocumentAttributeVideo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttributeVideo.ProtoReflect.Descriptor instead.
func (*DocumentAttributeVideo) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{2}
}

func (x *DocumentAttributeVideo) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DocumentAttributeVideo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DocumentAttributeVideo) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DocumentAttributeVideo) GetRound() bool {
	if x != nil {
		return x.Round
	}
	return false
}

// DocumentAttributePhoto
type DocumentAttributePhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint32 `protobuf:"varint,1,opt,name=Width,proto3" json:"Width,omitempty"`
	Height uint32 `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *DocumentAttributePhoto) Reset() {
	*x = DocumentAttributePhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttributePhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttributePhoto) ProtoMessage() {}

func (x *DocumentAttributePhoto) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttributePhoto.ProtoReflect.Descriptor instead.
func (*DocumentAttributePhoto) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{3}
}

func (x *DocumentAttributePhoto) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DocumentAttributePhoto) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// DocumentAttributeFile
type DocumentAttributeFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=Filename,proto3" json:"Filename,omitempty"`
}

func (x *DocumentAttributeFile) Reset() {
	*x = DocumentAttributeFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttributeFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttributeFile) ProtoMessage() {}

func (x *DocumentAttributeFile) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttributeFile.ProtoReflect.Descriptor instead.
func (*DocumentAttributeFile) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentAttributeFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// DocumentAttributeAnimated
type DocumentAttributeAnimated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sound bool `protobuf:"varint,1,opt,name=Sound,proto3" json:"Sound,omitempty"`
}

func (x *DocumentAttributeAnimated) Reset() {
	*x = DocumentAttributeAnimated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttributeAnimated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttributeAnimated) ProtoMessage() {}

func (x *DocumentAttributeAnimated) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttributeAnimated.ProtoReflect.Descriptor instead.
func (*DocumentAttributeAnimated) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{5}
}

func (x *DocumentAttributeAnimated) GetSound() bool {
	if x != nil {
		return x.Sound
	}
	return false
}

// DocumentAttribute
type DocumentAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DocumentAttributeType `protobuf:"varint,1,opt,name=Type,proto3,enum=msg.DocumentAttributeType" json:"Type,omitempty"`
	Data []byte                `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DocumentAttribute) Reset() {
	*x = DocumentAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAttribute) ProtoMessage() {}

func (x *DocumentAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAttribute.ProtoReflect.Descriptor instead.
func (*DocumentAttribute) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{6}
}

func (x *DocumentAttribute) GetType() DocumentAttributeType {
	if x != nil {
		return x.Type
	}
	return DocumentAttributeType_AttributeTypeNone
}

func (x *DocumentAttribute) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Document
type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AccessHash    uint64               `protobuf:"fixed64,2,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
	Date          int64                `protobuf:"varint,3,opt,name=Date,proto3" json:"Date,omitempty"`
	MimeType      string               `protobuf:"bytes,4,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	FileSize      int32                `protobuf:"varint,5,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	Version       int32                `protobuf:"varint,6,opt,name=Version,proto3" json:"Version,omitempty"`
	ClusterID     int32                `protobuf:"varint,7,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	Attributes    []*DocumentAttribute `protobuf:"bytes,8,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	Thumbnail     *FileLocation        `protobuf:"bytes,9,opt,name=Thumbnail,proto3" json:"Thumbnail,omitempty"`
	MD5Checksum   string               `protobuf:"bytes,10,opt,name=MD5Checksum,proto3" json:"MD5Checksum,omitempty"`
	TinyThumbnail []byte               `protobuf:"bytes,11,opt,name=TinyThumbnail,proto3" json:"TinyThumbnail,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{7}
}

func (x *Document) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Document) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *Document) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Document) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Document) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Document) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Document) GetClusterID() int32 {
	if x != nil {
		return x.ClusterID
	}
	return 0
}

func (x *Document) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Document) GetThumbnail() *FileLocation {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *Document) GetMD5Checksum() string {
	if x != nil {
		return x.MD5Checksum
	}
	return ""
}

func (x *Document) GetTinyThumbnail() []byte {
	if x != nil {
		return x.TinyThumbnail
	}
	return nil
}

// InputMediaWebDocument
type InputMediaWebDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string               `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
	DocSize    int32                `protobuf:"varint,2,opt,name=DocSize,proto3" json:"DocSize,omitempty"`
	MimeType   string               `protobuf:"bytes,3,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	Attributes []*DocumentAttribute `protobuf:"bytes,4,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
}

func (x *InputMediaWebDocument) Reset() {
	*x = InputMediaWebDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaWebDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaWebDocument) ProtoMessage() {}

func (x *InputMediaWebDocument) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaWebDocument.ProtoReflect.Descriptor instead.
func (*InputMediaWebDocument) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{8}
}

func (x *InputMediaWebDocument) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InputMediaWebDocument) GetDocSize() int32 {
	if x != nil {
		return x.DocSize
	}
	return 0
}

func (x *InputMediaWebDocument) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *InputMediaWebDocument) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// MediaWebDocument
type MediaWebDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string               `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
	DocSize    int32                `protobuf:"varint,2,opt,name=DocSize,proto3" json:"DocSize,omitempty"`
	MimeType   string               `protobuf:"bytes,3,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	Attributes []*DocumentAttribute `protobuf:"bytes,4,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	AccessHash uint64               `protobuf:"fixed64,5,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
}

func (x *MediaWebDocument) Reset() {
	*x = MediaWebDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaWebDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaWebDocument) ProtoMessage() {}

func (x *MediaWebDocument) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaWebDocument.ProtoReflect.Descriptor instead.
func (*MediaWebDocument) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{9}
}

func (x *MediaWebDocument) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaWebDocument) GetDocSize() int32 {
	if x != nil {
		return x.DocSize
	}
	return 0
}

func (x *MediaWebDocument) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MediaWebDocument) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *MediaWebDocument) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// MediaWebPage
type MediaWebPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MediaWebPage) Reset() {
	*x = MediaWebPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaWebPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaWebPage) ProtoMessage() {}

func (x *MediaWebPage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaWebPage.ProtoReflect.Descriptor instead.
func (*MediaWebPage) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{10}
}

// InputMediaContact
type InputMediaContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=Phone,proto3" json:"Phone,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	VCard     string `protobuf:"bytes,4,opt,name=VCard,proto3" json:"VCard,omitempty"`
}

func (x *InputMediaContact) Reset() {
	*x = InputMediaContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaContact) ProtoMessage() {}

func (x *InputMediaContact) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaContact.ProtoReflect.Descriptor instead.
func (*InputMediaContact) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{11}
}

func (x *InputMediaContact) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InputMediaContact) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *InputMediaContact) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *InputMediaContact) GetVCard() string {
	if x != nil {
		return x.VCard
	}
	return ""
}

// MediaContact
type MediaContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=Phone,proto3" json:"Phone,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	VCard     string `protobuf:"bytes,4,opt,name=VCard,proto3" json:"VCard,omitempty"`
}

func (x *MediaContact) Reset() {
	*x = MediaContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaContact) ProtoMessage() {}

func (x *MediaContact) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaContact.ProtoReflect.Descriptor instead.
func (*MediaContact) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{12}
}

func (x *MediaContact) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *MediaContact) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *MediaContact) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *MediaContact) GetVCard() string {
	if x != nil {
		return x.VCard
	}
	return ""
}

// InputMediaUploadedDocument
type InputMediaUploadedDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File          *InputFile           `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	Thumbnail     *InputFile           `protobuf:"bytes,2,opt,name=Thumbnail,proto3" json:"Thumbnail,omitempty"`
	MimeType      string               `protobuf:"bytes,3,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	Caption       string               `protobuf:"bytes,4,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Stickers      []*InputDocument     `protobuf:"bytes,5,rep,name=Stickers,proto3" json:"Stickers,omitempty"`
	Attributes    []*DocumentAttribute `protobuf:"bytes,6,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	Entities      []*MessageEntity     `protobuf:"bytes,7,rep,name=Entities,proto3" json:"Entities,omitempty"`
	TinyThumbnail []byte               `protobuf:"bytes,8,opt,name=TinyThumbnail,proto3" json:"TinyThumbnail,omitempty"`
}

func (x *InputMediaUploadedDocument) Reset() {
	*x = InputMediaUploadedDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaUploadedDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaUploadedDocument) ProtoMessage() {}

func (x *InputMediaUploadedDocument) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaUploadedDocument.ProtoReflect.Descriptor instead.
func (*InputMediaUploadedDocument) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{13}
}

func (x *InputMediaUploadedDocument) GetFile() *InputFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *InputMediaUploadedDocument) GetThumbnail() *InputFile {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *InputMediaUploadedDocument) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *InputMediaUploadedDocument) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *InputMediaUploadedDocument) GetStickers() []*InputDocument {
	if x != nil {
		return x.Stickers
	}
	return nil
}

func (x *InputMediaUploadedDocument) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *InputMediaUploadedDocument) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *InputMediaUploadedDocument) GetTinyThumbnail() []byte {
	if x != nil {
		return x.TinyThumbnail
	}
	return nil
}

// InputMediaDocument
type InputMediaDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caption       string               `protobuf:"bytes,1,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Document      *InputDocument       `protobuf:"bytes,2,opt,name=Document,proto3" json:"Document,omitempty"`
	Entities      []*MessageEntity     `protobuf:"bytes,3,rep,name=Entities,proto3" json:"Entities,omitempty"`
	Thumbnail     *InputFile           `protobuf:"bytes,4,opt,name=Thumbnail,proto3" json:"Thumbnail,omitempty"`
	Attributes    []*DocumentAttribute `protobuf:"bytes,5,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	TinyThumbnail []byte               `protobuf:"bytes,6,opt,name=TinyThumbnail,proto3" json:"TinyThumbnail,omitempty"`
}

func (x *InputMediaDocument) Reset() {
	*x = InputMediaDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaDocument) ProtoMessage() {}

func (x *InputMediaDocument) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaDocument.ProtoReflect.Descriptor instead.
func (*InputMediaDocument) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{14}
}

func (x *InputMediaDocument) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *InputMediaDocument) GetDocument() *InputDocument {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *InputMediaDocument) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *InputMediaDocument) GetThumbnail() *InputFile {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *InputMediaDocument) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *InputMediaDocument) GetTinyThumbnail() []byte {
	if x != nil {
		return x.TinyThumbnail
	}
	return nil
}

// InputMediaMessageDocument
type InputMediaMessageDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *InputPeer       `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64            `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Caption   string           `protobuf:"bytes,3,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Entities  []*MessageEntity `protobuf:"bytes,4,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *InputMediaMessageDocument) Reset() {
	*x = InputMediaMessageDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaMessageDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaMessageDocument) ProtoMessage() {}

func (x *InputMediaMessageDocument) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaMessageDocument.ProtoReflect.Descriptor instead.
func (*InputMediaMessageDocument) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{15}
}

func (x *InputMediaMessageDocument) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *InputMediaMessageDocument) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *InputMediaMessageDocument) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *InputMediaMessageDocument) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// MediaDocument
type MediaDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caption      string           `protobuf:"bytes,1,opt,name=Caption,proto3" json:"Caption,omitempty"`
	TTLinSeconds int32            `protobuf:"varint,2,opt,name=TTLinSeconds,proto3" json:"TTLinSeconds,omitempty"` // Seconds
	Doc          *Document        `protobuf:"bytes,3,opt,name=Doc,proto3" json:"Doc,omitempty"`
	Entities     []*MessageEntity `protobuf:"bytes,4,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *MediaDocument) Reset() {
	*x = MediaDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaDocument) ProtoMessage() {}

func (x *MediaDocument) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaDocument.ProtoReflect.Descriptor instead.
func (*MediaDocument) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{16}
}

func (x *MediaDocument) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *MediaDocument) GetTTLinSeconds() int32 {
	if x != nil {
		return x.TTLinSeconds
	}
	return 0
}

func (x *MediaDocument) GetDoc() *Document {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *MediaDocument) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// InputMediaGeoLocation
type InputMediaGeoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat      float32          `protobuf:"fixed32,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Long     float32          `protobuf:"fixed32,2,opt,name=Long,proto3" json:"Long,omitempty"`
	Caption  string           `protobuf:"bytes,3,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Entities []*MessageEntity `protobuf:"bytes,4,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *InputMediaGeoLocation) Reset() {
	*x = InputMediaGeoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaGeoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaGeoLocation) ProtoMessage() {}

func (x *InputMediaGeoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaGeoLocation.ProtoReflect.Descriptor instead.
func (*InputMediaGeoLocation) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{17}
}

func (x *InputMediaGeoLocation) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *InputMediaGeoLocation) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *InputMediaGeoLocation) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *InputMediaGeoLocation) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// MediaGeoLocation
type MediaGeoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat      float32          `protobuf:"fixed32,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Long     float32          `protobuf:"fixed32,2,opt,name=Long,proto3" json:"Long,omitempty"`
	Caption  string           `protobuf:"bytes,3,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Entities []*MessageEntity `protobuf:"bytes,4,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *MediaGeoLocation) Reset() {
	*x = MediaGeoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaGeoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaGeoLocation) ProtoMessage() {}

func (x *MediaGeoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaGeoLocation.ProtoReflect.Descriptor instead.
func (*MediaGeoLocation) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{18}
}

func (x *MediaGeoLocation) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *MediaGeoLocation) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *MediaGeoLocation) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *MediaGeoLocation) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// InputMediaPoll
type InputMediaPoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Poll *MediaPoll `protobuf:"bytes,1,opt,name=Poll,proto3" json:"Poll,omitempty"`
}

func (x *InputMediaPoll) Reset() {
	*x = InputMediaPoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMediaPoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMediaPoll) ProtoMessage() {}

func (x *InputMediaPoll) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMediaPoll.ProtoReflect.Descriptor instead.
func (*InputMediaPoll) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{19}
}

func (x *InputMediaPoll) GetPoll() *MediaPoll {
	if x != nil {
		return x.Poll
	}
	return nil
}

// MediaPoll
type MediaPoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64         `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Closed       bool          `protobuf:"varint,2,opt,name=Closed,proto3" json:"Closed,omitempty"`
	PublicVoters bool          `protobuf:"varint,3,opt,name=PublicVoters,proto3" json:"PublicVoters,omitempty"`
	MultiChoice  bool          `protobuf:"varint,4,opt,name=MultiChoice,proto3" json:"MultiChoice,omitempty"`
	Quiz         bool          `protobuf:"varint,5,opt,name=Quiz,proto3" json:"Quiz,omitempty"`
	Question     string        `protobuf:"bytes,6,opt,name=Question,proto3" json:"Question,omitempty"`
	Answers      []*PollAnswer `protobuf:"bytes,7,rep,name=Answers,proto3" json:"Answers,omitempty"`
}

func (x *MediaPoll) Reset() {
	*x = MediaPoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaPoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaPoll) ProtoMessage() {}

func (x *MediaPoll) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaPoll.ProtoReflect.Descriptor instead.
func (*MediaPoll) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{20}
}

func (x *MediaPoll) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *MediaPoll) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *MediaPoll) GetPublicVoters() bool {
	if x != nil {
		return x.PublicVoters
	}
	return false
}

func (x *MediaPoll) GetMultiChoice() bool {
	if x != nil {
		return x.MultiChoice
	}
	return false
}

func (x *MediaPoll) GetQuiz() bool {
	if x != nil {
		return x.Quiz
	}
	return false
}

func (x *MediaPoll) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *MediaPoll) GetAnswers() []*PollAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

// PollAnswer
type PollAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	Option []byte `protobuf:"bytes,2,opt,name=Option,proto3" json:"Option,omitempty"`
}

func (x *PollAnswer) Reset() {
	*x = PollAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollAnswer) ProtoMessage() {}

func (x *PollAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollAnswer.ProtoReflect.Descriptor instead.
func (*PollAnswer) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{21}
}

func (x *PollAnswer) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PollAnswer) GetOption() []byte {
	if x != nil {
		return x.Option
	}
	return nil
}

// PollResults
type PollResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results     []*PollAnswerVoters `protobuf:"bytes,1,rep,name=Results,proto3" json:"Results,omitempty"`
	TotalVoters int64               `protobuf:"varint,2,opt,name=TotalVoters,proto3" json:"TotalVoters,omitempty"`
}

func (x *PollResults) Reset() {
	*x = PollResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollResults) ProtoMessage() {}

func (x *PollResults) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollResults.ProtoReflect.Descriptor instead.
func (*PollResults) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{22}
}

func (x *PollResults) GetResults() []*PollAnswerVoters {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PollResults) GetTotalVoters() int64 {
	if x != nil {
		return x.TotalVoters
	}
	return 0
}

// PollAnswerVoters
type PollAnswerVoters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chosen  bool   `protobuf:"varint,1,opt,name=Chosen,proto3" json:"Chosen,omitempty"`   // Whether User has chosen this answer
	Correct bool   `protobuf:"varint,2,opt,name=Correct,proto3" json:"Correct,omitempty"` // For Quiz Polls
	Option  []byte `protobuf:"bytes,3,opt,name=Option,proto3" json:"Option,omitempty"`
	Voters  int64  `protobuf:"varint,4,opt,name=Voters,proto3" json:"Voters,omitempty"` // Number of voters chosen this option
}

func (x *PollAnswerVoters) Reset() {
	*x = PollAnswerVoters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_medias_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollAnswerVoters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollAnswerVoters) ProtoMessage() {}

func (x *PollAnswerVoters) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_medias_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollAnswerVoters.ProtoReflect.Descriptor instead.
func (*PollAnswerVoters) Descriptor() ([]byte, []int) {
	return file_chat_messages_medias_proto_rawDescGZIP(), []int{23}
}

func (x *PollAnswerVoters) GetChosen() bool {
	if x != nil {
		return x.Chosen
	}
	return false
}

func (x *PollAnswerVoters) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

func (x *PollAnswerVoters) GetOption() []byte {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *PollAnswerVoters) GetVoters() int64 {
	if x != nil {
		return x.Voters
	}
	return 0
}

var File_chat_messages_medias_proto protoreflect.FileDescriptor

var file_chat_messages_medias_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x73,
	0x67, 0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x1a, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x43,
	0x61, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x43,
	0x61, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x22, 0xb0, 0x01, 0x0a, 0x16, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x57, 0x61, 0x76, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x57, 0x61, 0x76, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x78, 0x0a, 0x16, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x33, 0x0a, 0x15,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x31, 0x0a, 0x19, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf7, 0x02,
	0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x4d, 0x44, 0x35, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x44, 0x35, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x54, 0x69, 0x6e, 0x79, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x65, 0x62, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x6f, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x65, 0x62, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x6f, 0x63, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0a,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x57, 0x65, 0x62, 0x50, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x43, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x43, 0x61, 0x72, 0x64, 0x22, 0x74, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x43, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x43, 0x61, 0x72, 0x64, 0x22, 0xe2, 0x02, 0x0a, 0x1a,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c,
	0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69,
	0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x54, 0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x22, 0x9a, 0x02, 0x0a, 0x12, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12,
	0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6e, 0x79, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x54, 0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0xa7, 0x01,
	0x0a, 0x19, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x54, 0x4c, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x54, 0x4c, 0x69, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x03, 0x44, 0x6f, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x03, 0x44, 0x6f, 0x63, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x4c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x47, 0x65, 0x6f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x6f, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x04, 0x50, 0x6f, 0x6c, 0x6c, 0x22, 0xd4, 0x01,
	0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x75, 0x69,
	0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x1a, 0x0a,
	0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60,
	0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2f, 0x0a,
	0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x56,
	0x6f, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x74, 0x0a, 0x10, 0x50, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x2a, 0xf1, 0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x57, 0x65, 0x62, 0x50, 0x61, 0x67, 0x65, 0x10, 0x04, 0x12, 0x19,
	0x0a, 0x15, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x32, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x10, 0x07, 0x12,
	0x19, 0x0a, 0x15, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x10, 0x08, 0x2a, 0x8c, 0x02, 0x0a, 0x15, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x10,
	0x06, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x10,
	0x08, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x10, 0x09, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b,
	0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_messages_medias_proto_rawDescOnce sync.Once
	file_chat_messages_medias_proto_rawDescData = file_chat_messages_medias_proto_rawDesc
)

func file_chat_messages_medias_proto_rawDescGZIP() []byte {
	file_chat_messages_medias_proto_rawDescOnce.Do(func() {
		file_chat_messages_medias_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_messages_medias_proto_rawDescData)
	})
	return file_chat_messages_medias_proto_rawDescData
}

var file_chat_messages_medias_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_chat_messages_medias_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_chat_messages_medias_proto_goTypes = []interface{}{
	(DocumentType)(0),                  // 0: msg.DocumentType
	(DocumentAttributeType)(0),         // 1: msg.DocumentAttributeType
	(*DocumentAttributeVoiceCall)(nil), // 2: msg.DocumentAttributeVoiceCall
	(*DocumentAttributeAudio)(nil),     // 3: msg.DocumentAttributeAudio
	(*DocumentAttributeVideo)(nil),     // 4: msg.DocumentAttributeVideo
	(*DocumentAttributePhoto)(nil),     // 5: msg.DocumentAttributePhoto
	(*DocumentAttributeFile)(nil),      // 6: msg.DocumentAttributeFile
	(*DocumentAttributeAnimated)(nil),  // 7: msg.DocumentAttributeAnimated
	(*DocumentAttribute)(nil),          // 8: msg.DocumentAttribute
	(*Document)(nil),                   // 9: msg.Document
	(*InputMediaWebDocument)(nil),      // 10: msg.InputMediaWebDocument
	(*MediaWebDocument)(nil),           // 11: msg.MediaWebDocument
	(*MediaWebPage)(nil),               // 12: msg.MediaWebPage
	(*InputMediaContact)(nil),          // 13: msg.InputMediaContact
	(*MediaContact)(nil),               // 14: msg.MediaContact
	(*InputMediaUploadedDocument)(nil), // 15: msg.InputMediaUploadedDocument
	(*InputMediaDocument)(nil),         // 16: msg.InputMediaDocument
	(*InputMediaMessageDocument)(nil),  // 17: msg.InputMediaMessageDocument
	(*MediaDocument)(nil),              // 18: msg.MediaDocument
	(*InputMediaGeoLocation)(nil),      // 19: msg.InputMediaGeoLocation
	(*MediaGeoLocation)(nil),           // 20: msg.MediaGeoLocation
	(*InputMediaPoll)(nil),             // 21: msg.InputMediaPoll
	(*MediaPoll)(nil),                  // 22: msg.MediaPoll
	(*PollAnswer)(nil),                 // 23: msg.PollAnswer
	(*PollResults)(nil),                // 24: msg.PollResults
	(*PollAnswerVoters)(nil),           // 25: msg.PollAnswerVoters
	(*FileLocation)(nil),               // 26: msg.FileLocation
	(*InputFile)(nil),                  // 27: msg.InputFile
	(*InputDocument)(nil),              // 28: msg.InputDocument
	(*MessageEntity)(nil),              // 29: msg.MessageEntity
	(*InputPeer)(nil),                  // 30: msg.InputPeer
}
var file_chat_messages_medias_proto_depIdxs = []int32{
	1,  // 0: msg.DocumentAttribute.Type:type_name -> msg.DocumentAttributeType
	8,  // 1: msg.Document.Attributes:type_name -> msg.DocumentAttribute
	26, // 2: msg.Document.Thumbnail:type_name -> msg.FileLocation
	8,  // 3: msg.InputMediaWebDocument.Attributes:type_name -> msg.DocumentAttribute
	8,  // 4: msg.MediaWebDocument.Attributes:type_name -> msg.DocumentAttribute
	27, // 5: msg.InputMediaUploadedDocument.File:type_name -> msg.InputFile
	27, // 6: msg.InputMediaUploadedDocument.Thumbnail:type_name -> msg.InputFile
	28, // 7: msg.InputMediaUploadedDocument.Stickers:type_name -> msg.InputDocument
	8,  // 8: msg.InputMediaUploadedDocument.Attributes:type_name -> msg.DocumentAttribute
	29, // 9: msg.InputMediaUploadedDocument.Entities:type_name -> msg.MessageEntity
	28, // 10: msg.InputMediaDocument.Document:type_name -> msg.InputDocument
	29, // 11: msg.InputMediaDocument.Entities:type_name -> msg.MessageEntity
	27, // 12: msg.InputMediaDocument.Thumbnail:type_name -> msg.InputFile
	8,  // 13: msg.InputMediaDocument.Attributes:type_name -> msg.DocumentAttribute
	30, // 14: msg.InputMediaMessageDocument.Peer:type_name -> msg.InputPeer
	29, // 15: msg.InputMediaMessageDocument.Entities:type_name -> msg.MessageEntity
	9,  // 16: msg.MediaDocument.Doc:type_name -> msg.Document
	29, // 17: msg.MediaDocument.Entities:type_name -> msg.MessageEntity
	29, // 18: msg.InputMediaGeoLocation.Entities:type_name -> msg.MessageEntity
	29, // 19: msg.MediaGeoLocation.Entities:type_name -> msg.MessageEntity
	22, // 20: msg.InputMediaPoll.Poll:type_name -> msg.MediaPoll
	23, // 21: msg.MediaPoll.Answers:type_name -> msg.PollAnswer
	25, // 22: msg.PollResults.Results:type_name -> msg.PollAnswerVoters
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_chat_messages_medias_proto_init() }
func file_chat_messages_medias_proto_init() {
	if File_chat_messages_medias_proto != nil {
		return
	}
	file_core_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chat_messages_medias_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttributeVoiceCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttributeAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttributeVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttributePhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttributeFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttributeAnimated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaWebDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaWebDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaWebPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaUploadedDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaMessageDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaGeoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaGeoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMediaPoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaPoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_medias_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollAnswerVoters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_messages_medias_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_messages_medias_proto_goTypes,
		DependencyIndexes: file_chat_messages_medias_proto_depIdxs,
		EnumInfos:         file_chat_messages_medias_proto_enumTypes,
		MessageInfos:      file_chat_messages_medias_proto_msgTypes,
	}.Build()
	File_chat_messages_medias_proto = out.File
	file_chat_messages_medias_proto_rawDesc = nil
	file_chat_messages_medias_proto_goTypes = nil
	file_chat_messages_medias_proto_depIdxs = nil
}
