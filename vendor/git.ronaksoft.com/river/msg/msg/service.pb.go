// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package msg

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ServiceSendMessage struct {
	OnBehalf   int64            `protobuf:"varint,100,req,name=OnBehalf" json:"OnBehalf"`
	RandomID   int64            `protobuf:"varint,1,req,name=RandomID" json:"RandomID"`
	Peer       *InputPeer       `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	Body       string           `protobuf:"bytes,5,req,name=Body" json:"Body"`
	ReplyTo    int64            `protobuf:"varint,6,opt,name=ReplyTo" json:"ReplyTo"`
	ClearDraft bool             `protobuf:"varint,7,opt,name=ClearDraft" json:"ClearDraft"`
	Entities   []*MessageEntity `protobuf:"bytes,8,rep,name=Entities" json:"Entities,omitempty"`
}

func (m *ServiceSendMessage) Reset()         { *m = ServiceSendMessage{} }
func (m *ServiceSendMessage) String() string { return proto.CompactTextString(m) }
func (*ServiceSendMessage) ProtoMessage()    {}
func (*ServiceSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}
func (m *ServiceSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServiceSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceSendMessage.Merge(m, src)
}
func (m *ServiceSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *ServiceSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceSendMessage proto.InternalMessageInfo

func (m *ServiceSendMessage) GetOnBehalf() int64 {
	if m != nil {
		return m.OnBehalf
	}
	return 0
}

func (m *ServiceSendMessage) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *ServiceSendMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *ServiceSendMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ServiceSendMessage) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

func (m *ServiceSendMessage) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *ServiceSendMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func init() {
	proto.RegisterType((*ServiceSendMessage)(nil), "msg.ServiceSendMessage")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xcf, 0x31, 0x4e, 0xc3, 0x30,
	0x14, 0xc6, 0xf1, 0x38, 0x0d, 0x34, 0xb8, 0x02, 0x21, 0x4f, 0x16, 0x83, 0xb1, 0x2a, 0x86, 0x4c,
	0x1e, 0x7a, 0x84, 0x50, 0x86, 0x0e, 0x08, 0xe4, 0x72, 0x01, 0xab, 0x79, 0x0d, 0x91, 0x12, 0x3b,
	0xb2, 0x0d, 0x52, 0xee, 0xc0, 0xc0, 0xb1, 0x3a, 0x76, 0x64, 0x42, 0x28, 0xb9, 0x08, 0x6a, 0x9a,
	0x46, 0x5d, 0x7f, 0xef, 0xaf, 0x4f, 0x36, 0xbe, 0x76, 0x60, 0x3f, 0x8b, 0x0d, 0x88, 0xda, 0x1a,
	0x6f, 0xc8, 0xa4, 0x72, 0xf9, 0xdd, 0xed, 0xc6, 0x58, 0x10, 0xbe, 0xa9, 0xc1, 0x1d, 0x79, 0xfe,
	0x15, 0x62, 0xb2, 0x3e, 0x86, 0x6b, 0xd0, 0xd9, 0x33, 0x38, 0xa7, 0x72, 0x20, 0x1c, 0xc7, 0x2f,
	0x3a, 0x85, 0x77, 0x55, 0x6e, 0x69, 0xc6, 0xc3, 0x64, 0x92, 0x46, 0xbb, 0xdf, 0xfb, 0x40, 0x8e,
	0x7a, 0x28, 0xa4, 0xd2, 0x99, 0xa9, 0x56, 0x4b, 0x8a, 0xce, 0x8b, 0x93, 0x92, 0x39, 0x8e, 0x5e,
	0x01, 0x2c, 0x0d, 0x79, 0x98, 0xcc, 0x16, 0x37, 0xa2, 0x72, 0xb9, 0x58, 0xe9, 0xfa, 0xc3, 0x1f,
	0x54, 0xf6, 0x37, 0x42, 0x71, 0x94, 0x9a, 0xac, 0xa1, 0x17, 0x3c, 0x4c, 0xae, 0x86, 0x85, 0x5e,
	0x08, 0xc3, 0x53, 0x09, 0x75, 0xd9, 0xbc, 0x19, 0x7a, 0xc9, 0xd1, 0x38, 0x7f, 0x42, 0xf2, 0x80,
	0xf1, 0x63, 0x09, 0xca, 0x2e, 0xad, 0xda, 0x7a, 0x3a, 0xe5, 0x28, 0x89, 0x87, 0xe4, 0xcc, 0x89,
	0xc0, 0xf1, 0x93, 0xf6, 0x85, 0x2f, 0xc0, 0xd1, 0x98, 0x4f, 0x92, 0xd9, 0x82, 0xf4, 0xef, 0x18,
	0xfe, 0xd9, 0xdf, 0x1a, 0x39, 0x36, 0x29, 0xdd, 0xb5, 0x0c, 0xed, 0x5b, 0x86, 0xfe, 0x5a, 0x86,
	0xbe, 0x3b, 0x16, 0xec, 0x3b, 0x16, 0xfc, 0x74, 0x2c, 0xf8, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x54,
	0xed, 0x5b, 0x36, 0x4f, 0x01, 0x00, 0x00,
}

func (m *ServiceSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceSendMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceSendMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintService(dAtA, i, uint64(m.OnBehalf))
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xa0
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	i--
	if m.ClearDraft {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	i = encodeVarintService(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x30
	i -= len(m.Body)
	copy(dAtA[i:], m.Body)
	i = encodeVarintService(dAtA, i, uint64(len(m.Body)))
	i--
	dAtA[i] = 0x2a
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintService(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintService(dAtA []byte, offset int, v uint64) int {
	offset -= sovService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ServiceSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovService(uint64(m.RandomID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Body)
	n += 1 + l + sovService(uint64(l))
	n += 1 + sovService(uint64(m.ReplyTo))
	n += 2
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	n += 2 + sovService(uint64(m.OnBehalf))
	return n
}

func sovService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozService(x uint64) (n int) {
	return sovService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ServiceSendMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceSendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceSendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnBehalf", wireType)
			}
			m.OnBehalf = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OnBehalf |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Body")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("OnBehalf")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupService = fmt.Errorf("proto: unexpected end of group")
)
