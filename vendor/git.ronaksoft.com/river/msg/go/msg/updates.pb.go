// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: updates.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RedirectTarget
type RedirectTarget int32

const (
	RedirectTarget_RedirectTargetRpc       RedirectTarget = 0
	RedirectTarget_RedirectTargetFile      RedirectTarget = 1
	RedirectTarget_RedirectTargetProxy     RedirectTarget = 2
	RedirectTarget_RedirectTargetReserved1 RedirectTarget = 3
	RedirectTarget_RedirectTargetReserved2 RedirectTarget = 4
	RedirectTarget_RedirectTargetReserved3 RedirectTarget = 5
	RedirectTarget_RedirectTargetReserved4 RedirectTarget = 6
)

// Enum value maps for RedirectTarget.
var (
	RedirectTarget_name = map[int32]string{
		0: "RedirectTargetRpc",
		1: "RedirectTargetFile",
		2: "RedirectTargetProxy",
		3: "RedirectTargetReserved1",
		4: "RedirectTargetReserved2",
		5: "RedirectTargetReserved3",
		6: "RedirectTargetReserved4",
	}
	RedirectTarget_value = map[string]int32{
		"RedirectTargetRpc":       0,
		"RedirectTargetFile":      1,
		"RedirectTargetProxy":     2,
		"RedirectTargetReserved1": 3,
		"RedirectTargetReserved2": 4,
		"RedirectTargetReserved3": 5,
		"RedirectTargetReserved4": 6,
	}
)

func (x RedirectTarget) Enum() *RedirectTarget {
	p := new(RedirectTarget)
	*p = x
	return p
}

func (x RedirectTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedirectTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_updates_proto_enumTypes[0].Descriptor()
}

func (RedirectTarget) Type() protoreflect.EnumType {
	return &file_updates_proto_enumTypes[0]
}

func (x RedirectTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedirectTarget.Descriptor instead.
func (RedirectTarget) EnumDescriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{0}
}

// UpdateGetState
// @Function
// @Return: UpdateState
type UpdateGetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGetState) Reset() {
	*x = UpdateGetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGetState) ProtoMessage() {}

func (x *UpdateGetState) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGetState.ProtoReflect.Descriptor instead.
func (*UpdateGetState) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{0}
}

// UpdateGetDifference
// @Function
// @Return: UpdateDifference
type UpdateGetDifference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  int64 `protobuf:"varint,1,opt,name=From,proto3" json:"From,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *UpdateGetDifference) Reset() {
	*x = UpdateGetDifference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGetDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGetDifference) ProtoMessage() {}

func (x *UpdateGetDifference) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGetDifference.ProtoReflect.Descriptor instead.
func (*UpdateGetDifference) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateGetDifference) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *UpdateGetDifference) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// UpdateDifference
type UpdateDifference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	More            bool              `protobuf:"varint,1,opt,name=More,proto3" json:"More,omitempty"`
	MaxUpdateID     int64             `protobuf:"varint,2,opt,name=MaxUpdateID,proto3" json:"MaxUpdateID,omitempty"`
	MinUpdateID     int64             `protobuf:"varint,3,opt,name=MinUpdateID,proto3" json:"MinUpdateID,omitempty"`
	Updates         []*UpdateEnvelope `protobuf:"bytes,4,rep,name=Updates,proto3" json:"Updates,omitempty"`
	Users           []*User           `protobuf:"bytes,5,rep,name=Users,proto3" json:"Users,omitempty"`
	Groups          []*Group          `protobuf:"bytes,6,rep,name=Groups,proto3" json:"Groups,omitempty"`
	CurrentUpdateID int64             `protobuf:"varint,7,opt,name=CurrentUpdateID,proto3" json:"CurrentUpdateID,omitempty"`
}

func (x *UpdateDifference) Reset() {
	*x = UpdateDifference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDifference) ProtoMessage() {}

func (x *UpdateDifference) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDifference.ProtoReflect.Descriptor instead.
func (*UpdateDifference) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDifference) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

func (x *UpdateDifference) GetMaxUpdateID() int64 {
	if x != nil {
		return x.MaxUpdateID
	}
	return 0
}

func (x *UpdateDifference) GetMinUpdateID() int64 {
	if x != nil {
		return x.MinUpdateID
	}
	return 0
}

func (x *UpdateDifference) GetUpdates() []*UpdateEnvelope {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateDifference) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UpdateDifference) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *UpdateDifference) GetCurrentUpdateID() int64 {
	if x != nil {
		return x.CurrentUpdateID
	}
	return 0
}

// UpdateTooLong
type UpdateTooLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTooLong) Reset() {
	*x = UpdateTooLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTooLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTooLong) ProtoMessage() {}

func (x *UpdateTooLong) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTooLong.ProtoReflect.Descriptor instead.
func (*UpdateTooLong) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{3}
}

// UpdateState
type UpdateState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateID int64 `protobuf:"varint,1,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
}

func (x *UpdateState) Reset() {
	*x = UpdateState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateState) ProtoMessage() {}

func (x *UpdateState) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateState.ProtoReflect.Descriptor instead.
func (*UpdateState) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateState) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

// UpdateMessageID
type UpdateMessageID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	MessageID int64 `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	RandomID  int64 `protobuf:"varint,2,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
}

func (x *UpdateMessageID) Reset() {
	*x = UpdateMessageID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageID) ProtoMessage() {}

func (x *UpdateMessageID) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageID.ProtoReflect.Descriptor instead.
func (*UpdateMessageID) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMessageID) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateMessageID) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *UpdateMessageID) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

// UpdateNewMessage
type UpdateNewMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount      int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID    int64        `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Message     *UserMessage `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Sender      *User        `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	AccessHash  uint64       `protobuf:"fixed64,3,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
	SenderRefID int64        `protobuf:"varint,4,opt,name=SenderRefID,proto3" json:"SenderRefID,omitempty"`
}

func (x *UpdateNewMessage) Reset() {
	*x = UpdateNewMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewMessage) ProtoMessage() {}

func (x *UpdateNewMessage) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewMessage.ProtoReflect.Descriptor instead.
func (*UpdateNewMessage) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNewMessage) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateNewMessage) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateNewMessage) GetMessage() *UserMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *UpdateNewMessage) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *UpdateNewMessage) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *UpdateNewMessage) GetSenderRefID() int64 {
	if x != nil {
		return x.SenderRefID
	}
	return 0
}

// UpdateMessageEdited
type UpdateMessageEdited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64        `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Message  *UserMessage `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateMessageEdited) Reset() {
	*x = UpdateMessageEdited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessageEdited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageEdited) ProtoMessage() {}

func (x *UpdateMessageEdited) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageEdited.ProtoReflect.Descriptor instead.
func (*UpdateMessageEdited) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMessageEdited) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateMessageEdited) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateMessageEdited) GetMessage() *UserMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// UpdateMessageDeleted
type UpdateMessagesDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount     int32   `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID   int64   `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID     int64   `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	MessageIDs []int64 `protobuf:"varint,1,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	Peer       *Peer   `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *UpdateMessagesDeleted) Reset() {
	*x = UpdateMessagesDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessagesDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessagesDeleted) ProtoMessage() {}

func (x *UpdateMessagesDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessagesDeleted.ProtoReflect.Descriptor instead.
func (*UpdateMessagesDeleted) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateMessagesDeleted) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateMessagesDeleted) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateMessagesDeleted) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateMessagesDeleted) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

func (x *UpdateMessagesDeleted) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// UpdateReadHistoryInbox
type UpdateReadHistoryInbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MaxID    int64 `protobuf:"varint,2,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
}

func (x *UpdateReadHistoryInbox) Reset() {
	*x = UpdateReadHistoryInbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReadHistoryInbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadHistoryInbox) ProtoMessage() {}

func (x *UpdateReadHistoryInbox) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadHistoryInbox.ProtoReflect.Descriptor instead.
func (*UpdateReadHistoryInbox) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReadHistoryInbox) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateReadHistoryInbox) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateReadHistoryInbox) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateReadHistoryInbox) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateReadHistoryInbox) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

// UpdateReadHistoryOutbox
type UpdateReadHistoryOutbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MaxID    int64 `protobuf:"varint,2,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
	UserID   int64 `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *UpdateReadHistoryOutbox) Reset() {
	*x = UpdateReadHistoryOutbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReadHistoryOutbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadHistoryOutbox) ProtoMessage() {}

func (x *UpdateReadHistoryOutbox) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadHistoryOutbox.ProtoReflect.Descriptor instead.
func (*UpdateReadHistoryOutbox) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateReadHistoryOutbox) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateReadHistoryOutbox) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateReadHistoryOutbox) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateReadHistoryOutbox) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateReadHistoryOutbox) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

func (x *UpdateReadHistoryOutbox) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// UpdateMessagePinned
type UpdateMessagePinned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	UserID   int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	MsgID    int64 `protobuf:"varint,3,opt,name=MsgID,proto3" json:"MsgID,omitempty"`
	Version  int64 `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *UpdateMessagePinned) Reset() {
	*x = UpdateMessagePinned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessagePinned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessagePinned) ProtoMessage() {}

func (x *UpdateMessagePinned) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessagePinned.ProtoReflect.Descriptor instead.
func (*UpdateMessagePinned) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMessagePinned) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateMessagePinned) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateMessagePinned) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateMessagePinned) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateMessagePinned) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateMessagePinned) GetMsgID() int64 {
	if x != nil {
		return x.MsgID
	}
	return 0
}

func (x *UpdateMessagePinned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// UpdateUserTyping
type UpdateUserTyping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	TeamID   int64        `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	UserID   int64        `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Action   TypingAction `protobuf:"varint,2,opt,name=Action,proto3,enum=msg.TypingAction" json:"Action,omitempty"`
	PeerID   int64        `protobuf:"varint,3,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType int32        `protobuf:"varint,4,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
}

func (x *UpdateUserTyping) Reset() {
	*x = UpdateUserTyping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTyping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTyping) ProtoMessage() {}

func (x *UpdateUserTyping) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTyping.ProtoReflect.Descriptor instead.
func (*UpdateUserTyping) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUserTyping) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateUserTyping) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateUserTyping) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUserTyping) GetAction() TypingAction {
	if x != nil {
		return x.Action
	}
	return TypingAction_TypingActionTyping
}

func (x *UpdateUserTyping) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *UpdateUserTyping) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

// UpdateUserStatus
type UpdateUserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *UpdateUserStatus) Reset() {
	*x = UpdateUserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserStatus) ProtoMessage() {}

func (x *UpdateUserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserStatus.ProtoReflect.Descriptor instead.
func (*UpdateUserStatus) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateUserStatus) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateUserStatus) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUserStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// UpdateUsername
type UpdateUsername struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32  `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64  `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	UserID    int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Bio       string `protobuf:"bytes,5,opt,name=Bio,proto3" json:"Bio,omitempty"`
	Phone     string `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
}

func (x *UpdateUsername) Reset() {
	*x = UpdateUsername{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsername) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsername) ProtoMessage() {}

func (x *UpdateUsername) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsername.ProtoReflect.Descriptor instead.
func (*UpdateUsername) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateUsername) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateUsername) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateUsername) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUsername) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUsername) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateUsername) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateUsername) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *UpdateUsername) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// UpdateUserPhoto
type UpdateUserPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount          int32      `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID        int64      `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	UserID          int64      `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Photo           *UserPhoto `protobuf:"bytes,2,opt,name=Photo,proto3" json:"Photo,omitempty"`
	PhotoID         int64      `protobuf:"varint,3,opt,name=PhotoID,proto3" json:"PhotoID,omitempty"`
	DeletedPhotoIDs []int64    `protobuf:"varint,4,rep,packed,name=DeletedPhotoIDs,proto3" json:"DeletedPhotoIDs,omitempty"`
}

func (x *UpdateUserPhoto) Reset() {
	*x = UpdateUserPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPhoto) ProtoMessage() {}

func (x *UpdateUserPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPhoto.ProtoReflect.Descriptor instead.
func (*UpdateUserPhoto) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserPhoto) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateUserPhoto) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateUserPhoto) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUserPhoto) GetPhoto() *UserPhoto {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *UpdateUserPhoto) GetPhotoID() int64 {
	if x != nil {
		return x.PhotoID
	}
	return 0
}

func (x *UpdateUserPhoto) GetDeletedPhotoIDs() []int64 {
	if x != nil {
		return x.DeletedPhotoIDs
	}
	return nil
}

// UpdateNotifySettings
type UpdateNotifySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount     int32               `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID   int64               `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID     int64               `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	UserID     int64               `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	NotifyPeer *Peer               `protobuf:"bytes,2,opt,name=NotifyPeer,proto3" json:"NotifyPeer,omitempty"`
	Settings   *PeerNotifySettings `protobuf:"bytes,3,opt,name=Settings,proto3" json:"Settings,omitempty"`
}

func (x *UpdateNotifySettings) Reset() {
	*x = UpdateNotifySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifySettings) ProtoMessage() {}

func (x *UpdateNotifySettings) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifySettings.ProtoReflect.Descriptor instead.
func (*UpdateNotifySettings) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateNotifySettings) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateNotifySettings) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateNotifySettings) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateNotifySettings) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateNotifySettings) GetNotifyPeer() *Peer {
	if x != nil {
		return x.NotifyPeer
	}
	return nil
}

func (x *UpdateNotifySettings) GetSettings() *PeerNotifySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// UpdateGroupParticipantAdd
type UpdateGroupParticipantAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	GroupID   int64 `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	UserID    int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	InviterID int64 `protobuf:"varint,3,opt,name=InviterID,proto3" json:"InviterID,omitempty"`
	Date      int64 `protobuf:"varint,4,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *UpdateGroupParticipantAdd) Reset() {
	*x = UpdateGroupParticipantAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupParticipantAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupParticipantAdd) ProtoMessage() {}

func (x *UpdateGroupParticipantAdd) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupParticipantAdd.ProtoReflect.Descriptor instead.
func (*UpdateGroupParticipantAdd) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateGroupParticipantAdd) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateGroupParticipantAdd) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateGroupParticipantAdd) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateGroupParticipantAdd) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateGroupParticipantAdd) GetInviterID() int64 {
	if x != nil {
		return x.InviterID
	}
	return 0
}

func (x *UpdateGroupParticipantAdd) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

// UpdateGroupParticipantDeleted
type UpdateGroupParticipantDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	GroupID  int64 `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	UserID   int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *UpdateGroupParticipantDeleted) Reset() {
	*x = UpdateGroupParticipantDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupParticipantDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupParticipantDeleted) ProtoMessage() {}

func (x *UpdateGroupParticipantDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupParticipantDeleted.ProtoReflect.Descriptor instead.
func (*UpdateGroupParticipantDeleted) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateGroupParticipantDeleted) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateGroupParticipantDeleted) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateGroupParticipantDeleted) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateGroupParticipantDeleted) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// UpdateGroupParticipantAdmin
type UpdateGroupParticipantAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	GroupID  int64 `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	UserID   int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsAdmin  bool  `protobuf:"varint,3,opt,name=IsAdmin,proto3" json:"IsAdmin,omitempty"`
}

func (x *UpdateGroupParticipantAdmin) Reset() {
	*x = UpdateGroupParticipantAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupParticipantAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupParticipantAdmin) ProtoMessage() {}

func (x *UpdateGroupParticipantAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupParticipantAdmin.ProtoReflect.Descriptor instead.
func (*UpdateGroupParticipantAdmin) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateGroupParticipantAdmin) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateGroupParticipantAdmin) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateGroupParticipantAdmin) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateGroupParticipantAdmin) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateGroupParticipantAdmin) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

// UpdateGroupAdmins
type UpdateGroupAdmins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount       int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID     int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	GroupID      int64 `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	AdminEnabled bool  `protobuf:"varint,2,opt,name=AdminEnabled,proto3" json:"AdminEnabled,omitempty"`
}

func (x *UpdateGroupAdmins) Reset() {
	*x = UpdateGroupAdmins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupAdmins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupAdmins) ProtoMessage() {}

func (x *UpdateGroupAdmins) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupAdmins.ProtoReflect.Descriptor instead.
func (*UpdateGroupAdmins) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateGroupAdmins) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateGroupAdmins) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateGroupAdmins) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateGroupAdmins) GetAdminEnabled() bool {
	if x != nil {
		return x.AdminEnabled
	}
	return false
}

// UpdateGroupAdminOnly
type UpdateGroupAdminOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	GroupID   int64 `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	AdminOnly bool  `protobuf:"varint,2,opt,name=AdminOnly,proto3" json:"AdminOnly,omitempty"`
}

func (x *UpdateGroupAdminOnly) Reset() {
	*x = UpdateGroupAdminOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupAdminOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupAdminOnly) ProtoMessage() {}

func (x *UpdateGroupAdminOnly) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupAdminOnly.ProtoReflect.Descriptor instead.
func (*UpdateGroupAdminOnly) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateGroupAdminOnly) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateGroupAdminOnly) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateGroupAdminOnly) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateGroupAdminOnly) GetAdminOnly() bool {
	if x != nil {
		return x.AdminOnly
	}
	return false
}

// UpdateGroupPhoto
type UpdateGroupPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32       `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64       `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	GroupID  int64       `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Photo    *GroupPhoto `protobuf:"bytes,2,opt,name=Photo,proto3" json:"Photo,omitempty"`
	PhotoID  int64       `protobuf:"varint,3,opt,name=PhotoID,proto3" json:"PhotoID,omitempty"`
}

func (x *UpdateGroupPhoto) Reset() {
	*x = UpdateGroupPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupPhoto) ProtoMessage() {}

func (x *UpdateGroupPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupPhoto.ProtoReflect.Descriptor instead.
func (*UpdateGroupPhoto) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateGroupPhoto) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateGroupPhoto) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateGroupPhoto) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *UpdateGroupPhoto) GetPhoto() *GroupPhoto {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *UpdateGroupPhoto) GetPhotoID() int64 {
	if x != nil {
		return x.PhotoID
	}
	return 0
}

// UpdateReadMessagesContents
type UpdateReadMessagesContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount     int32   `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID   int64   `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID     int64   `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	MessageIDs []int64 `protobuf:"varint,1,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	Peer       *Peer   `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *UpdateReadMessagesContents) Reset() {
	*x = UpdateReadMessagesContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReadMessagesContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadMessagesContents) ProtoMessage() {}

func (x *UpdateReadMessagesContents) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadMessagesContents.ProtoReflect.Descriptor instead.
func (*UpdateReadMessagesContents) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateReadMessagesContents) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateReadMessagesContents) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateReadMessagesContents) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateReadMessagesContents) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

func (x *UpdateReadMessagesContents) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// UpdateAuthorizationReset
type UpdateAuthorizationReset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
}

func (x *UpdateAuthorizationReset) Reset() {
	*x = UpdateAuthorizationReset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthorizationReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthorizationReset) ProtoMessage() {}

func (x *UpdateAuthorizationReset) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthorizationReset.ProtoReflect.Descriptor instead.
func (*UpdateAuthorizationReset) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAuthorizationReset) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateAuthorizationReset) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

// UpdateDraftMessage
type UpdateDraftMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32         `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64         `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Message  *DraftMessage `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateDraftMessage) Reset() {
	*x = UpdateDraftMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDraftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDraftMessage) ProtoMessage() {}

func (x *UpdateDraftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDraftMessage.ProtoReflect.Descriptor instead.
func (*UpdateDraftMessage) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateDraftMessage) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateDraftMessage) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateDraftMessage) GetMessage() *DraftMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// UpdateDraftMessageCleared
type UpdateDraftMessageCleared struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *UpdateDraftMessageCleared) Reset() {
	*x = UpdateDraftMessageCleared{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDraftMessageCleared) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDraftMessageCleared) ProtoMessage() {}

func (x *UpdateDraftMessageCleared) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDraftMessageCleared.ProtoReflect.Descriptor instead.
func (*UpdateDraftMessageCleared) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateDraftMessageCleared) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateDraftMessageCleared) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateDraftMessageCleared) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateDraftMessageCleared) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// UpdateDialogPinned
type UpdateDialogPinned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Pinned   bool  `protobuf:"varint,2,opt,name=Pinned,proto3" json:"Pinned,omitempty"`
}

func (x *UpdateDialogPinned) Reset() {
	*x = UpdateDialogPinned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDialogPinned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDialogPinned) ProtoMessage() {}

func (x *UpdateDialogPinned) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDialogPinned.ProtoReflect.Descriptor instead.
func (*UpdateDialogPinned) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateDialogPinned) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateDialogPinned) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateDialogPinned) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateDialogPinned) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateDialogPinned) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

// UpdateDialogPinnedOrder
type UpdateDialogPinnedReorder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32   `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64   `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Peer     []*Peer `protobuf:"bytes,1,rep,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *UpdateDialogPinnedReorder) Reset() {
	*x = UpdateDialogPinnedReorder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDialogPinnedReorder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDialogPinnedReorder) ProtoMessage() {}

func (x *UpdateDialogPinnedReorder) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDialogPinnedReorder.ProtoReflect.Descriptor instead.
func (*UpdateDialogPinnedReorder) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDialogPinnedReorder) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateDialogPinnedReorder) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateDialogPinnedReorder) GetPeer() []*Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// UpdateAccountPrivacy
type UpdateAccountPrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount           int32          `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID         int64          `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	ChatInvite       []*PrivacyRule `protobuf:"bytes,1,rep,name=ChatInvite,proto3" json:"ChatInvite,omitempty"`
	LastSeen         []*PrivacyRule `protobuf:"bytes,2,rep,name=LastSeen,proto3" json:"LastSeen,omitempty"`
	PhoneNumber      []*PrivacyRule `protobuf:"bytes,3,rep,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	ProfilePhoto     []*PrivacyRule `protobuf:"bytes,4,rep,name=ProfilePhoto,proto3" json:"ProfilePhoto,omitempty"`
	ForwardedMessage []*PrivacyRule `protobuf:"bytes,5,rep,name=ForwardedMessage,proto3" json:"ForwardedMessage,omitempty"`
	Call             []*PrivacyRule `protobuf:"bytes,6,rep,name=Call,proto3" json:"Call,omitempty"`
}

func (x *UpdateAccountPrivacy) Reset() {
	*x = UpdateAccountPrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountPrivacy) ProtoMessage() {}

func (x *UpdateAccountPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountPrivacy.ProtoReflect.Descriptor instead.
func (*UpdateAccountPrivacy) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateAccountPrivacy) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateAccountPrivacy) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateAccountPrivacy) GetChatInvite() []*PrivacyRule {
	if x != nil {
		return x.ChatInvite
	}
	return nil
}

func (x *UpdateAccountPrivacy) GetLastSeen() []*PrivacyRule {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *UpdateAccountPrivacy) GetPhoneNumber() []*PrivacyRule {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *UpdateAccountPrivacy) GetProfilePhoto() []*PrivacyRule {
	if x != nil {
		return x.ProfilePhoto
	}
	return nil
}

func (x *UpdateAccountPrivacy) GetForwardedMessage() []*PrivacyRule {
	if x != nil {
		return x.ForwardedMessage
	}
	return nil
}

func (x *UpdateAccountPrivacy) GetCall() []*PrivacyRule {
	if x != nil {
		return x.Call
	}
	return nil
}

// UpdateLabelItemAdded
type UpdateLabelItemsAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount     int32    `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID   int64    `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID     int64    `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer       *Peer    `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageIDs []int64  `protobuf:"varint,3,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	LabelIDs   []int32  `protobuf:"varint,4,rep,packed,name=LabelIDs,proto3" json:"LabelIDs,omitempty"`
	Labels     []*Label `protobuf:"bytes,5,rep,name=Labels,proto3" json:"Labels,omitempty"`
}

func (x *UpdateLabelItemsAdded) Reset() {
	*x = UpdateLabelItemsAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelItemsAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelItemsAdded) ProtoMessage() {}

func (x *UpdateLabelItemsAdded) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelItemsAdded.ProtoReflect.Descriptor instead.
func (*UpdateLabelItemsAdded) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateLabelItemsAdded) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateLabelItemsAdded) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateLabelItemsAdded) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateLabelItemsAdded) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateLabelItemsAdded) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

func (x *UpdateLabelItemsAdded) GetLabelIDs() []int32 {
	if x != nil {
		return x.LabelIDs
	}
	return nil
}

func (x *UpdateLabelItemsAdded) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

// UpdateLabelItemsRemoved
type UpdateLabelItemsRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount     int32    `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID   int64    `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID     int64    `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer       *Peer    `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageIDs []int64  `protobuf:"varint,3,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	LabelIDs   []int32  `protobuf:"varint,4,rep,packed,name=LabelIDs,proto3" json:"LabelIDs,omitempty"`
	Labels     []*Label `protobuf:"bytes,5,rep,name=Labels,proto3" json:"Labels,omitempty"`
}

func (x *UpdateLabelItemsRemoved) Reset() {
	*x = UpdateLabelItemsRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelItemsRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelItemsRemoved) ProtoMessage() {}

func (x *UpdateLabelItemsRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelItemsRemoved.ProtoReflect.Descriptor instead.
func (*UpdateLabelItemsRemoved) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateLabelItemsRemoved) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateLabelItemsRemoved) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateLabelItemsRemoved) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateLabelItemsRemoved) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateLabelItemsRemoved) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

func (x *UpdateLabelItemsRemoved) GetLabelIDs() []int32 {
	if x != nil {
		return x.LabelIDs
	}
	return nil
}

func (x *UpdateLabelItemsRemoved) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

// UpdateLabelSet
type UpdateLabelSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32    `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64    `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Labels   []*Label `protobuf:"bytes,1,rep,name=Labels,proto3" json:"Labels,omitempty"`
}

func (x *UpdateLabelSet) Reset() {
	*x = UpdateLabelSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelSet) ProtoMessage() {}

func (x *UpdateLabelSet) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelSet.ProtoReflect.Descriptor instead.
func (*UpdateLabelSet) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateLabelSet) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateLabelSet) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateLabelSet) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

// UpdateLabelDeleted
type UpdateLabelDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32   `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64   `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	LabelIDs []int32 `protobuf:"varint,1,rep,packed,name=LabelIDs,proto3" json:"LabelIDs,omitempty"`
}

func (x *UpdateLabelDeleted) Reset() {
	*x = UpdateLabelDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelDeleted) ProtoMessage() {}

func (x *UpdateLabelDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelDeleted.ProtoReflect.Descriptor instead.
func (*UpdateLabelDeleted) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateLabelDeleted) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateLabelDeleted) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateLabelDeleted) GetLabelIDs() []int32 {
	if x != nil {
		return x.LabelIDs
	}
	return nil
}

// UpdateUserBlocked
type UpdateUserBlocked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	UserID   int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Blocked  bool  `protobuf:"varint,2,opt,name=Blocked,proto3" json:"Blocked,omitempty"`
}

func (x *UpdateUserBlocked) Reset() {
	*x = UpdateUserBlocked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserBlocked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserBlocked) ProtoMessage() {}

func (x *UpdateUserBlocked) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserBlocked.ProtoReflect.Descriptor instead.
func (*UpdateUserBlocked) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateUserBlocked) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateUserBlocked) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateUserBlocked) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUserBlocked) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

// UpdateMessagePoll
type UpdateMessagePoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64        `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	PollID   int64        `protobuf:"varint,1,opt,name=PollID,proto3" json:"PollID,omitempty"`
	Poll     *MediaPoll   `protobuf:"bytes,2,opt,name=Poll,proto3" json:"Poll,omitempty"`
	Results  *PollResults `protobuf:"bytes,3,opt,name=Results,proto3" json:"Results,omitempty"`
}

func (x *UpdateMessagePoll) Reset() {
	*x = UpdateMessagePoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMessagePoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessagePoll) ProtoMessage() {}

func (x *UpdateMessagePoll) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessagePoll.ProtoReflect.Descriptor instead.
func (*UpdateMessagePoll) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateMessagePoll) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateMessagePoll) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateMessagePoll) GetPollID() int64 {
	if x != nil {
		return x.PollID
	}
	return 0
}

func (x *UpdateMessagePoll) GetPoll() *MediaPoll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *UpdateMessagePoll) GetResults() *PollResults {
	if x != nil {
		return x.Results
	}
	return nil
}

// UpdateBotCallbackQuery
type UpdateBotCallbackQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32  `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64  `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	QueryID   int64  `protobuf:"varint,1,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
	UserID    int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Peer      *Peer  `protobuf:"bytes,3,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64  `protobuf:"varint,4,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
	TeamID    int64  `protobuf:"varint,6,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
}

func (x *UpdateBotCallbackQuery) Reset() {
	*x = UpdateBotCallbackQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBotCallbackQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBotCallbackQuery) ProtoMessage() {}

func (x *UpdateBotCallbackQuery) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBotCallbackQuery.ProtoReflect.Descriptor instead.
func (*UpdateBotCallbackQuery) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateBotCallbackQuery) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateBotCallbackQuery) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateBotCallbackQuery) GetQueryID() int64 {
	if x != nil {
		return x.QueryID
	}
	return 0
}

func (x *UpdateBotCallbackQuery) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateBotCallbackQuery) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateBotCallbackQuery) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *UpdateBotCallbackQuery) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateBotCallbackQuery) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

// UpdateBotInlineQuery
type UpdateBotInlineQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64        `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	QueryID  int64        `protobuf:"varint,1,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
	UserID   int64        `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Peer     *Peer        `protobuf:"bytes,3,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Query    string       `protobuf:"bytes,4,opt,name=Query,proto3" json:"Query,omitempty"`
	Offset   string       `protobuf:"bytes,5,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Geo      *GeoLocation `protobuf:"bytes,6,opt,name=Geo,proto3" json:"Geo,omitempty"`
	TeamID   int64        `protobuf:"varint,7,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
}

func (x *UpdateBotInlineQuery) Reset() {
	*x = UpdateBotInlineQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBotInlineQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBotInlineQuery) ProtoMessage() {}

func (x *UpdateBotInlineQuery) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBotInlineQuery.ProtoReflect.Descriptor instead.
func (*UpdateBotInlineQuery) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateBotInlineQuery) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateBotInlineQuery) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateBotInlineQuery) GetQueryID() int64 {
	if x != nil {
		return x.QueryID
	}
	return 0
}

func (x *UpdateBotInlineQuery) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateBotInlineQuery) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateBotInlineQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UpdateBotInlineQuery) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *UpdateBotInlineQuery) GetGeo() *GeoLocation {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *UpdateBotInlineQuery) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

// UpdateBotInlineSend
type UpdateBotInlineSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64        `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	UserID   int64        `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Query    string       `protobuf:"bytes,3,opt,name=Query,proto3" json:"Query,omitempty"`
	ResultID string       `protobuf:"bytes,4,opt,name=ResultID,proto3" json:"ResultID,omitempty"`
	Geo      *GeoLocation `protobuf:"bytes,5,opt,name=Geo,proto3" json:"Geo,omitempty"`
}

func (x *UpdateBotInlineSend) Reset() {
	*x = UpdateBotInlineSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBotInlineSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBotInlineSend) ProtoMessage() {}

func (x *UpdateBotInlineSend) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBotInlineSend.ProtoReflect.Descriptor instead.
func (*UpdateBotInlineSend) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateBotInlineSend) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateBotInlineSend) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateBotInlineSend) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateBotInlineSend) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UpdateBotInlineSend) GetResultID() string {
	if x != nil {
		return x.ResultID
	}
	return ""
}

func (x *UpdateBotInlineSend) GetGeo() *GeoLocation {
	if x != nil {
		return x.Geo
	}
	return nil
}

// UpdateTeamCreated
type UpdateTeamCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Team     *Team `protobuf:"bytes,1,opt,name=Team,proto3" json:"Team,omitempty"`
}

func (x *UpdateTeamCreated) Reset() {
	*x = UpdateTeamCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamCreated) ProtoMessage() {}

func (x *UpdateTeamCreated) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamCreated.ProtoReflect.Descriptor instead.
func (*UpdateTeamCreated) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateTeamCreated) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateTeamCreated) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateTeamCreated) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

// UpdateTeamMemberAdded
type UpdateTeamMemberAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32        `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64        `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64        `protobuf:"varint,1,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	User     *User        `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Contact  *ContactUser `protobuf:"bytes,3,opt,name=Contact,proto3" json:"Contact,omitempty"`
	AdderID  int64        `protobuf:"varint,4,opt,name=AdderID,proto3" json:"AdderID,omitempty"`
	Hash     uint32       `protobuf:"fixed32,5,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *UpdateTeamMemberAdded) Reset() {
	*x = UpdateTeamMemberAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberAdded) ProtoMessage() {}

func (x *UpdateTeamMemberAdded) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberAdded.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberAdded) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateTeamMemberAdded) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateTeamMemberAdded) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateTeamMemberAdded) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateTeamMemberAdded) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateTeamMemberAdded) GetContact() *ContactUser {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *UpdateTeamMemberAdded) GetAdderID() int64 {
	if x != nil {
		return x.AdderID
	}
	return 0
}

func (x *UpdateTeamMemberAdded) GetHash() uint32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

// UpdateTeamMemberRemoved
type UpdateTeamMemberRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32  `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64  `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID    int64  `protobuf:"varint,1,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	UserID    int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RemoverID int64  `protobuf:"varint,3,opt,name=RemoverID,proto3" json:"RemoverID,omitempty"`
	Hash      uint32 `protobuf:"fixed32,4,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *UpdateTeamMemberRemoved) Reset() {
	*x = UpdateTeamMemberRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberRemoved) ProtoMessage() {}

func (x *UpdateTeamMemberRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberRemoved.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberRemoved) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateTeamMemberRemoved) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateTeamMemberRemoved) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateTeamMemberRemoved) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateTeamMemberRemoved) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateTeamMemberRemoved) GetRemoverID() int64 {
	if x != nil {
		return x.RemoverID
	}
	return 0
}

func (x *UpdateTeamMemberRemoved) GetHash() uint32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

// UpdateTeamMemberStatus
type UpdateTeamMemberStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID    int64 `protobuf:"varint,1,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	ChangerID int64 `protobuf:"varint,3,opt,name=ChangerID,proto3" json:"ChangerID,omitempty"`
	Admin     bool  `protobuf:"varint,4,opt,name=Admin,proto3" json:"Admin,omitempty"`
}

func (x *UpdateTeamMemberStatus) Reset() {
	*x = UpdateTeamMemberStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberStatus) ProtoMessage() {}

func (x *UpdateTeamMemberStatus) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberStatus.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberStatus) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateTeamMemberStatus) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateTeamMemberStatus) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateTeamMemberStatus) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateTeamMemberStatus) GetChangerID() int64 {
	if x != nil {
		return x.ChangerID
	}
	return 0
}

func (x *UpdateTeamMemberStatus) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

// UpdateTeamPhoto
type UpdateTeamPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32      `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64      `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64      `protobuf:"varint,1,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Photo    *TeamPhoto `protobuf:"bytes,2,opt,name=Photo,proto3" json:"Photo,omitempty"`
}

func (x *UpdateTeamPhoto) Reset() {
	*x = UpdateTeamPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamPhoto) ProtoMessage() {}

func (x *UpdateTeamPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamPhoto.ProtoReflect.Descriptor instead.
func (*UpdateTeamPhoto) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateTeamPhoto) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateTeamPhoto) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateTeamPhoto) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateTeamPhoto) GetPhoto() *TeamPhoto {
	if x != nil {
		return x.Photo
	}
	return nil
}

// UpdateTeam
type UpdateTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32  `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64  `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64  `protobuf:"varint,1,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UpdateTeam) Reset() {
	*x = UpdateTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeam) ProtoMessage() {}

func (x *UpdateTeam) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeam.ProtoReflect.Descriptor instead.
func (*UpdateTeam) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateTeam) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateTeam) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateTeam) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateTeam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// UpdateCommunityMessage
type UpdateCommunityMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamID      int64            `protobuf:"varint,100,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	SenderID    int64            `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	ReceiverID  int64            `protobuf:"varint,2,opt,name=ReceiverID,proto3" json:"ReceiverID,omitempty"`
	Body        string           `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	CreatedOn   int64            `protobuf:"varint,4,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
	GlobalMsgID uint64           `protobuf:"varint,5,opt,name=GlobalMsgID,proto3" json:"GlobalMsgID,omitempty"`
	Entities    []*MessageEntity `protobuf:"bytes,6,rep,name=Entities,proto3" json:"Entities,omitempty"`
	SenderMsgID int64            `protobuf:"varint,7,opt,name=SenderMsgID,proto3" json:"SenderMsgID,omitempty"`
}

func (x *UpdateCommunityMessage) Reset() {
	*x = UpdateCommunityMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityMessage) ProtoMessage() {}

func (x *UpdateCommunityMessage) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityMessage.ProtoReflect.Descriptor instead.
func (*UpdateCommunityMessage) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateCommunityMessage) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateCommunityMessage) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *UpdateCommunityMessage) GetReceiverID() int64 {
	if x != nil {
		return x.ReceiverID
	}
	return 0
}

func (x *UpdateCommunityMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *UpdateCommunityMessage) GetCreatedOn() int64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

func (x *UpdateCommunityMessage) GetGlobalMsgID() uint64 {
	if x != nil {
		return x.GlobalMsgID
	}
	return 0
}

func (x *UpdateCommunityMessage) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *UpdateCommunityMessage) GetSenderMsgID() int64 {
	if x != nil {
		return x.SenderMsgID
	}
	return 0
}

// UpdateCommunityReadOutbox
type UpdateCommunityReadOutbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamID      int64 `protobuf:"varint,100,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	SenderID    int64 `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	ReceiverID  int64 `protobuf:"varint,2,opt,name=ReceiverID,proto3" json:"ReceiverID,omitempty"`
	SenderMsgID int64 `protobuf:"varint,3,opt,name=SenderMsgID,proto3" json:"SenderMsgID,omitempty"`
}

func (x *UpdateCommunityReadOutbox) Reset() {
	*x = UpdateCommunityReadOutbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityReadOutbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityReadOutbox) ProtoMessage() {}

func (x *UpdateCommunityReadOutbox) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityReadOutbox.ProtoReflect.Descriptor instead.
func (*UpdateCommunityReadOutbox) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateCommunityReadOutbox) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateCommunityReadOutbox) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *UpdateCommunityReadOutbox) GetReceiverID() int64 {
	if x != nil {
		return x.ReceiverID
	}
	return 0
}

func (x *UpdateCommunityReadOutbox) GetSenderMsgID() int64 {
	if x != nil {
		return x.SenderMsgID
	}
	return 0
}

// UpdateCommunityTyping
type UpdateCommunityTyping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamID     int64        `protobuf:"varint,100,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	SenderID   int64        `protobuf:"varint,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	ReceiverID int64        `protobuf:"varint,2,opt,name=ReceiverID,proto3" json:"ReceiverID,omitempty"`
	Action     TypingAction `protobuf:"varint,3,opt,name=Action,proto3,enum=msg.TypingAction" json:"Action,omitempty"`
}

func (x *UpdateCommunityTyping) Reset() {
	*x = UpdateCommunityTyping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityTyping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityTyping) ProtoMessage() {}

func (x *UpdateCommunityTyping) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityTyping.ProtoReflect.Descriptor instead.
func (*UpdateCommunityTyping) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateCommunityTyping) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateCommunityTyping) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *UpdateCommunityTyping) GetReceiverID() int64 {
	if x != nil {
		return x.ReceiverID
	}
	return 0
}

func (x *UpdateCommunityTyping) GetAction() TypingAction {
	if x != nil {
		return x.Action
	}
	return TypingAction_TypingActionTyping
}

// UpdateReaction
type UpdateReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount        int32              `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID      int64              `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	MessageID     int64              `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Counter       []*ReactionCounter `protobuf:"bytes,2,rep,name=Counter,proto3" json:"Counter,omitempty"`
	TeamID        int64              `protobuf:"varint,3,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer          *Peer              `protobuf:"bytes,4,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Sender        *User              `protobuf:"bytes,5,opt,name=Sender,proto3" json:"Sender,omitempty"`
	YourReactions []string           `protobuf:"bytes,6,rep,name=YourReactions,proto3" json:"YourReactions,omitempty"`
	Reaction      string             `protobuf:"bytes,7,opt,name=Reaction,proto3" json:"Reaction,omitempty"`
}

func (x *UpdateReaction) Reset() {
	*x = UpdateReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReaction) ProtoMessage() {}

func (x *UpdateReaction) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReaction.ProtoReflect.Descriptor instead.
func (*UpdateReaction) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateReaction) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateReaction) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateReaction) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *UpdateReaction) GetCounter() []*ReactionCounter {
	if x != nil {
		return x.Counter
	}
	return nil
}

func (x *UpdateReaction) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdateReaction) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateReaction) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *UpdateReaction) GetYourReactions() []string {
	if x != nil {
		return x.YourReactions
	}
	return nil
}

func (x *UpdateReaction) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

// UpdateCalendarEventAdded
type UpdateCalendarEventAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32          `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64          `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Event    *CalendarEvent `protobuf:"bytes,1,opt,name=Event,proto3" json:"Event,omitempty"`
}

func (x *UpdateCalendarEventAdded) Reset() {
	*x = UpdateCalendarEventAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalendarEventAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarEventAdded) ProtoMessage() {}

func (x *UpdateCalendarEventAdded) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarEventAdded.ProtoReflect.Descriptor instead.
func (*UpdateCalendarEventAdded) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateCalendarEventAdded) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateCalendarEventAdded) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateCalendarEventAdded) GetEvent() *CalendarEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

// UpdateCalendarEventRemoved
type UpdateCalendarEventRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	EventID  int64 `protobuf:"varint,102,opt,name=EventID,proto3" json:"EventID,omitempty"`
}

func (x *UpdateCalendarEventRemoved) Reset() {
	*x = UpdateCalendarEventRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalendarEventRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarEventRemoved) ProtoMessage() {}

func (x *UpdateCalendarEventRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarEventRemoved.ProtoReflect.Descriptor instead.
func (*UpdateCalendarEventRemoved) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateCalendarEventRemoved) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateCalendarEventRemoved) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateCalendarEventRemoved) GetEventID() int64 {
	if x != nil {
		return x.EventID
	}
	return 0
}

// UpdateCalendarEventEdited
type UpdateCalendarEventEdited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32          `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64          `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Event    *CalendarEvent `protobuf:"bytes,1,opt,name=Event,proto3" json:"Event,omitempty"`
}

func (x *UpdateCalendarEventEdited) Reset() {
	*x = UpdateCalendarEventEdited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCalendarEventEdited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarEventEdited) ProtoMessage() {}

func (x *UpdateCalendarEventEdited) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarEventEdited.ProtoReflect.Descriptor instead.
func (*UpdateCalendarEventEdited) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateCalendarEventEdited) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateCalendarEventEdited) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateCalendarEventEdited) GetEvent() *CalendarEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

// UpdateRedirect
type UpdateRedirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount    int32             `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID  int64             `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Redirects []*ClientRedirect `protobuf:"bytes,1,rep,name=Redirects,proto3" json:"Redirects,omitempty"`
	Empty     bool              `protobuf:"varint,2,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *UpdateRedirect) Reset() {
	*x = UpdateRedirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRedirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRedirect) ProtoMessage() {}

func (x *UpdateRedirect) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRedirect.ProtoReflect.Descriptor instead.
func (*UpdateRedirect) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateRedirect) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdateRedirect) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdateRedirect) GetRedirects() []*ClientRedirect {
	if x != nil {
		return x.Redirects
	}
	return nil
}

func (x *UpdateRedirect) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

// ClientRedirect
type ClientRedirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostPort     string         `protobuf:"bytes,1,opt,name=HostPort,proto3" json:"HostPort,omitempty"`
	Permanent    bool           `protobuf:"varint,2,opt,name=Permanent,proto3" json:"Permanent,omitempty"`
	Target       RedirectTarget `protobuf:"varint,3,opt,name=Target,proto3,enum=msg.RedirectTarget" json:"Target,omitempty"`
	Alternatives []string       `protobuf:"bytes,4,rep,name=Alternatives,proto3" json:"Alternatives,omitempty"`
}

func (x *ClientRedirect) Reset() {
	*x = ClientRedirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRedirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRedirect) ProtoMessage() {}

func (x *ClientRedirect) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRedirect.ProtoReflect.Descriptor instead.
func (*ClientRedirect) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{53}
}

func (x *ClientRedirect) GetHostPort() string {
	if x != nil {
		return x.HostPort
	}
	return ""
}

func (x *ClientRedirect) GetPermanent() bool {
	if x != nil {
		return x.Permanent
	}
	return false
}

func (x *ClientRedirect) GetTarget() RedirectTarget {
	if x != nil {
		return x.Target
	}
	return RedirectTarget_RedirectTargetRpc
}

func (x *ClientRedirect) GetAlternatives() []string {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

// UpdatePhone
type UpdatePhoneCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount     int32           `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	TeamID     int64           `protobuf:"varint,1,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	PeerID     int64           `protobuf:"varint,2,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType   int32           `protobuf:"varint,3,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
	CallID     int64           `protobuf:"varint,4,opt,name=CallID,proto3" json:"CallID,omitempty"`
	UserID     int64           `protobuf:"varint,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AccessHash uint64          `protobuf:"fixed64,6,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
	Action     PhoneCallAction `protobuf:"varint,7,opt,name=Action,proto3,enum=msg.PhoneCallAction" json:"Action,omitempty"`
	ActionData []byte          `protobuf:"bytes,8,opt,name=ActionData,proto3" json:"ActionData,omitempty"`
	Timestamp  int64           `protobuf:"varint,9,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *UpdatePhoneCall) Reset() {
	*x = UpdatePhoneCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneCall) ProtoMessage() {}

func (x *UpdatePhoneCall) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneCall.ProtoReflect.Descriptor instead.
func (*UpdatePhoneCall) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{54}
}

func (x *UpdatePhoneCall) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdatePhoneCall) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdatePhoneCall) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *UpdatePhoneCall) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *UpdatePhoneCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *UpdatePhoneCall) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdatePhoneCall) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *UpdatePhoneCall) GetAction() PhoneCallAction {
	if x != nil {
		return x.Action
	}
	return PhoneCallAction_PhoneCallEmpty
}

func (x *UpdatePhoneCall) GetActionData() []byte {
	if x != nil {
		return x.ActionData
	}
	return nil
}

func (x *UpdatePhoneCall) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// UpdatePhoneCallStarted
type UpdatePhoneCallStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallId   int64 `protobuf:"varint,2,opt,name=CallId,proto3" json:"CallId,omitempty"`
}

func (x *UpdatePhoneCallStarted) Reset() {
	*x = UpdatePhoneCallStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneCallStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneCallStarted) ProtoMessage() {}

func (x *UpdatePhoneCallStarted) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneCallStarted.ProtoReflect.Descriptor instead.
func (*UpdatePhoneCallStarted) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{55}
}

func (x *UpdatePhoneCallStarted) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdatePhoneCallStarted) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdatePhoneCallStarted) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdatePhoneCallStarted) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdatePhoneCallStarted) GetCallId() int64 {
	if x != nil {
		return x.CallId
	}
	return 0
}

// UpdatePhoneCallEnded
type UpdatePhoneCallEnded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UCount   int32 `protobuf:"varint,100,opt,name=UCount,proto3" json:"UCount,omitempty"`
	UpdateID int64 `protobuf:"varint,101,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	TeamID   int64 `protobuf:"varint,102,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	Peer     *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *UpdatePhoneCallEnded) Reset() {
	*x = UpdatePhoneCallEnded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneCallEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneCallEnded) ProtoMessage() {}

func (x *UpdatePhoneCallEnded) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneCallEnded.ProtoReflect.Descriptor instead.
func (*UpdatePhoneCallEnded) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{56}
}

func (x *UpdatePhoneCallEnded) GetUCount() int32 {
	if x != nil {
		return x.UCount
	}
	return 0
}

func (x *UpdatePhoneCallEnded) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *UpdatePhoneCallEnded) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *UpdatePhoneCallEnded) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

var File_updates_proto protoreflect.FileDescriptor

var file_updates_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6d, 0x73, 0x67, 0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x07, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6f, 0x4c,
	0x6f, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x22, 0x63,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x49, 0x44, 0x22, 0xdb, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x49,
	0x44, 0x22, 0x75, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x61, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49,
	0x44, 0x22, 0xb6, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x61, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xd0, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc5, 0x01,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x65, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x42, 0x69, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x44,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x44, 0x73, 0x22, 0xe2, 0x01, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x29, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x65, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x65, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0xa5, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x79,
	0x22, 0xa9, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x0a, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x44, 0x22, 0xab, 0x01, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x22, 0x75, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x8a, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12,
	0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0x9b,
	0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50,
	0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0x6e, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1d, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0xf8, 0x02, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x0a, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x4c,
	0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x08, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x3c, 0x0a, 0x10, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x10, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0xe6, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x06,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x22, 0xe8, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x64, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73, 0x22, 0x7d, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x6f, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x04, 0x50, 0x6f, 0x6c, 0x6c,
	0x12, 0x2a, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xe7, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x85, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x47, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x47, 0x65, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0xb7,
	0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x03, 0x47, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x47, 0x65, 0x6f, 0x22, 0x66, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d,
	0x22, 0xe4, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x41, 0x64, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0xbb, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x22, 0x70, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x22, 0x95, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x12, 0x1a, 0x0a, 0x06, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x79,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb2, 0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x59, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x59, 0x6f,
	0x75, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x6e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x79, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x8d, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x09, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x9b, 0x01, 0x0a,
	0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06,
	0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1d, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x06,
	0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x64, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x2a, 0xcc, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x70, 0x63, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x32, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33,
	0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x10, 0x06, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_updates_proto_rawDescOnce sync.Once
	file_updates_proto_rawDescData = file_updates_proto_rawDesc
)

func file_updates_proto_rawDescGZIP() []byte {
	file_updates_proto_rawDescOnce.Do(func() {
		file_updates_proto_rawDescData = protoimpl.X.CompressGZIP(file_updates_proto_rawDescData)
	})
	return file_updates_proto_rawDescData
}

var file_updates_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_updates_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_updates_proto_goTypes = []interface{}{
	(RedirectTarget)(0),                   // 0: msg.RedirectTarget
	(*UpdateGetState)(nil),                // 1: msg.UpdateGetState
	(*UpdateGetDifference)(nil),           // 2: msg.UpdateGetDifference
	(*UpdateDifference)(nil),              // 3: msg.UpdateDifference
	(*UpdateTooLong)(nil),                 // 4: msg.UpdateTooLong
	(*UpdateState)(nil),                   // 5: msg.UpdateState
	(*UpdateMessageID)(nil),               // 6: msg.UpdateMessageID
	(*UpdateNewMessage)(nil),              // 7: msg.UpdateNewMessage
	(*UpdateMessageEdited)(nil),           // 8: msg.UpdateMessageEdited
	(*UpdateMessagesDeleted)(nil),         // 9: msg.UpdateMessagesDeleted
	(*UpdateReadHistoryInbox)(nil),        // 10: msg.UpdateReadHistoryInbox
	(*UpdateReadHistoryOutbox)(nil),       // 11: msg.UpdateReadHistoryOutbox
	(*UpdateMessagePinned)(nil),           // 12: msg.UpdateMessagePinned
	(*UpdateUserTyping)(nil),              // 13: msg.UpdateUserTyping
	(*UpdateUserStatus)(nil),              // 14: msg.UpdateUserStatus
	(*UpdateUsername)(nil),                // 15: msg.UpdateUsername
	(*UpdateUserPhoto)(nil),               // 16: msg.UpdateUserPhoto
	(*UpdateNotifySettings)(nil),          // 17: msg.UpdateNotifySettings
	(*UpdateGroupParticipantAdd)(nil),     // 18: msg.UpdateGroupParticipantAdd
	(*UpdateGroupParticipantDeleted)(nil), // 19: msg.UpdateGroupParticipantDeleted
	(*UpdateGroupParticipantAdmin)(nil),   // 20: msg.UpdateGroupParticipantAdmin
	(*UpdateGroupAdmins)(nil),             // 21: msg.UpdateGroupAdmins
	(*UpdateGroupAdminOnly)(nil),          // 22: msg.UpdateGroupAdminOnly
	(*UpdateGroupPhoto)(nil),              // 23: msg.UpdateGroupPhoto
	(*UpdateReadMessagesContents)(nil),    // 24: msg.UpdateReadMessagesContents
	(*UpdateAuthorizationReset)(nil),      // 25: msg.UpdateAuthorizationReset
	(*UpdateDraftMessage)(nil),            // 26: msg.UpdateDraftMessage
	(*UpdateDraftMessageCleared)(nil),     // 27: msg.UpdateDraftMessageCleared
	(*UpdateDialogPinned)(nil),            // 28: msg.UpdateDialogPinned
	(*UpdateDialogPinnedReorder)(nil),     // 29: msg.UpdateDialogPinnedReorder
	(*UpdateAccountPrivacy)(nil),          // 30: msg.UpdateAccountPrivacy
	(*UpdateLabelItemsAdded)(nil),         // 31: msg.UpdateLabelItemsAdded
	(*UpdateLabelItemsRemoved)(nil),       // 32: msg.UpdateLabelItemsRemoved
	(*UpdateLabelSet)(nil),                // 33: msg.UpdateLabelSet
	(*UpdateLabelDeleted)(nil),            // 34: msg.UpdateLabelDeleted
	(*UpdateUserBlocked)(nil),             // 35: msg.UpdateUserBlocked
	(*UpdateMessagePoll)(nil),             // 36: msg.UpdateMessagePoll
	(*UpdateBotCallbackQuery)(nil),        // 37: msg.UpdateBotCallbackQuery
	(*UpdateBotInlineQuery)(nil),          // 38: msg.UpdateBotInlineQuery
	(*UpdateBotInlineSend)(nil),           // 39: msg.UpdateBotInlineSend
	(*UpdateTeamCreated)(nil),             // 40: msg.UpdateTeamCreated
	(*UpdateTeamMemberAdded)(nil),         // 41: msg.UpdateTeamMemberAdded
	(*UpdateTeamMemberRemoved)(nil),       // 42: msg.UpdateTeamMemberRemoved
	(*UpdateTeamMemberStatus)(nil),        // 43: msg.UpdateTeamMemberStatus
	(*UpdateTeamPhoto)(nil),               // 44: msg.UpdateTeamPhoto
	(*UpdateTeam)(nil),                    // 45: msg.UpdateTeam
	(*UpdateCommunityMessage)(nil),        // 46: msg.UpdateCommunityMessage
	(*UpdateCommunityReadOutbox)(nil),     // 47: msg.UpdateCommunityReadOutbox
	(*UpdateCommunityTyping)(nil),         // 48: msg.UpdateCommunityTyping
	(*UpdateReaction)(nil),                // 49: msg.UpdateReaction
	(*UpdateCalendarEventAdded)(nil),      // 50: msg.UpdateCalendarEventAdded
	(*UpdateCalendarEventRemoved)(nil),    // 51: msg.UpdateCalendarEventRemoved
	(*UpdateCalendarEventEdited)(nil),     // 52: msg.UpdateCalendarEventEdited
	(*UpdateRedirect)(nil),                // 53: msg.UpdateRedirect
	(*ClientRedirect)(nil),                // 54: msg.ClientRedirect
	(*UpdatePhoneCall)(nil),               // 55: msg.UpdatePhoneCall
	(*UpdatePhoneCallStarted)(nil),        // 56: msg.UpdatePhoneCallStarted
	(*UpdatePhoneCallEnded)(nil),          // 57: msg.UpdatePhoneCallEnded
	(*UpdateEnvelope)(nil),                // 58: msg.UpdateEnvelope
	(*User)(nil),                          // 59: msg.User
	(*Group)(nil),                         // 60: msg.Group
	(*UserMessage)(nil),                   // 61: msg.UserMessage
	(*Peer)(nil),                          // 62: msg.Peer
	(TypingAction)(0),                     // 63: msg.TypingAction
	(*UserPhoto)(nil),                     // 64: msg.UserPhoto
	(*PeerNotifySettings)(nil),            // 65: msg.PeerNotifySettings
	(*GroupPhoto)(nil),                    // 66: msg.GroupPhoto
	(*DraftMessage)(nil),                  // 67: msg.DraftMessage
	(*PrivacyRule)(nil),                   // 68: msg.PrivacyRule
	(*Label)(nil),                         // 69: msg.Label
	(*MediaPoll)(nil),                     // 70: msg.MediaPoll
	(*PollResults)(nil),                   // 71: msg.PollResults
	(*GeoLocation)(nil),                   // 72: msg.GeoLocation
	(*Team)(nil),                          // 73: msg.Team
	(*ContactUser)(nil),                   // 74: msg.ContactUser
	(*TeamPhoto)(nil),                     // 75: msg.TeamPhoto
	(*MessageEntity)(nil),                 // 76: msg.MessageEntity
	(*ReactionCounter)(nil),               // 77: msg.ReactionCounter
	(*CalendarEvent)(nil),                 // 78: msg.CalendarEvent
	(PhoneCallAction)(0),                  // 79: msg.PhoneCallAction
}
var file_updates_proto_depIdxs = []int32{
	58, // 0: msg.UpdateDifference.Updates:type_name -> msg.UpdateEnvelope
	59, // 1: msg.UpdateDifference.Users:type_name -> msg.User
	60, // 2: msg.UpdateDifference.Groups:type_name -> msg.Group
	61, // 3: msg.UpdateNewMessage.Message:type_name -> msg.UserMessage
	59, // 4: msg.UpdateNewMessage.Sender:type_name -> msg.User
	61, // 5: msg.UpdateMessageEdited.Message:type_name -> msg.UserMessage
	62, // 6: msg.UpdateMessagesDeleted.Peer:type_name -> msg.Peer
	62, // 7: msg.UpdateReadHistoryInbox.Peer:type_name -> msg.Peer
	62, // 8: msg.UpdateReadHistoryOutbox.Peer:type_name -> msg.Peer
	62, // 9: msg.UpdateMessagePinned.Peer:type_name -> msg.Peer
	63, // 10: msg.UpdateUserTyping.Action:type_name -> msg.TypingAction
	64, // 11: msg.UpdateUserPhoto.Photo:type_name -> msg.UserPhoto
	62, // 12: msg.UpdateNotifySettings.NotifyPeer:type_name -> msg.Peer
	65, // 13: msg.UpdateNotifySettings.Settings:type_name -> msg.PeerNotifySettings
	66, // 14: msg.UpdateGroupPhoto.Photo:type_name -> msg.GroupPhoto
	62, // 15: msg.UpdateReadMessagesContents.Peer:type_name -> msg.Peer
	67, // 16: msg.UpdateDraftMessage.Message:type_name -> msg.DraftMessage
	62, // 17: msg.UpdateDraftMessageCleared.Peer:type_name -> msg.Peer
	62, // 18: msg.UpdateDialogPinned.Peer:type_name -> msg.Peer
	62, // 19: msg.UpdateDialogPinnedReorder.Peer:type_name -> msg.Peer
	68, // 20: msg.UpdateAccountPrivacy.ChatInvite:type_name -> msg.PrivacyRule
	68, // 21: msg.UpdateAccountPrivacy.LastSeen:type_name -> msg.PrivacyRule
	68, // 22: msg.UpdateAccountPrivacy.PhoneNumber:type_name -> msg.PrivacyRule
	68, // 23: msg.UpdateAccountPrivacy.ProfilePhoto:type_name -> msg.PrivacyRule
	68, // 24: msg.UpdateAccountPrivacy.ForwardedMessage:type_name -> msg.PrivacyRule
	68, // 25: msg.UpdateAccountPrivacy.Call:type_name -> msg.PrivacyRule
	62, // 26: msg.UpdateLabelItemsAdded.Peer:type_name -> msg.Peer
	69, // 27: msg.UpdateLabelItemsAdded.Labels:type_name -> msg.Label
	62, // 28: msg.UpdateLabelItemsRemoved.Peer:type_name -> msg.Peer
	69, // 29: msg.UpdateLabelItemsRemoved.Labels:type_name -> msg.Label
	69, // 30: msg.UpdateLabelSet.Labels:type_name -> msg.Label
	70, // 31: msg.UpdateMessagePoll.Poll:type_name -> msg.MediaPoll
	71, // 32: msg.UpdateMessagePoll.Results:type_name -> msg.PollResults
	62, // 33: msg.UpdateBotCallbackQuery.Peer:type_name -> msg.Peer
	62, // 34: msg.UpdateBotInlineQuery.Peer:type_name -> msg.Peer
	72, // 35: msg.UpdateBotInlineQuery.Geo:type_name -> msg.GeoLocation
	72, // 36: msg.UpdateBotInlineSend.Geo:type_name -> msg.GeoLocation
	73, // 37: msg.UpdateTeamCreated.Team:type_name -> msg.Team
	59, // 38: msg.UpdateTeamMemberAdded.User:type_name -> msg.User
	74, // 39: msg.UpdateTeamMemberAdded.Contact:type_name -> msg.ContactUser
	75, // 40: msg.UpdateTeamPhoto.Photo:type_name -> msg.TeamPhoto
	76, // 41: msg.UpdateCommunityMessage.Entities:type_name -> msg.MessageEntity
	63, // 42: msg.UpdateCommunityTyping.Action:type_name -> msg.TypingAction
	77, // 43: msg.UpdateReaction.Counter:type_name -> msg.ReactionCounter
	62, // 44: msg.UpdateReaction.Peer:type_name -> msg.Peer
	59, // 45: msg.UpdateReaction.Sender:type_name -> msg.User
	78, // 46: msg.UpdateCalendarEventAdded.Event:type_name -> msg.CalendarEvent
	78, // 47: msg.UpdateCalendarEventEdited.Event:type_name -> msg.CalendarEvent
	54, // 48: msg.UpdateRedirect.Redirects:type_name -> msg.ClientRedirect
	0,  // 49: msg.ClientRedirect.Target:type_name -> msg.RedirectTarget
	79, // 50: msg.UpdatePhoneCall.Action:type_name -> msg.PhoneCallAction
	62, // 51: msg.UpdatePhoneCallStarted.Peer:type_name -> msg.Peer
	62, // 52: msg.UpdatePhoneCallEnded.Peer:type_name -> msg.Peer
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_updates_proto_init() }
func file_updates_proto_init() {
	if File_updates_proto != nil {
		return
	}
	file_core_types_proto_init()
	file_calendar_proto_init()
	file_chat_messages_medias_proto_init()
	file_chat_phone_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_updates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGetDifference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDifference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTooLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessageEdited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessagesDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReadHistoryInbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReadHistoryOutbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessagePinned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserTyping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsername); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupParticipantAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupParticipantDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupParticipantAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupAdmins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupAdminOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReadMessagesContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthorizationReset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDraftMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDraftMessageCleared); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDialogPinned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDialogPinnedReorder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountPrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelItemsAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelItemsRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserBlocked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMessagePoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBotCallbackQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBotInlineQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBotInlineSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamMemberAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamMemberRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamMemberStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityReadOutbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityTyping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalendarEventAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalendarEventRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCalendarEventEdited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRedirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRedirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneCallStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneCallEnded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_updates_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_updates_proto_goTypes,
		DependencyIndexes: file_updates_proto_depIdxs,
		EnumInfos:         file_updates_proto_enumTypes,
		MessageInfos:      file_updates_proto_msgTypes,
	}.Build()
	File_updates_proto = out.File
	file_updates_proto_rawDesc = nil
	file_updates_proto_goTypes = nil
	file_updates_proto_depIdxs = nil
}
