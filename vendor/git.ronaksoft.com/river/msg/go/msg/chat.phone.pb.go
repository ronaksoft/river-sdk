// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: chat.phone.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiscardReason int32

const (
	DiscardReason_DiscardReasonUnknown    DiscardReason = 0
	DiscardReason_DiscardReasonMissed     DiscardReason = 1
	DiscardReason_DiscardReasonBusy       DiscardReason = 2
	DiscardReason_DiscardReasonHangup     DiscardReason = 3
	DiscardReason_DiscardReasonDisconnect DiscardReason = 4
	DiscardReason_DiscardReasonReserved1  DiscardReason = 5
	DiscardReason_DiscardReasonReserved2  DiscardReason = 6
	DiscardReason_DiscardReasonReserved3  DiscardReason = 7
	DiscardReason_DiscardReasonReserved4  DiscardReason = 8
	DiscardReason_DiscardReasonReserved5  DiscardReason = 9
	DiscardReason_DiscardReasonReserved6  DiscardReason = 10
	DiscardReason_DiscardReasonReserved7  DiscardReason = 11
	DiscardReason_DiscardReasonReserved8  DiscardReason = 12
	DiscardReason_DiscardReasonReserved9  DiscardReason = 13
)

// Enum value maps for DiscardReason.
var (
	DiscardReason_name = map[int32]string{
		0:  "DiscardReasonUnknown",
		1:  "DiscardReasonMissed",
		2:  "DiscardReasonBusy",
		3:  "DiscardReasonHangup",
		4:  "DiscardReasonDisconnect",
		5:  "DiscardReasonReserved1",
		6:  "DiscardReasonReserved2",
		7:  "DiscardReasonReserved3",
		8:  "DiscardReasonReserved4",
		9:  "DiscardReasonReserved5",
		10: "DiscardReasonReserved6",
		11: "DiscardReasonReserved7",
		12: "DiscardReasonReserved8",
		13: "DiscardReasonReserved9",
	}
	DiscardReason_value = map[string]int32{
		"DiscardReasonUnknown":    0,
		"DiscardReasonMissed":     1,
		"DiscardReasonBusy":       2,
		"DiscardReasonHangup":     3,
		"DiscardReasonDisconnect": 4,
		"DiscardReasonReserved1":  5,
		"DiscardReasonReserved2":  6,
		"DiscardReasonReserved3":  7,
		"DiscardReasonReserved4":  8,
		"DiscardReasonReserved5":  9,
		"DiscardReasonReserved6":  10,
		"DiscardReasonReserved7":  11,
		"DiscardReasonReserved8":  12,
		"DiscardReasonReserved9":  13,
	}
)

func (x DiscardReason) Enum() *DiscardReason {
	p := new(DiscardReason)
	*p = x
	return p
}

func (x DiscardReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscardReason) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_phone_proto_enumTypes[0].Descriptor()
}

func (DiscardReason) Type() protoreflect.EnumType {
	return &file_chat_phone_proto_enumTypes[0]
}

func (x DiscardReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscardReason.Descriptor instead.
func (DiscardReason) EnumDescriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{0}
}

type CallDeviceType int32

const (
	CallDeviceType_CallDeviceUnknown   CallDeviceType = 0
	CallDeviceType_CallDeviceDesktop   CallDeviceType = 1
	CallDeviceType_CallDeviceWeb       CallDeviceType = 2
	CallDeviceType_CallDeviceIOS       CallDeviceType = 3
	CallDeviceType_CallDeviceAndroid   CallDeviceType = 4
	CallDeviceType_CallDeviceReserved1 CallDeviceType = 5
	CallDeviceType_CallDeviceReserved2 CallDeviceType = 6
	CallDeviceType_CallDeviceReserved3 CallDeviceType = 7
	CallDeviceType_CallDeviceReserved4 CallDeviceType = 8
	CallDeviceType_CallDeviceReserved5 CallDeviceType = 9
	CallDeviceType_CallDeviceReserved6 CallDeviceType = 10
)

// Enum value maps for CallDeviceType.
var (
	CallDeviceType_name = map[int32]string{
		0:  "CallDeviceUnknown",
		1:  "CallDeviceDesktop",
		2:  "CallDeviceWeb",
		3:  "CallDeviceIOS",
		4:  "CallDeviceAndroid",
		5:  "CallDeviceReserved1",
		6:  "CallDeviceReserved2",
		7:  "CallDeviceReserved3",
		8:  "CallDeviceReserved4",
		9:  "CallDeviceReserved5",
		10: "CallDeviceReserved6",
	}
	CallDeviceType_value = map[string]int32{
		"CallDeviceUnknown":   0,
		"CallDeviceDesktop":   1,
		"CallDeviceWeb":       2,
		"CallDeviceIOS":       3,
		"CallDeviceAndroid":   4,
		"CallDeviceReserved1": 5,
		"CallDeviceReserved2": 6,
		"CallDeviceReserved3": 7,
		"CallDeviceReserved4": 8,
		"CallDeviceReserved5": 9,
		"CallDeviceReserved6": 10,
	}
)

func (x CallDeviceType) Enum() *CallDeviceType {
	p := new(CallDeviceType)
	*p = x
	return p
}

func (x CallDeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallDeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_phone_proto_enumTypes[1].Descriptor()
}

func (CallDeviceType) Type() protoreflect.EnumType {
	return &file_chat_phone_proto_enumTypes[1]
}

func (x CallDeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallDeviceType.Descriptor instead.
func (CallDeviceType) EnumDescriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{1}
}

type PhoneCallRateReason int32

const (
	PhoneCallRateReason_PhoneCallRateReasonEmpty      PhoneCallRateReason = 0
	PhoneCallRateReason_PhoneCallRateReasonReserved1  PhoneCallRateReason = 1
	PhoneCallRateReason_PhoneCallRateReasonReserved2  PhoneCallRateReason = 2
	PhoneCallRateReason_PhoneCallRateReasonReserved3  PhoneCallRateReason = 3
	PhoneCallRateReason_PhoneCallRateReasonReserved4  PhoneCallRateReason = 4
	PhoneCallRateReason_PhoneCallRateReasonReserved5  PhoneCallRateReason = 5
	PhoneCallRateReason_PhoneCallRateReasonReserved6  PhoneCallRateReason = 6
	PhoneCallRateReason_PhoneCallRateReasonReserved7  PhoneCallRateReason = 7
	PhoneCallRateReason_PhoneCallRateReasonReserved8  PhoneCallRateReason = 8
	PhoneCallRateReason_PhoneCallRateReasonReserved9  PhoneCallRateReason = 9
	PhoneCallRateReason_PhoneCallRateReasonReserved10 PhoneCallRateReason = 10
	PhoneCallRateReason_PhoneCallRateReasonReserved11 PhoneCallRateReason = 11
	PhoneCallRateReason_PhoneCallRateReasonReserved12 PhoneCallRateReason = 12
	PhoneCallRateReason_PhoneCallRateReasonReserved13 PhoneCallRateReason = 13
	PhoneCallRateReason_PhoneCallRateReasonReserved14 PhoneCallRateReason = 14
	PhoneCallRateReason_PhoneCallRateReasonReserved15 PhoneCallRateReason = 15
)

// Enum value maps for PhoneCallRateReason.
var (
	PhoneCallRateReason_name = map[int32]string{
		0:  "PhoneCallRateReasonEmpty",
		1:  "PhoneCallRateReasonReserved1",
		2:  "PhoneCallRateReasonReserved2",
		3:  "PhoneCallRateReasonReserved3",
		4:  "PhoneCallRateReasonReserved4",
		5:  "PhoneCallRateReasonReserved5",
		6:  "PhoneCallRateReasonReserved6",
		7:  "PhoneCallRateReasonReserved7",
		8:  "PhoneCallRateReasonReserved8",
		9:  "PhoneCallRateReasonReserved9",
		10: "PhoneCallRateReasonReserved10",
		11: "PhoneCallRateReasonReserved11",
		12: "PhoneCallRateReasonReserved12",
		13: "PhoneCallRateReasonReserved13",
		14: "PhoneCallRateReasonReserved14",
		15: "PhoneCallRateReasonReserved15",
	}
	PhoneCallRateReason_value = map[string]int32{
		"PhoneCallRateReasonEmpty":      0,
		"PhoneCallRateReasonReserved1":  1,
		"PhoneCallRateReasonReserved2":  2,
		"PhoneCallRateReasonReserved3":  3,
		"PhoneCallRateReasonReserved4":  4,
		"PhoneCallRateReasonReserved5":  5,
		"PhoneCallRateReasonReserved6":  6,
		"PhoneCallRateReasonReserved7":  7,
		"PhoneCallRateReasonReserved8":  8,
		"PhoneCallRateReasonReserved9":  9,
		"PhoneCallRateReasonReserved10": 10,
		"PhoneCallRateReasonReserved11": 11,
		"PhoneCallRateReasonReserved12": 12,
		"PhoneCallRateReasonReserved13": 13,
		"PhoneCallRateReasonReserved14": 14,
		"PhoneCallRateReasonReserved15": 15,
	}
)

func (x PhoneCallRateReason) Enum() *PhoneCallRateReason {
	p := new(PhoneCallRateReason)
	*p = x
	return p
}

func (x PhoneCallRateReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneCallRateReason) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_phone_proto_enumTypes[2].Descriptor()
}

func (PhoneCallRateReason) Type() protoreflect.EnumType {
	return &file_chat_phone_proto_enumTypes[2]
}

func (x PhoneCallRateReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneCallRateReason.Descriptor instead.
func (PhoneCallRateReason) EnumDescriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{2}
}

type PhoneCallAction int32

const (
	PhoneCallAction_PhoneCallEmpty                PhoneCallAction = 0
	PhoneCallAction_PhoneCallAccepted             PhoneCallAction = 1
	PhoneCallAction_PhoneCallRequested            PhoneCallAction = 2
	PhoneCallAction_PhoneCallCallWaiting          PhoneCallAction = 3
	PhoneCallAction_PhoneCallDiscarded            PhoneCallAction = 4
	PhoneCallAction_PhoneCallIceExchange          PhoneCallAction = 5
	PhoneCallAction_PhoneCallMediaSettingsChanged PhoneCallAction = 6
	PhoneCallAction_PhoneCallReactionSet          PhoneCallAction = 7
	PhoneCallAction_PhoneCallSDPOffer             PhoneCallAction = 8
	PhoneCallAction_PhoneCallSDPAnswer            PhoneCallAction = 9
	PhoneCallAction_PhoneCallAck                  PhoneCallAction = 10
	PhoneCallAction_PhoneCallParticipantAdded     PhoneCallAction = 11
	PhoneCallAction_PhoneCallParticipantRemoved   PhoneCallAction = 12
	PhoneCallAction_PhoneCallJoinRequested        PhoneCallAction = 13
	PhoneCallAction_PhoneCallAdminUpdated         PhoneCallAction = 14
	PhoneCallAction_PhoneCallScreenShare          PhoneCallAction = 15
	PhoneCallAction_PhoneCallPicked               PhoneCallAction = 16
	PhoneCallAction_PhoneCallReserved13           PhoneCallAction = 17
	PhoneCallAction_PhoneCallReserved14           PhoneCallAction = 18
	PhoneCallAction_PhoneCallReserved15           PhoneCallAction = 19
	PhoneCallAction_PhoneCallReserved16           PhoneCallAction = 20
	PhoneCallAction_PhoneCallReserved17           PhoneCallAction = 21
	PhoneCallAction_PhoneCallReserved18           PhoneCallAction = 22
	PhoneCallAction_PhoneCallReserved19           PhoneCallAction = 23
)

// Enum value maps for PhoneCallAction.
var (
	PhoneCallAction_name = map[int32]string{
		0:  "PhoneCallEmpty",
		1:  "PhoneCallAccepted",
		2:  "PhoneCallRequested",
		3:  "PhoneCallCallWaiting",
		4:  "PhoneCallDiscarded",
		5:  "PhoneCallIceExchange",
		6:  "PhoneCallMediaSettingsChanged",
		7:  "PhoneCallReactionSet",
		8:  "PhoneCallSDPOffer",
		9:  "PhoneCallSDPAnswer",
		10: "PhoneCallAck",
		11: "PhoneCallParticipantAdded",
		12: "PhoneCallParticipantRemoved",
		13: "PhoneCallJoinRequested",
		14: "PhoneCallAdminUpdated",
		15: "PhoneCallScreenShare",
		16: "PhoneCallPicked",
		17: "PhoneCallReserved13",
		18: "PhoneCallReserved14",
		19: "PhoneCallReserved15",
		20: "PhoneCallReserved16",
		21: "PhoneCallReserved17",
		22: "PhoneCallReserved18",
		23: "PhoneCallReserved19",
	}
	PhoneCallAction_value = map[string]int32{
		"PhoneCallEmpty":                0,
		"PhoneCallAccepted":             1,
		"PhoneCallRequested":            2,
		"PhoneCallCallWaiting":          3,
		"PhoneCallDiscarded":            4,
		"PhoneCallIceExchange":          5,
		"PhoneCallMediaSettingsChanged": 6,
		"PhoneCallReactionSet":          7,
		"PhoneCallSDPOffer":             8,
		"PhoneCallSDPAnswer":            9,
		"PhoneCallAck":                  10,
		"PhoneCallParticipantAdded":     11,
		"PhoneCallParticipantRemoved":   12,
		"PhoneCallJoinRequested":        13,
		"PhoneCallAdminUpdated":         14,
		"PhoneCallScreenShare":          15,
		"PhoneCallPicked":               16,
		"PhoneCallReserved13":           17,
		"PhoneCallReserved14":           18,
		"PhoneCallReserved15":           19,
		"PhoneCallReserved16":           20,
		"PhoneCallReserved17":           21,
		"PhoneCallReserved18":           22,
		"PhoneCallReserved19":           23,
	}
)

func (x PhoneCallAction) Enum() *PhoneCallAction {
	p := new(PhoneCallAction)
	*p = x
	return p
}

func (x PhoneCallAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneCallAction) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_phone_proto_enumTypes[3].Descriptor()
}

func (PhoneCallAction) Type() protoreflect.EnumType {
	return &file_chat_phone_proto_enumTypes[3]
}

func (x PhoneCallAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneCallAction.Descriptor instead.
func (PhoneCallAction) EnumDescriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{3}
}

// PhoneInitCall
// @Function
// @Return: PhoneInit
type PhoneInitCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *PhoneInitCall) Reset() {
	*x = PhoneInitCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneInitCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneInitCall) ProtoMessage() {}

func (x *PhoneInitCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneInitCall.ProtoReflect.Descriptor instead.
func (*PhoneInitCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{0}
}

func (x *PhoneInitCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// PhoneRequestCall
// @Function
// @Return: PhoneCall
type PhoneRequestCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID     int64                  `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer         *InputPeer             `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Initiator    bool                   `protobuf:"varint,3,opt,name=Initiator,proto3" json:"Initiator,omitempty"`
	Participants []*PhoneParticipantSDP `protobuf:"bytes,4,rep,name=Participants,proto3" json:"Participants,omitempty"`
	CallID       int64                  `protobuf:"varint,5,opt,name=CallID,proto3" json:"CallID,omitempty"`
	DeviceType   CallDeviceType         `protobuf:"varint,6,opt,name=DeviceType,proto3,enum=msg.CallDeviceType" json:"DeviceType,omitempty"`
}

func (x *PhoneRequestCall) Reset() {
	*x = PhoneRequestCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneRequestCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneRequestCall) ProtoMessage() {}

func (x *PhoneRequestCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneRequestCall.ProtoReflect.Descriptor instead.
func (*PhoneRequestCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{1}
}

func (x *PhoneRequestCall) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *PhoneRequestCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneRequestCall) GetInitiator() bool {
	if x != nil {
		return x.Initiator
	}
	return false
}

func (x *PhoneRequestCall) GetParticipants() []*PhoneParticipantSDP {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *PhoneRequestCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneRequestCall) GetDeviceType() CallDeviceType {
	if x != nil {
		return x.DeviceType
	}
	return CallDeviceType_CallDeviceUnknown
}

// PhoneAcceptCall
// @Function
// @Return: PhoneCall
type PhoneAcceptCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer         *InputPeer             `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID       int64                  `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	Participants []*PhoneParticipantSDP `protobuf:"bytes,3,rep,name=Participants,proto3" json:"Participants,omitempty"`
	DeviceType   CallDeviceType         `protobuf:"varint,4,opt,name=DeviceType,proto3,enum=msg.CallDeviceType" json:"DeviceType,omitempty"`
}

func (x *PhoneAcceptCall) Reset() {
	*x = PhoneAcceptCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneAcceptCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneAcceptCall) ProtoMessage() {}

func (x *PhoneAcceptCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneAcceptCall.ProtoReflect.Descriptor instead.
func (*PhoneAcceptCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{2}
}

func (x *PhoneAcceptCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneAcceptCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneAcceptCall) GetParticipants() []*PhoneParticipantSDP {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *PhoneAcceptCall) GetDeviceType() CallDeviceType {
	if x != nil {
		return x.DeviceType
	}
	return CallDeviceType_CallDeviceUnknown
}

// PhoneDiscardCall
// @Function
// @Return: Bool
type PhoneDiscardCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer     *InputPeer    `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID   int64         `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	Duration int32         `protobuf:"varint,4,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Reason   DiscardReason `protobuf:"varint,5,opt,name=Reason,proto3,enum=msg.DiscardReason" json:"Reason,omitempty"`
}

func (x *PhoneDiscardCall) Reset() {
	*x = PhoneDiscardCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneDiscardCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneDiscardCall) ProtoMessage() {}

func (x *PhoneDiscardCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneDiscardCall.ProtoReflect.Descriptor instead.
func (*PhoneDiscardCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{3}
}

func (x *PhoneDiscardCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneDiscardCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneDiscardCall) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PhoneDiscardCall) GetReason() DiscardReason {
	if x != nil {
		return x.Reason
	}
	return DiscardReason_DiscardReasonUnknown
}

// PhoneAddParticipant
// @Function
// @Return: PhoneParticipants
type PhoneJoinCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID int64      `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
}

func (x *PhoneJoinCall) Reset() {
	*x = PhoneJoinCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneJoinCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneJoinCall) ProtoMessage() {}

func (x *PhoneJoinCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneJoinCall.ProtoReflect.Descriptor instead.
func (*PhoneJoinCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{4}
}

func (x *PhoneJoinCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneJoinCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

// PhoneAddParticipant
// @Function
// @Return: Bool
type PhoneAddParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer         *InputPeer   `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID       int64        `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	Participants []*InputUser `protobuf:"bytes,3,rep,name=Participants,proto3" json:"Participants,omitempty"`
}

func (x *PhoneAddParticipant) Reset() {
	*x = PhoneAddParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneAddParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneAddParticipant) ProtoMessage() {}

func (x *PhoneAddParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneAddParticipant.ProtoReflect.Descriptor instead.
func (*PhoneAddParticipant) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{5}
}

func (x *PhoneAddParticipant) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneAddParticipant) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneAddParticipant) GetParticipants() []*InputUser {
	if x != nil {
		return x.Participants
	}
	return nil
}

// PhoneRemoveParticipant
// @Function
// @Return: Bool
type PhoneRemoveParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer         *InputPeer   `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID       int64        `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	Participants []*InputUser `protobuf:"bytes,3,rep,name=Participants,proto3" json:"Participants,omitempty"`
	Timeout      bool         `protobuf:"varint,4,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *PhoneRemoveParticipant) Reset() {
	*x = PhoneRemoveParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneRemoveParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneRemoveParticipant) ProtoMessage() {}

func (x *PhoneRemoveParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneRemoveParticipant.ProtoReflect.Descriptor instead.
func (*PhoneRemoveParticipant) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{6}
}

func (x *PhoneRemoveParticipant) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneRemoveParticipant) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneRemoveParticipant) GetParticipants() []*InputUser {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *PhoneRemoveParticipant) GetTimeout() bool {
	if x != nil {
		return x.Timeout
	}
	return false
}

// PhoneGetParticipants
// @Function
// @Return: PhoneParticipants
type PhoneGetParticipants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID int64      `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
}

func (x *PhoneGetParticipants) Reset() {
	*x = PhoneGetParticipants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneGetParticipants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneGetParticipants) ProtoMessage() {}

func (x *PhoneGetParticipants) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneGetParticipants.ProtoReflect.Descriptor instead.
func (*PhoneGetParticipants) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{7}
}

func (x *PhoneGetParticipants) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneGetParticipants) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

// PhoneUpdateCall
// @Function
// @Return: Bool
type PhoneUpdateCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer         *InputPeer      `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID       int64           `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	Participants []*InputUser    `protobuf:"bytes,3,rep,name=Participants,proto3" json:"Participants,omitempty"`
	Action       PhoneCallAction `protobuf:"varint,7,opt,name=Action,proto3,enum=msg.PhoneCallAction" json:"Action,omitempty"`
	ActionData   []byte          `protobuf:"bytes,8,opt,name=ActionData,proto3" json:"ActionData,omitempty"`
}

func (x *PhoneUpdateCall) Reset() {
	*x = PhoneUpdateCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneUpdateCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneUpdateCall) ProtoMessage() {}

func (x *PhoneUpdateCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneUpdateCall.ProtoReflect.Descriptor instead.
func (*PhoneUpdateCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{8}
}

func (x *PhoneUpdateCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneUpdateCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneUpdateCall) GetParticipants() []*InputUser {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *PhoneUpdateCall) GetAction() PhoneCallAction {
	if x != nil {
		return x.Action
	}
	return PhoneCallAction_PhoneCallEmpty
}

func (x *PhoneUpdateCall) GetActionData() []byte {
	if x != nil {
		return x.ActionData
	}
	return nil
}

// PhoneRateCall
// @Function
// @Return: Bool
type PhoneRateCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *InputPeer          `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID     int64               `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	Rate       int32               `protobuf:"varint,3,opt,name=Rate,proto3" json:"Rate,omitempty"`
	ReasonType PhoneCallRateReason `protobuf:"varint,4,opt,name=ReasonType,proto3,enum=msg.PhoneCallRateReason" json:"ReasonType,omitempty"`
	ReasonData []byte              `protobuf:"bytes,5,opt,name=ReasonData,proto3" json:"ReasonData,omitempty"`
}

func (x *PhoneRateCall) Reset() {
	*x = PhoneRateCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneRateCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneRateCall) ProtoMessage() {}

func (x *PhoneRateCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneRateCall.ProtoReflect.Descriptor instead.
func (*PhoneRateCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{9}
}

func (x *PhoneRateCall) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneRateCall) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneRateCall) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PhoneRateCall) GetReasonType() PhoneCallRateReason {
	if x != nil {
		return x.ReasonType
	}
	return PhoneCallRateReason_PhoneCallRateReasonEmpty
}

func (x *PhoneRateCall) GetReasonData() []byte {
	if x != nil {
		return x.ReasonData
	}
	return nil
}

// PhoneGetHistory
// @Function
// Returns:     PhoneCallsMany
type PhoneGetHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	After int64 `protobuf:"varint,2,opt,name=After,proto3" json:"After,omitempty"`
}

func (x *PhoneGetHistory) Reset() {
	*x = PhoneGetHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneGetHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneGetHistory) ProtoMessage() {}

func (x *PhoneGetHistory) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneGetHistory.ProtoReflect.Descriptor instead.
func (*PhoneGetHistory) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{10}
}

func (x *PhoneGetHistory) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PhoneGetHistory) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

type PhoneCallRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TeamID    int64 `protobuf:"varint,2,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	CallID    int64 `protobuf:"varint,3,opt,name=CallID,proto3" json:"CallID,omitempty"`
	CreatedOn int64 `protobuf:"varint,4,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
	EndedOn   int64 `protobuf:"varint,5,opt,name=EndedOn,proto3" json:"EndedOn,omitempty"`
	Incoming  bool  `protobuf:"varint,6,opt,name=Incoming,proto3" json:"Incoming,omitempty"`
	PeerID    int64 `protobuf:"varint,7,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType  int32 `protobuf:"varint,8,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
	Status    int32 `protobuf:"varint,9,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *PhoneCallRecord) Reset() {
	*x = PhoneCallRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneCallRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneCallRecord) ProtoMessage() {}

func (x *PhoneCallRecord) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneCallRecord.ProtoReflect.Descriptor instead.
func (*PhoneCallRecord) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{11}
}

func (x *PhoneCallRecord) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PhoneCallRecord) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *PhoneCallRecord) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneCallRecord) GetCreatedOn() int64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

func (x *PhoneCallRecord) GetEndedOn() int64 {
	if x != nil {
		return x.EndedOn
	}
	return 0
}

func (x *PhoneCallRecord) GetIncoming() bool {
	if x != nil {
		return x.Incoming
	}
	return false
}

func (x *PhoneCallRecord) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *PhoneCallRecord) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *PhoneCallRecord) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PhoneCallsMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneCalls []*PhoneCallRecord `protobuf:"bytes,1,rep,name=PhoneCalls,proto3" json:"PhoneCalls,omitempty"`
	Users      []*User            `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Groups     []*Group           `protobuf:"bytes,3,rep,name=Groups,proto3" json:"Groups,omitempty"`
	Continuous bool               `protobuf:"varint,4,opt,name=Continuous,proto3" json:"Continuous,omitempty"`
	Empty      bool               `protobuf:"varint,5,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *PhoneCallsMany) Reset() {
	*x = PhoneCallsMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneCallsMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneCallsMany) ProtoMessage() {}

func (x *PhoneCallsMany) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneCallsMany.ProtoReflect.Descriptor instead.
func (*PhoneCallsMany) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{12}
}

func (x *PhoneCallsMany) GetPhoneCalls() []*PhoneCallRecord {
	if x != nil {
		return x.PhoneCalls
	}
	return nil
}

func (x *PhoneCallsMany) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *PhoneCallsMany) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *PhoneCallsMany) GetContinuous() bool {
	if x != nil {
		return x.Continuous
	}
	return false
}

func (x *PhoneCallsMany) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

// PhoneUpdateAdmin
// @Function
// @Return: Bool
type PhoneUpdateAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	CallID int64      `protobuf:"varint,2,opt,name=CallID,proto3" json:"CallID,omitempty"`
	User   *InputUser `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`
	Admin  bool       `protobuf:"varint,4,opt,name=Admin,proto3" json:"Admin,omitempty"`
}

func (x *PhoneUpdateAdmin) Reset() {
	*x = PhoneUpdateAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneUpdateAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneUpdateAdmin) ProtoMessage() {}

func (x *PhoneUpdateAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneUpdateAdmin.ProtoReflect.Descriptor instead.
func (*PhoneUpdateAdmin) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{13}
}

func (x *PhoneUpdateAdmin) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneUpdateAdmin) GetCallID() int64 {
	if x != nil {
		return x.CallID
	}
	return 0
}

func (x *PhoneUpdateAdmin) GetUser() *InputUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PhoneUpdateAdmin) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

// PhoneCall
type PhoneCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CreatedOn int64 `protobuf:"varint,2,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
}

func (x *PhoneCall) Reset() {
	*x = PhoneCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneCall) ProtoMessage() {}

func (x *PhoneCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneCall.ProtoReflect.Descriptor instead.
func (*PhoneCall) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{14}
}

func (x *PhoneCall) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *PhoneCall) GetCreatedOn() int64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

// PhoneInit
type PhoneInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IceServers []*IceServer `protobuf:"bytes,1,rep,name=IceServers,proto3" json:"IceServers,omitempty"`
}

func (x *PhoneInit) Reset() {
	*x = PhoneInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneInit) ProtoMessage() {}

func (x *PhoneInit) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneInit.ProtoReflect.Descriptor instead.
func (*PhoneInit) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{15}
}

func (x *PhoneInit) GetIceServers() []*IceServer {
	if x != nil {
		return x.IceServers
	}
	return nil
}

// PhoneParticipants
type PhoneParticipants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants []*PhoneParticipant `protobuf:"bytes,1,rep,name=Participants,proto3" json:"Participants,omitempty"`
}

func (x *PhoneParticipants) Reset() {
	*x = PhoneParticipants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneParticipants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneParticipants) ProtoMessage() {}

func (x *PhoneParticipants) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneParticipants.ProtoReflect.Descriptor instead.
func (*PhoneParticipants) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{16}
}

func (x *PhoneParticipants) GetParticipants() []*PhoneParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

// IceServer
type IceServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls       []string `protobuf:"bytes,1,rep,name=Urls,proto3" json:"Urls,omitempty"`
	Username   string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Credential string   `protobuf:"bytes,3,opt,name=Credential,proto3" json:"Credential,omitempty"`
}

func (x *IceServer) Reset() {
	*x = IceServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IceServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IceServer) ProtoMessage() {}

func (x *IceServer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IceServer.ProtoReflect.Descriptor instead.
func (*IceServer) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{17}
}

func (x *IceServer) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *IceServer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *IceServer) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

// PhoneParticipant
type PhoneParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId int32      `protobuf:"varint,1,opt,name=ConnectionId,proto3" json:"ConnectionId,omitempty"`
	Peer         *InputUser `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Initiator    bool       `protobuf:"varint,3,opt,name=Initiator,proto3" json:"Initiator,omitempty"`
	Admin        bool       `protobuf:"varint,4,opt,name=Admin,proto3" json:"Admin,omitempty"`
}

func (x *PhoneParticipant) Reset() {
	*x = PhoneParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneParticipant) ProtoMessage() {}

func (x *PhoneParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneParticipant.ProtoReflect.Descriptor instead.
func (*PhoneParticipant) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{18}
}

func (x *PhoneParticipant) GetConnectionId() int32 {
	if x != nil {
		return x.ConnectionId
	}
	return 0
}

func (x *PhoneParticipant) GetPeer() *InputUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneParticipant) GetInitiator() bool {
	if x != nil {
		return x.Initiator
	}
	return false
}

func (x *PhoneParticipant) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

// PhoneParticipantSDP
type PhoneParticipantSDP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId int32      `protobuf:"varint,1,opt,name=ConnectionId,proto3" json:"ConnectionId,omitempty"`
	Peer         *InputUser `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	SDP          string     `protobuf:"bytes,3,opt,name=SDP,proto3" json:"SDP,omitempty"`
	Type         string     `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *PhoneParticipantSDP) Reset() {
	*x = PhoneParticipantSDP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneParticipantSDP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneParticipantSDP) ProtoMessage() {}

func (x *PhoneParticipantSDP) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneParticipantSDP.ProtoReflect.Descriptor instead.
func (*PhoneParticipantSDP) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{19}
}

func (x *PhoneParticipantSDP) GetConnectionId() int32 {
	if x != nil {
		return x.ConnectionId
	}
	return 0
}

func (x *PhoneParticipantSDP) GetPeer() *InputUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PhoneParticipantSDP) GetSDP() string {
	if x != nil {
		return x.SDP
	}
	return ""
}

func (x *PhoneParticipantSDP) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// PhoneActionCallEmpty
type PhoneActionCallEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empty bool `protobuf:"varint,1,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *PhoneActionCallEmpty) Reset() {
	*x = PhoneActionCallEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionCallEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionCallEmpty) ProtoMessage() {}

func (x *PhoneActionCallEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionCallEmpty.ProtoReflect.Descriptor instead.
func (*PhoneActionCallEmpty) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{20}
}

func (x *PhoneActionCallEmpty) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

// PhoneActionAccepted
type PhoneActionAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SDP        string         `protobuf:"bytes,1,opt,name=SDP,proto3" json:"SDP,omitempty"`
	Type       string         `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	DeviceType CallDeviceType `protobuf:"varint,3,opt,name=DeviceType,proto3,enum=msg.CallDeviceType" json:"DeviceType,omitempty"`
}

func (x *PhoneActionAccepted) Reset() {
	*x = PhoneActionAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionAccepted) ProtoMessage() {}

func (x *PhoneActionAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionAccepted.ProtoReflect.Descriptor instead.
func (*PhoneActionAccepted) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{21}
}

func (x *PhoneActionAccepted) GetSDP() string {
	if x != nil {
		return x.SDP
	}
	return ""
}

func (x *PhoneActionAccepted) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhoneActionAccepted) GetDeviceType() CallDeviceType {
	if x != nil {
		return x.DeviceType
	}
	return CallDeviceType_CallDeviceUnknown
}

// PhoneActionRequested
type PhoneActionRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SDP          string              `protobuf:"bytes,1,opt,name=SDP,proto3" json:"SDP,omitempty"`
	Type         string              `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Participants []*PhoneParticipant `protobuf:"bytes,3,rep,name=Participants,proto3" json:"Participants,omitempty"`
	DeviceType   CallDeviceType      `protobuf:"varint,4,opt,name=DeviceType,proto3,enum=msg.CallDeviceType" json:"DeviceType,omitempty"`
}

func (x *PhoneActionRequested) Reset() {
	*x = PhoneActionRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionRequested) ProtoMessage() {}

func (x *PhoneActionRequested) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionRequested.ProtoReflect.Descriptor instead.
func (*PhoneActionRequested) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{22}
}

func (x *PhoneActionRequested) GetSDP() string {
	if x != nil {
		return x.SDP
	}
	return ""
}

func (x *PhoneActionRequested) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhoneActionRequested) GetParticipants() []*PhoneParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *PhoneActionRequested) GetDeviceType() CallDeviceType {
	if x != nil {
		return x.DeviceType
	}
	return CallDeviceType_CallDeviceUnknown
}

// PhoneActionCallWaiting
type PhoneActionCallWaiting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empty bool `protobuf:"varint,1,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *PhoneActionCallWaiting) Reset() {
	*x = PhoneActionCallWaiting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionCallWaiting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionCallWaiting) ProtoMessage() {}

func (x *PhoneActionCallWaiting) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionCallWaiting.ProtoReflect.Descriptor instead.
func (*PhoneActionCallWaiting) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{23}
}

func (x *PhoneActionCallWaiting) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

// PhoneActionDiscarded
type PhoneActionDiscarded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration  int32         `protobuf:"varint,1,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Video     bool          `protobuf:"varint,2,opt,name=Video,proto3" json:"Video,omitempty"`
	Reason    DiscardReason `protobuf:"varint,3,opt,name=Reason,proto3,enum=msg.DiscardReason" json:"Reason,omitempty"`
	Terminate bool          `protobuf:"varint,4,opt,name=Terminate,proto3" json:"Terminate,omitempty"`
}

func (x *PhoneActionDiscarded) Reset() {
	*x = PhoneActionDiscarded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionDiscarded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionDiscarded) ProtoMessage() {}

func (x *PhoneActionDiscarded) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionDiscarded.ProtoReflect.Descriptor instead.
func (*PhoneActionDiscarded) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{24}
}

func (x *PhoneActionDiscarded) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PhoneActionDiscarded) GetVideo() bool {
	if x != nil {
		return x.Video
	}
	return false
}

func (x *PhoneActionDiscarded) GetReason() DiscardReason {
	if x != nil {
		return x.Reason
	}
	return DiscardReason_DiscardReasonUnknown
}

func (x *PhoneActionDiscarded) GetTerminate() bool {
	if x != nil {
		return x.Terminate
	}
	return false
}

// PhoneActionIceExchange
type PhoneActionIceExchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidate        string `protobuf:"bytes,1,opt,name=Candidate,proto3" json:"Candidate,omitempty"`
	SdpMLineIndex    int64  `protobuf:"varint,2,opt,name=SdpMLineIndex,proto3" json:"SdpMLineIndex,omitempty"`
	SdpMid           string `protobuf:"bytes,3,opt,name=SdpMid,proto3" json:"SdpMid,omitempty"`
	UsernameFragment string `protobuf:"bytes,4,opt,name=UsernameFragment,proto3" json:"UsernameFragment,omitempty"`
}

func (x *PhoneActionIceExchange) Reset() {
	*x = PhoneActionIceExchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionIceExchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionIceExchange) ProtoMessage() {}

func (x *PhoneActionIceExchange) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionIceExchange.ProtoReflect.Descriptor instead.
func (*PhoneActionIceExchange) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{25}
}

func (x *PhoneActionIceExchange) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *PhoneActionIceExchange) GetSdpMLineIndex() int64 {
	if x != nil {
		return x.SdpMLineIndex
	}
	return 0
}

func (x *PhoneActionIceExchange) GetSdpMid() string {
	if x != nil {
		return x.SdpMid
	}
	return ""
}

func (x *PhoneActionIceExchange) GetUsernameFragment() string {
	if x != nil {
		return x.UsernameFragment
	}
	return ""
}

// PhoneActionAck
type PhoneActionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PhoneActionAck) Reset() {
	*x = PhoneActionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionAck) ProtoMessage() {}

func (x *PhoneActionAck) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionAck.ProtoReflect.Descriptor instead.
func (*PhoneActionAck) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{26}
}

// PhoneActionParticipantAdded
type PhoneActionParticipantAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants []*PhoneParticipant `protobuf:"bytes,1,rep,name=Participants,proto3" json:"Participants,omitempty"`
}

func (x *PhoneActionParticipantAdded) Reset() {
	*x = PhoneActionParticipantAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionParticipantAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionParticipantAdded) ProtoMessage() {}

func (x *PhoneActionParticipantAdded) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionParticipantAdded.ProtoReflect.Descriptor instead.
func (*PhoneActionParticipantAdded) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{27}
}

func (x *PhoneActionParticipantAdded) GetParticipants() []*PhoneParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

// PhoneActionParticipantRemoved
type PhoneActionParticipantRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []int64 `protobuf:"varint,1,rep,packed,name=UserIDs,proto3" json:"UserIDs,omitempty"`
	Timeout bool    `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *PhoneActionParticipantRemoved) Reset() {
	*x = PhoneActionParticipantRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionParticipantRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionParticipantRemoved) ProtoMessage() {}

func (x *PhoneActionParticipantRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionParticipantRemoved.ProtoReflect.Descriptor instead.
func (*PhoneActionParticipantRemoved) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{28}
}

func (x *PhoneActionParticipantRemoved) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *PhoneActionParticipantRemoved) GetTimeout() bool {
	if x != nil {
		return x.Timeout
	}
	return false
}

// PhoneActionJoinRequested
type PhoneActionJoinRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs []int64 `protobuf:"varint,1,rep,packed,name=UserIDs,proto3" json:"UserIDs,omitempty"`
}

func (x *PhoneActionJoinRequested) Reset() {
	*x = PhoneActionJoinRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionJoinRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionJoinRequested) ProtoMessage() {}

func (x *PhoneActionJoinRequested) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionJoinRequested.ProtoReflect.Descriptor instead.
func (*PhoneActionJoinRequested) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{29}
}

func (x *PhoneActionJoinRequested) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

// PhoneActionAdminUpdated
type PhoneActionAdminUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Admin  bool  `protobuf:"varint,2,opt,name=Admin,proto3" json:"Admin,omitempty"`
}

func (x *PhoneActionAdminUpdated) Reset() {
	*x = PhoneActionAdminUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionAdminUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionAdminUpdated) ProtoMessage() {}

func (x *PhoneActionAdminUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionAdminUpdated.ProtoReflect.Descriptor instead.
func (*PhoneActionAdminUpdated) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{30}
}

func (x *PhoneActionAdminUpdated) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PhoneActionAdminUpdated) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

// PhoneActionScreenShare
type PhoneActionScreenShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable   bool     `protobuf:"varint,1,opt,name=Enable,proto3" json:"Enable,omitempty"`
	TrackIDs []string `protobuf:"bytes,2,rep,name=TrackIDs,proto3" json:"TrackIDs,omitempty"`
}

func (x *PhoneActionScreenShare) Reset() {
	*x = PhoneActionScreenShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionScreenShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionScreenShare) ProtoMessage() {}

func (x *PhoneActionScreenShare) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionScreenShare.ProtoReflect.Descriptor instead.
func (*PhoneActionScreenShare) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{31}
}

func (x *PhoneActionScreenShare) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *PhoneActionScreenShare) GetTrackIDs() []string {
	if x != nil {
		return x.TrackIDs
	}
	return nil
}

// PhoneActionPicked
type PhoneActionPicked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthID int64 `protobuf:"varint,1,opt,name=AuthID,proto3" json:"AuthID,omitempty"`
}

func (x *PhoneActionPicked) Reset() {
	*x = PhoneActionPicked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionPicked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionPicked) ProtoMessage() {}

func (x *PhoneActionPicked) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionPicked.ProtoReflect.Descriptor instead.
func (*PhoneActionPicked) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{32}
}

func (x *PhoneActionPicked) GetAuthID() int64 {
	if x != nil {
		return x.AuthID
	}
	return 0
}

// PhoneActionMediaSettingsUpdated
type PhoneActionMediaSettingsUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Video       bool `protobuf:"varint,1,opt,name=Video,proto3" json:"Video,omitempty"`
	Audio       bool `protobuf:"varint,2,opt,name=Audio,proto3" json:"Audio,omitempty"`
	ScreenShare bool `protobuf:"varint,3,opt,name=ScreenShare,proto3" json:"ScreenShare,omitempty"`
}

func (x *PhoneActionMediaSettingsUpdated) Reset() {
	*x = PhoneActionMediaSettingsUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionMediaSettingsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionMediaSettingsUpdated) ProtoMessage() {}

func (x *PhoneActionMediaSettingsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionMediaSettingsUpdated.ProtoReflect.Descriptor instead.
func (*PhoneActionMediaSettingsUpdated) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{33}
}

func (x *PhoneActionMediaSettingsUpdated) GetVideo() bool {
	if x != nil {
		return x.Video
	}
	return false
}

func (x *PhoneActionMediaSettingsUpdated) GetAudio() bool {
	if x != nil {
		return x.Audio
	}
	return false
}

func (x *PhoneActionMediaSettingsUpdated) GetScreenShare() bool {
	if x != nil {
		return x.ScreenShare
	}
	return false
}

// PhoneActionReactionSet
type PhoneActionReactionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reaction string `protobuf:"bytes,1,opt,name=Reaction,proto3" json:"Reaction,omitempty"`
}

func (x *PhoneActionReactionSet) Reset() {
	*x = PhoneActionReactionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionReactionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionReactionSet) ProtoMessage() {}

func (x *PhoneActionReactionSet) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionReactionSet.ProtoReflect.Descriptor instead.
func (*PhoneActionReactionSet) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{34}
}

func (x *PhoneActionReactionSet) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

// PhoneActionSDPOffer
type PhoneActionSDPOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SDP  string `protobuf:"bytes,1,opt,name=SDP,proto3" json:"SDP,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *PhoneActionSDPOffer) Reset() {
	*x = PhoneActionSDPOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionSDPOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionSDPOffer) ProtoMessage() {}

func (x *PhoneActionSDPOffer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionSDPOffer.ProtoReflect.Descriptor instead.
func (*PhoneActionSDPOffer) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{35}
}

func (x *PhoneActionSDPOffer) GetSDP() string {
	if x != nil {
		return x.SDP
	}
	return ""
}

func (x *PhoneActionSDPOffer) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// PhoneActionSDPAnswer
type PhoneActionSDPAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SDP  string `protobuf:"bytes,1,opt,name=SDP,proto3" json:"SDP,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *PhoneActionSDPAnswer) Reset() {
	*x = PhoneActionSDPAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_phone_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneActionSDPAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneActionSDPAnswer) ProtoMessage() {}

func (x *PhoneActionSDPAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_phone_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneActionSDPAnswer.ProtoReflect.Descriptor instead.
func (*PhoneActionSDPAnswer) Descriptor() ([]byte, []int) {
	return file_chat_phone_proto_rawDescGZIP(), []int{36}
}

func (x *PhoneActionSDPAnswer) GetSDP() string {
	if x != nil {
		return x.SDP
	}
	return ""
}

func (x *PhoneActionSDPAnswer) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_chat_phone_proto protoreflect.FileDescriptor

var file_chat_phone_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0d, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0xff,
	0x01, 0x0a, 0x10, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x44,
	0x50, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0a, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x53, 0x44, 0x50, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c,
	0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43,
	0x61, 0x6c, 0x6c, 0x49, 0x44, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x32, 0x0a,
	0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x56, 0x0a, 0x14, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c,
	0x49, 0x44, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06,
	0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x0a, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x0f, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x0e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x0a, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x05,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a,
	0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x3d, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x4f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x4f, 0x6e, 0x22, 0x3b, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0a, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x22, 0x4e, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x22, 0x5b, 0x0a, 0x09, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x72, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22,
	0x8e, 0x01, 0x0a, 0x10, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x22, 0x83, 0x01, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x44, 0x50, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x53, 0x44, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53,
	0x44, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x70, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53,
	0x44, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x44, 0x50, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x53, 0x44, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x44,
	0x50, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x2a, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x63, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x64, 0x70, 0x4d, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x53, 0x64, 0x70, 0x4d,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x64, 0x70,
	0x4d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x64, 0x70, 0x4d, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x61,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x10, 0x0a,
	0x0e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x22,
	0x58, 0x0a, 0x1b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x1d, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x38, 0x0a, 0x18, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x4b, 0x0a, 0x17,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x4c, 0x0a, 0x16, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x22, 0x2f, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x06, 0x41, 0x75, 0x74, 0x68, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x1f, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x34, 0x0a, 0x16, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3b, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x44,
	0x50, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x44, 0x50, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x44, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x14,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x44, 0x50, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x44, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x53, 0x44, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x8b, 0x03, 0x0a, 0x0d, 0x44,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x10, 0x03, 0x12,
	0x1b, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x32, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x10, 0x07,
	0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x35, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x36, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x37, 0x10, 0x0b,
	0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x38, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x39, 0x10, 0x0d, 0x2a, 0x91, 0x02, 0x0a, 0x0e, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x65, 0x62, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x4f, 0x53, 0x10, 0x03, 0x12,
	0x15, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x10, 0x05, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x10,
	0x07, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x61,
	0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x35, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x36, 0x10, 0x0a, 0x2a, 0xb7, 0x04, 0x0a,
	0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x31, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x32, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x35, 0x10, 0x05, 0x12, 0x20, 0x0a, 0x1c,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x36, 0x10, 0x06, 0x12, 0x20,
	0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x37, 0x10, 0x07,
	0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x38,
	0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x39, 0x10, 0x09, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x31, 0x30, 0x10, 0x0a, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x31, 0x10, 0x0b, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x32, 0x10, 0x0c, 0x12, 0x21, 0x0a,
	0x1d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x33, 0x10, 0x0d,
	0x12, 0x21, 0x0a, 0x1d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31,
	0x34, 0x10, 0x0e, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x31, 0x35, 0x10, 0x0f, 0x2a, 0xf3, 0x04, 0x0a, 0x0f, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x10, 0x04, 0x12,
	0x18, 0x0a, 0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x63, 0x65, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x44, 0x50, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x10, 0x08, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x44, 0x50, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x41, 0x63, 0x6b, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x65, 0x64, 0x10, 0x0b, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x0e, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x10, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x31, 0x33, 0x10, 0x11, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x34, 0x10, 0x12, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x31, 0x35, 0x10, 0x13, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x36, 0x10,
	0x14, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x37, 0x10, 0x15, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31,
	0x38, 0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x39, 0x10, 0x17, 0x42, 0x08, 0x5a, 0x06,
	0x2e, 0x2f, 0x3b, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_phone_proto_rawDescOnce sync.Once
	file_chat_phone_proto_rawDescData = file_chat_phone_proto_rawDesc
)

func file_chat_phone_proto_rawDescGZIP() []byte {
	file_chat_phone_proto_rawDescOnce.Do(func() {
		file_chat_phone_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_phone_proto_rawDescData)
	})
	return file_chat_phone_proto_rawDescData
}

var file_chat_phone_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_chat_phone_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_chat_phone_proto_goTypes = []interface{}{
	(DiscardReason)(0),                      // 0: msg.DiscardReason
	(CallDeviceType)(0),                     // 1: msg.CallDeviceType
	(PhoneCallRateReason)(0),                // 2: msg.PhoneCallRateReason
	(PhoneCallAction)(0),                    // 3: msg.PhoneCallAction
	(*PhoneInitCall)(nil),                   // 4: msg.PhoneInitCall
	(*PhoneRequestCall)(nil),                // 5: msg.PhoneRequestCall
	(*PhoneAcceptCall)(nil),                 // 6: msg.PhoneAcceptCall
	(*PhoneDiscardCall)(nil),                // 7: msg.PhoneDiscardCall
	(*PhoneJoinCall)(nil),                   // 8: msg.PhoneJoinCall
	(*PhoneAddParticipant)(nil),             // 9: msg.PhoneAddParticipant
	(*PhoneRemoveParticipant)(nil),          // 10: msg.PhoneRemoveParticipant
	(*PhoneGetParticipants)(nil),            // 11: msg.PhoneGetParticipants
	(*PhoneUpdateCall)(nil),                 // 12: msg.PhoneUpdateCall
	(*PhoneRateCall)(nil),                   // 13: msg.PhoneRateCall
	(*PhoneGetHistory)(nil),                 // 14: msg.PhoneGetHistory
	(*PhoneCallRecord)(nil),                 // 15: msg.PhoneCallRecord
	(*PhoneCallsMany)(nil),                  // 16: msg.PhoneCallsMany
	(*PhoneUpdateAdmin)(nil),                // 17: msg.PhoneUpdateAdmin
	(*PhoneCall)(nil),                       // 18: msg.PhoneCall
	(*PhoneInit)(nil),                       // 19: msg.PhoneInit
	(*PhoneParticipants)(nil),               // 20: msg.PhoneParticipants
	(*IceServer)(nil),                       // 21: msg.IceServer
	(*PhoneParticipant)(nil),                // 22: msg.PhoneParticipant
	(*PhoneParticipantSDP)(nil),             // 23: msg.PhoneParticipantSDP
	(*PhoneActionCallEmpty)(nil),            // 24: msg.PhoneActionCallEmpty
	(*PhoneActionAccepted)(nil),             // 25: msg.PhoneActionAccepted
	(*PhoneActionRequested)(nil),            // 26: msg.PhoneActionRequested
	(*PhoneActionCallWaiting)(nil),          // 27: msg.PhoneActionCallWaiting
	(*PhoneActionDiscarded)(nil),            // 28: msg.PhoneActionDiscarded
	(*PhoneActionIceExchange)(nil),          // 29: msg.PhoneActionIceExchange
	(*PhoneActionAck)(nil),                  // 30: msg.PhoneActionAck
	(*PhoneActionParticipantAdded)(nil),     // 31: msg.PhoneActionParticipantAdded
	(*PhoneActionParticipantRemoved)(nil),   // 32: msg.PhoneActionParticipantRemoved
	(*PhoneActionJoinRequested)(nil),        // 33: msg.PhoneActionJoinRequested
	(*PhoneActionAdminUpdated)(nil),         // 34: msg.PhoneActionAdminUpdated
	(*PhoneActionScreenShare)(nil),          // 35: msg.PhoneActionScreenShare
	(*PhoneActionPicked)(nil),               // 36: msg.PhoneActionPicked
	(*PhoneActionMediaSettingsUpdated)(nil), // 37: msg.PhoneActionMediaSettingsUpdated
	(*PhoneActionReactionSet)(nil),          // 38: msg.PhoneActionReactionSet
	(*PhoneActionSDPOffer)(nil),             // 39: msg.PhoneActionSDPOffer
	(*PhoneActionSDPAnswer)(nil),            // 40: msg.PhoneActionSDPAnswer
	(*InputPeer)(nil),                       // 41: msg.InputPeer
	(*InputUser)(nil),                       // 42: msg.InputUser
	(*User)(nil),                            // 43: msg.User
	(*Group)(nil),                           // 44: msg.Group
}
var file_chat_phone_proto_depIdxs = []int32{
	41, // 0: msg.PhoneInitCall.Peer:type_name -> msg.InputPeer
	41, // 1: msg.PhoneRequestCall.Peer:type_name -> msg.InputPeer
	23, // 2: msg.PhoneRequestCall.Participants:type_name -> msg.PhoneParticipantSDP
	1,  // 3: msg.PhoneRequestCall.DeviceType:type_name -> msg.CallDeviceType
	41, // 4: msg.PhoneAcceptCall.Peer:type_name -> msg.InputPeer
	23, // 5: msg.PhoneAcceptCall.Participants:type_name -> msg.PhoneParticipantSDP
	1,  // 6: msg.PhoneAcceptCall.DeviceType:type_name -> msg.CallDeviceType
	41, // 7: msg.PhoneDiscardCall.Peer:type_name -> msg.InputPeer
	0,  // 8: msg.PhoneDiscardCall.Reason:type_name -> msg.DiscardReason
	41, // 9: msg.PhoneJoinCall.Peer:type_name -> msg.InputPeer
	41, // 10: msg.PhoneAddParticipant.Peer:type_name -> msg.InputPeer
	42, // 11: msg.PhoneAddParticipant.Participants:type_name -> msg.InputUser
	41, // 12: msg.PhoneRemoveParticipant.Peer:type_name -> msg.InputPeer
	42, // 13: msg.PhoneRemoveParticipant.Participants:type_name -> msg.InputUser
	41, // 14: msg.PhoneGetParticipants.Peer:type_name -> msg.InputPeer
	41, // 15: msg.PhoneUpdateCall.Peer:type_name -> msg.InputPeer
	42, // 16: msg.PhoneUpdateCall.Participants:type_name -> msg.InputUser
	3,  // 17: msg.PhoneUpdateCall.Action:type_name -> msg.PhoneCallAction
	41, // 18: msg.PhoneRateCall.Peer:type_name -> msg.InputPeer
	2,  // 19: msg.PhoneRateCall.ReasonType:type_name -> msg.PhoneCallRateReason
	15, // 20: msg.PhoneCallsMany.PhoneCalls:type_name -> msg.PhoneCallRecord
	43, // 21: msg.PhoneCallsMany.Users:type_name -> msg.User
	44, // 22: msg.PhoneCallsMany.Groups:type_name -> msg.Group
	41, // 23: msg.PhoneUpdateAdmin.Peer:type_name -> msg.InputPeer
	42, // 24: msg.PhoneUpdateAdmin.User:type_name -> msg.InputUser
	21, // 25: msg.PhoneInit.IceServers:type_name -> msg.IceServer
	22, // 26: msg.PhoneParticipants.Participants:type_name -> msg.PhoneParticipant
	42, // 27: msg.PhoneParticipant.Peer:type_name -> msg.InputUser
	42, // 28: msg.PhoneParticipantSDP.Peer:type_name -> msg.InputUser
	1,  // 29: msg.PhoneActionAccepted.DeviceType:type_name -> msg.CallDeviceType
	22, // 30: msg.PhoneActionRequested.Participants:type_name -> msg.PhoneParticipant
	1,  // 31: msg.PhoneActionRequested.DeviceType:type_name -> msg.CallDeviceType
	0,  // 32: msg.PhoneActionDiscarded.Reason:type_name -> msg.DiscardReason
	22, // 33: msg.PhoneActionParticipantAdded.Participants:type_name -> msg.PhoneParticipant
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_chat_phone_proto_init() }
func file_chat_phone_proto_init() {
	if File_chat_phone_proto != nil {
		return
	}
	file_core_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chat_phone_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneInitCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneRequestCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneAcceptCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneDiscardCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneJoinCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneAddParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneRemoveParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneGetParticipants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneUpdateCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneRateCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneGetHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneCallRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneCallsMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneUpdateAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneParticipants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IceServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneParticipantSDP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionCallEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionCallWaiting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionDiscarded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionIceExchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionParticipantAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionParticipantRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionJoinRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionAdminUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionScreenShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionPicked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionMediaSettingsUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionReactionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionSDPOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_phone_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneActionSDPAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_phone_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_phone_proto_goTypes,
		DependencyIndexes: file_chat_phone_proto_depIdxs,
		EnumInfos:         file_chat_phone_proto_enumTypes,
		MessageInfos:      file_chat_phone_proto_msgTypes,
	}.Build()
	File_chat_phone_proto = out.File
	file_chat_phone_proto_rawDesc = nil
	file_chat_phone_proto_goTypes = nil
	file_chat_phone_proto_depIdxs = nil
}
