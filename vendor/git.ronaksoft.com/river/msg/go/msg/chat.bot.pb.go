// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: chat.bot.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BotStart
// @Function (Client)
// @Return: Bool
type BotStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bot        *InputPeer `protobuf:"bytes,1,opt,name=Bot,proto3" json:"Bot,omitempty"`
	RandomID   int64      `protobuf:"varint,2,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	StartParam string     `protobuf:"bytes,3,opt,name=StartParam,proto3" json:"StartParam,omitempty"`
}

func (x *BotStart) Reset() {
	*x = BotStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotStart) ProtoMessage() {}

func (x *BotStart) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotStart.ProtoReflect.Descriptor instead.
func (*BotStart) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{0}
}

func (x *BotStart) GetBot() *InputPeer {
	if x != nil {
		return x.Bot
	}
	return nil
}

func (x *BotStart) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *BotStart) GetStartParam() string {
	if x != nil {
		return x.StartParam
	}
	return ""
}

// BotRecall
// @Function (BotOnly)
// @Return: BotRecalled
type BotRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32 `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *BotRecall) Reset() {
	*x = BotRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotRecall) ProtoMessage() {}

func (x *BotRecall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotRecall.ProtoReflect.Descriptor instead.
func (*BotRecall) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{1}
}

func (x *BotRecall) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// BotSetInfo
// @Function (BotOnly)
// @Return: Bool
type BotSetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotID             int64          `protobuf:"varint,1,opt,name=BotID,proto3" json:"BotID,omitempty"`
	RandomID          int64          `protobuf:"varint,2,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Owner             int64          `protobuf:"varint,3,opt,name=Owner,proto3" json:"Owner,omitempty"`
	BotCommands       []*BotCommands `protobuf:"bytes,4,rep,name=BotCommands,proto3" json:"BotCommands,omitempty"`
	Description       string         `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	InlinePlaceholder string         `protobuf:"bytes,6,opt,name=InlinePlaceholder,proto3" json:"InlinePlaceholder,omitempty"`
	InlineGeo         bool           `protobuf:"varint,7,opt,name=InlineGeo,proto3" json:"InlineGeo,omitempty"`
}

func (x *BotSetInfo) Reset() {
	*x = BotSetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSetInfo) ProtoMessage() {}

func (x *BotSetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSetInfo.ProtoReflect.Descriptor instead.
func (*BotSetInfo) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{2}
}

func (x *BotSetInfo) GetBotID() int64 {
	if x != nil {
		return x.BotID
	}
	return 0
}

func (x *BotSetInfo) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *BotSetInfo) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *BotSetInfo) GetBotCommands() []*BotCommands {
	if x != nil {
		return x.BotCommands
	}
	return nil
}

func (x *BotSetInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BotSetInfo) GetInlinePlaceholder() string {
	if x != nil {
		return x.InlinePlaceholder
	}
	return ""
}

func (x *BotSetInfo) GetInlineGeo() bool {
	if x != nil {
		return x.InlineGeo
	}
	return false
}

// BotGet
// @Function (BotOnly)
// @Return: BotInfo
type BotGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *BotGet) Reset() {
	*x = BotGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotGet) ProtoMessage() {}

func (x *BotGet) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotGet.ProtoReflect.Descriptor instead.
func (*BotGet) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{3}
}

func (x *BotGet) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BotGet) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// BotSendMessage
// @Function (BotOnly)
// @Return: UserMessage
type BotSendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID        int64            `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer            *InputPeer       `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Body            string           `protobuf:"bytes,5,opt,name=Body,proto3" json:"Body,omitempty"`
	ReplyTo         int64            `protobuf:"varint,6,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	ClearDraft      bool             `protobuf:"varint,7,opt,name=ClearDraft,proto3" json:"ClearDraft,omitempty"`
	Entities        []*MessageEntity `protobuf:"bytes,8,rep,name=Entities,proto3" json:"Entities,omitempty"`
	ReplyMarkup     int64            `protobuf:"varint,9,opt,name=ReplyMarkup,proto3" json:"ReplyMarkup,omitempty"`
	ReplyMarkupData []byte           `protobuf:"bytes,10,opt,name=ReplyMarkupData,proto3" json:"ReplyMarkupData,omitempty"`
}

func (x *BotSendMessage) Reset() {
	*x = BotSendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSendMessage) ProtoMessage() {}

func (x *BotSendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSendMessage.ProtoReflect.Descriptor instead.
func (*BotSendMessage) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{4}
}

func (x *BotSendMessage) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *BotSendMessage) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotSendMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *BotSendMessage) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *BotSendMessage) GetClearDraft() bool {
	if x != nil {
		return x.ClearDraft
	}
	return false
}

func (x *BotSendMessage) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *BotSendMessage) GetReplyMarkup() int64 {
	if x != nil {
		return x.ReplyMarkup
	}
	return 0
}

func (x *BotSendMessage) GetReplyMarkupData() []byte {
	if x != nil {
		return x.ReplyMarkupData
	}
	return nil
}

// BotEditMessage
// @Function (BotOnly)
// @Return: UserMessage
type BotEditMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID        int64            `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer            *InputPeer       `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Body            string           `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	MessageID       int64            `protobuf:"varint,4,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Entities        []*MessageEntity `protobuf:"bytes,5,rep,name=Entities,proto3" json:"Entities,omitempty"`
	ReplyMarkup     int64            `protobuf:"varint,6,opt,name=ReplyMarkup,proto3" json:"ReplyMarkup,omitempty"`
	ReplyMarkupData []byte           `protobuf:"bytes,7,opt,name=ReplyMarkupData,proto3" json:"ReplyMarkupData,omitempty"`
}

func (x *BotEditMessage) Reset() {
	*x = BotEditMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotEditMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotEditMessage) ProtoMessage() {}

func (x *BotEditMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotEditMessage.ProtoReflect.Descriptor instead.
func (*BotEditMessage) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{5}
}

func (x *BotEditMessage) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *BotEditMessage) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotEditMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *BotEditMessage) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *BotEditMessage) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *BotEditMessage) GetReplyMarkup() int64 {
	if x != nil {
		return x.ReplyMarkup
	}
	return 0
}

func (x *BotEditMessage) GetReplyMarkupData() []byte {
	if x != nil {
		return x.ReplyMarkupData
	}
	return nil
}

// BotSendMedia
// @Function (BotOnly)
// @Return: UserMessage
type BotSendMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID  int64          `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer      *InputPeer     `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MediaType InputMediaType `protobuf:"varint,3,opt,name=MediaType,proto3,enum=msg.InputMediaType" json:"MediaType,omitempty"`
	MediaData []byte         `protobuf:"bytes,4,opt,name=MediaData,proto3" json:"MediaData,omitempty"`
	ReplyTo   int64          `protobuf:"varint,5,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
}

func (x *BotSendMedia) Reset() {
	*x = BotSendMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSendMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSendMedia) ProtoMessage() {}

func (x *BotSendMedia) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSendMedia.ProtoReflect.Descriptor instead.
func (*BotSendMedia) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{6}
}

func (x *BotSendMedia) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *BotSendMedia) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotSendMedia) GetMediaType() InputMediaType {
	if x != nil {
		return x.MediaType
	}
	return InputMediaType_InputMediaTypeEmpty
}

func (x *BotSendMedia) GetMediaData() []byte {
	if x != nil {
		return x.MediaData
	}
	return nil
}

func (x *BotSendMedia) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

// BotSaveFilePart
// @Function (BotOnly)
// @Returns: Bool
type BotSaveFilePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID     int64  `protobuf:"varint,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
	PartID     int32  `protobuf:"varint,2,opt,name=PartID,proto3" json:"PartID,omitempty"`
	TotalParts int32  `protobuf:"varint,3,opt,name=TotalParts,proto3" json:"TotalParts,omitempty"`
	Bytes      []byte `protobuf:"bytes,4,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
}

func (x *BotSaveFilePart) Reset() {
	*x = BotSaveFilePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSaveFilePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSaveFilePart) ProtoMessage() {}

func (x *BotSaveFilePart) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSaveFilePart.ProtoReflect.Descriptor instead.
func (*BotSaveFilePart) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{7}
}

func (x *BotSaveFilePart) GetFileID() int64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *BotSaveFilePart) GetPartID() int32 {
	if x != nil {
		return x.PartID
	}
	return 0
}

func (x *BotSaveFilePart) GetTotalParts() int32 {
	if x != nil {
		return x.TotalParts
	}
	return 0
}

func (x *BotSaveFilePart) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// BotUpdateProfile
// @Function (BotOnly)
// @Return: Bool
type BotUpdateProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotID int64  `protobuf:"varint,1,opt,name=BotID,proto3" json:"BotID,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Bio   string `protobuf:"bytes,4,opt,name=Bio,proto3" json:"Bio,omitempty"`
}

func (x *BotUpdateProfile) Reset() {
	*x = BotUpdateProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotUpdateProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotUpdateProfile) ProtoMessage() {}

func (x *BotUpdateProfile) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotUpdateProfile.ProtoReflect.Descriptor instead.
func (*BotUpdateProfile) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{8}
}

func (x *BotUpdateProfile) GetBotID() int64 {
	if x != nil {
		return x.BotID
	}
	return 0
}

func (x *BotUpdateProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BotUpdateProfile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

// BotUpdatePhoto
// @Function (BotOnly)
// @Returns: Bool
type BotUpdatePhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  *InputFileLocation `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	BotID int64              `protobuf:"varint,2,opt,name=BotID,proto3" json:"BotID,omitempty"`
}

func (x *BotUpdatePhoto) Reset() {
	*x = BotUpdatePhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotUpdatePhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotUpdatePhoto) ProtoMessage() {}

func (x *BotUpdatePhoto) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotUpdatePhoto.ProtoReflect.Descriptor instead.
func (*BotUpdatePhoto) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{9}
}

func (x *BotUpdatePhoto) GetFile() *InputFileLocation {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *BotUpdatePhoto) GetBotID() int64 {
	if x != nil {
		return x.BotID
	}
	return 0
}

// BotRevokeToken
// @Function (BotOnly)
// @Returns: BotToken
type BotRevokeToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotID  int64 `protobuf:"varint,1,opt,name=BotID,proto3" json:"BotID,omitempty"`
	GetNew bool  `protobuf:"varint,2,opt,name=GetNew,proto3" json:"GetNew,omitempty"`
}

func (x *BotRevokeToken) Reset() {
	*x = BotRevokeToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotRevokeToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotRevokeToken) ProtoMessage() {}

func (x *BotRevokeToken) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotRevokeToken.ProtoReflect.Descriptor instead.
func (*BotRevokeToken) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{10}
}

func (x *BotRevokeToken) GetBotID() int64 {
	if x != nil {
		return x.BotID
	}
	return 0
}

func (x *BotRevokeToken) GetGetNew() bool {
	if x != nil {
		return x.GetNew
	}
	return false
}

// BotDeleteMessage
// @Function (BotOnly)
// @Returns: Bool
type BotDeleteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageIDs []int64    `protobuf:"varint,2,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
}

func (x *BotDeleteMessage) Reset() {
	*x = BotDeleteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotDeleteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotDeleteMessage) ProtoMessage() {}

func (x *BotDeleteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotDeleteMessage.ProtoReflect.Descriptor instead.
func (*BotDeleteMessage) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{11}
}

func (x *BotDeleteMessage) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotDeleteMessage) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

// BotSetCallbackAnswer
// @Function (BotOnly)
// @Returns: Bool
type BotSetCallbackAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryID   int64  `protobuf:"varint,1,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`              // URL to open
	Message   string `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`      // Alert to show
	CacheTime int32  `protobuf:"varint,4,opt,name=CacheTime,proto3" json:"CacheTime,omitempty"` // For how long should this answer be cached (in seconds) [Default is  300]
}

func (x *BotSetCallbackAnswer) Reset() {
	*x = BotSetCallbackAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSetCallbackAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSetCallbackAnswer) ProtoMessage() {}

func (x *BotSetCallbackAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSetCallbackAnswer.ProtoReflect.Descriptor instead.
func (*BotSetCallbackAnswer) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{12}
}

func (x *BotSetCallbackAnswer) GetQueryID() int64 {
	if x != nil {
		return x.QueryID
	}
	return 0
}

func (x *BotSetCallbackAnswer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BotSetCallbackAnswer) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BotSetCallbackAnswer) GetCacheTime() int32 {
	if x != nil {
		return x.CacheTime
	}
	return 0
}

// BotGetCallbackAnswer
// @Function (Client)
// @Returns: BotCallbackAnswer
type BotGetCallbackAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64      `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"` // ID of the Message if button is the inline keyboard
	Data      []byte     `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`            // Callback data
}

func (x *BotGetCallbackAnswer) Reset() {
	*x = BotGetCallbackAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotGetCallbackAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotGetCallbackAnswer) ProtoMessage() {}

func (x *BotGetCallbackAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotGetCallbackAnswer.ProtoReflect.Descriptor instead.
func (*BotGetCallbackAnswer) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{13}
}

func (x *BotGetCallbackAnswer) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotGetCallbackAnswer) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *BotGetCallbackAnswer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// BotGetInlineResults
// @Function (Client)
// @Returns: BotResults
type BotGetInlineResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bot      *InputUser        `protobuf:"bytes,1,opt,name=Bot,proto3" json:"Bot,omitempty"`           // The bot to query
	Peer     *InputPeer        `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`         // The currently opened chat
	Query    string            `protobuf:"bytes,3,opt,name=Query,proto3" json:"Query,omitempty"`       // The query
	Offset   string            `protobuf:"bytes,4,opt,name=Offset,proto3" json:"Offset,omitempty"`     // The offset within the results, will be passed directly as-is to the bot.
	Location *InputGeoLocation `protobuf:"bytes,5,opt,name=Location,proto3" json:"Location,omitempty"` // The geolocation, if requested
}

func (x *BotGetInlineResults) Reset() {
	*x = BotGetInlineResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotGetInlineResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotGetInlineResults) ProtoMessage() {}

func (x *BotGetInlineResults) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotGetInlineResults.ProtoReflect.Descriptor instead.
func (*BotGetInlineResults) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{14}
}

func (x *BotGetInlineResults) GetBot() *InputUser {
	if x != nil {
		return x.Bot
	}
	return nil
}

func (x *BotGetInlineResults) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotGetInlineResults) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BotGetInlineResults) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *BotGetInlineResults) GetLocation() *InputGeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

// BotSetInlineResults
// @Function (BotOnly)
// @Returns: Bool
type BotSetInlineResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set this flag if the results are composed of media files
	Gallery bool `protobuf:"varint,1,opt,name=Gallery,proto3" json:"Gallery,omitempty"`
	// Set this flag if results may be cached on the server side only for the user that sent the query.
	// By default, results may be returned to any user who sends the same query
	Private bool `protobuf:"varint,2,opt,name=Private,proto3" json:"Private,omitempty"`
	// The maximum amount of time in seconds that the result of the inline query may be cached on the server.
	// Defaults to 300.
	CacheTime int64 `protobuf:"varint,3,opt,name=CacheTime,proto3" json:"CacheTime,omitempty"`
	// Pass the offset that a client should send in the next query with the same text to receive more results.
	// Pass an empty string if there are no more results or if you don‘t
	// support pagination. Offset length can’t exceed 64 bytes.
	NextOffset string `protobuf:"bytes,4,opt,name=NextOffset,proto3" json:"NextOffset,omitempty"`
	// Vector of results for the inline query
	Results []*InputBotInlineResult `protobuf:"bytes,5,rep,name=Results,proto3" json:"Results,omitempty"`
	// If passed, clients will display a button with specified text that switches the user to a private chat with
	// the bot and sends the bot a start message with a certain parameter.
	SwitchPM *BotInlineSwitchPM `protobuf:"bytes,6,opt,name=SwitchPM,proto3" json:"SwitchPM,omitempty"`
	// Unique identifier for the answered query
	QueryID int64 `protobuf:"varint,7,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
}

func (x *BotSetInlineResults) Reset() {
	*x = BotSetInlineResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSetInlineResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSetInlineResults) ProtoMessage() {}

func (x *BotSetInlineResults) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSetInlineResults.ProtoReflect.Descriptor instead.
func (*BotSetInlineResults) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{15}
}

func (x *BotSetInlineResults) GetGallery() bool {
	if x != nil {
		return x.Gallery
	}
	return false
}

func (x *BotSetInlineResults) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *BotSetInlineResults) GetCacheTime() int64 {
	if x != nil {
		return x.CacheTime
	}
	return 0
}

func (x *BotSetInlineResults) GetNextOffset() string {
	if x != nil {
		return x.NextOffset
	}
	return ""
}

func (x *BotSetInlineResults) GetResults() []*InputBotInlineResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BotSetInlineResults) GetSwitchPM() *BotInlineSwitchPM {
	if x != nil {
		return x.SwitchPM
	}
	return nil
}

func (x *BotSetInlineResults) GetQueryID() int64 {
	if x != nil {
		return x.QueryID
	}
	return 0
}

// BotSendInlineResults
// @Function (Client)
// @Returns: Bool + Updates
type BotSendInlineResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID   int64      `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	QueryID    int64      `protobuf:"varint,2,opt,name=QueryID,proto3" json:"QueryID,omitempty"`  // Query ID from BotResults response of BotGetInlineResults
	ResultID   string     `protobuf:"bytes,3,opt,name=ResultID,proto3" json:"ResultID,omitempty"` // Result ID from BotResults response of BotGetInlineResults
	ClearDraft bool       `protobuf:"varint,4,opt,name=ClearDraft,proto3" json:"ClearDraft,omitempty"`
	Peer       *InputPeer `protobuf:"bytes,5,opt,name=Peer,proto3" json:"Peer,omitempty"` // Destination
	ReplyTo    int64      `protobuf:"varint,6,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	Silent     bool       `protobuf:"varint,7,opt,name=Silent,proto3" json:"Silent,omitempty"`   // Do not send notification
	HideVia    bool       `protobuf:"varint,8,opt,name=HideVia,proto3" json:"HideVia,omitempty"` // Hid via bot
}

func (x *BotSendInlineResults) Reset() {
	*x = BotSendInlineResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSendInlineResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSendInlineResults) ProtoMessage() {}

func (x *BotSendInlineResults) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSendInlineResults.ProtoReflect.Descriptor instead.
func (*BotSendInlineResults) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{16}
}

func (x *BotSendInlineResults) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *BotSendInlineResults) GetQueryID() int64 {
	if x != nil {
		return x.QueryID
	}
	return 0
}

func (x *BotSendInlineResults) GetResultID() string {
	if x != nil {
		return x.ResultID
	}
	return ""
}

func (x *BotSendInlineResults) GetClearDraft() bool {
	if x != nil {
		return x.ClearDraft
	}
	return false
}

func (x *BotSendInlineResults) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *BotSendInlineResults) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *BotSendInlineResults) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *BotSendInlineResults) GetHideVia() bool {
	if x != nil {
		return x.HideVia
	}
	return false
}

// BotUploadWallPaper
// @Function (BotFather, AdminBot)
// @Return: Bool
type BotUploadWallPaper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     *InputFileLocation `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	Dark     bool               `protobuf:"varint,2,opt,name=Dark,proto3" json:"Dark,omitempty"`
	Pattern  bool               `protobuf:"varint,3,opt,name=Pattern,proto3" json:"Pattern,omitempty"`
	Settings *WallPaperSettings `protobuf:"bytes,4,opt,name=Settings,proto3" json:"Settings,omitempty"`
}

func (x *BotUploadWallPaper) Reset() {
	*x = BotUploadWallPaper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotUploadWallPaper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotUploadWallPaper) ProtoMessage() {}

func (x *BotUploadWallPaper) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotUploadWallPaper.ProtoReflect.Descriptor instead.
func (*BotUploadWallPaper) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{17}
}

func (x *BotUploadWallPaper) GetFile() *InputFileLocation {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *BotUploadWallPaper) GetDark() bool {
	if x != nil {
		return x.Dark
	}
	return false
}

func (x *BotUploadWallPaper) GetPattern() bool {
	if x != nil {
		return x.Pattern
	}
	return false
}

func (x *BotUploadWallPaper) GetSettings() *WallPaperSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// BotUploadGif
// @Function (GifBot Only)
// @Return: FileLocation
type BotUploadGif struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string     `protobuf:"bytes,100,opt,name=Token,proto3" json:"Token,omitempty"`
	File     *InputFile `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	Thumb    *InputFile `protobuf:"bytes,2,opt,name=Thumb,proto3" json:"Thumb,omitempty"`
	Width    uint32     `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height   uint32     `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	MimeType string     `protobuf:"bytes,5,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
}

func (x *BotUploadGif) Reset() {
	*x = BotUploadGif{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotUploadGif) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotUploadGif) ProtoMessage() {}

func (x *BotUploadGif) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotUploadGif.ProtoReflect.Descriptor instead.
func (*BotUploadGif) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{18}
}

func (x *BotUploadGif) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BotUploadGif) GetFile() *InputFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *BotUploadGif) GetThumb() *InputFile {
	if x != nil {
		return x.Thumb
	}
	return nil
}

func (x *BotUploadGif) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BotUploadGif) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BotUploadGif) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// BotResults
type BotResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gallery    bool               `protobuf:"varint,1,opt,name=Gallery,proto3" json:"Gallery,omitempty"`
	QueryID    int64              `protobuf:"varint,2,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
	NextOffset string             `protobuf:"bytes,3,opt,name=NextOffset,proto3" json:"NextOffset,omitempty"` // The next offset to use when navigating through results
	SwitchPM   *BotInlineSwitchPM `protobuf:"bytes,4,opt,name=SwitchPM,proto3" json:"SwitchPM,omitempty"`     // Whether the bot requested the user to message him in private
	Results    []*BotInlineResult `protobuf:"bytes,5,rep,name=Results,proto3" json:"Results,omitempty"`       // The results
}

func (x *BotResults) Reset() {
	*x = BotResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotResults) ProtoMessage() {}

func (x *BotResults) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotResults.ProtoReflect.Descriptor instead.
func (*BotResults) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{19}
}

func (x *BotResults) GetGallery() bool {
	if x != nil {
		return x.Gallery
	}
	return false
}

func (x *BotResults) GetQueryID() int64 {
	if x != nil {
		return x.QueryID
	}
	return 0
}

func (x *BotResults) GetNextOffset() string {
	if x != nil {
		return x.NextOffset
	}
	return ""
}

func (x *BotResults) GetSwitchPM() *BotInlineSwitchPM {
	if x != nil {
		return x.SwitchPM
	}
	return nil
}

func (x *BotResults) GetResults() []*BotInlineResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// BotInlineSwitchPM
type BotInlineSwitchPM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Text for the button that switches the user to a private chat with the bot
	// and sends the bot a start message with the parameter start_parameter (can be empty)
	Text string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	// The parameter for the /start parameter
	StartParam string `protobuf:"bytes,2,opt,name=StartParam,proto3" json:"StartParam,omitempty"`
}

func (x *BotInlineSwitchPM) Reset() {
	*x = BotInlineSwitchPM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotInlineSwitchPM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInlineSwitchPM) ProtoMessage() {}

func (x *BotInlineSwitchPM) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInlineSwitchPM.ProtoReflect.Descriptor instead.
func (*BotInlineSwitchPM) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{20}
}

func (x *BotInlineSwitchPM) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BotInlineSwitchPM) GetStartParam() string {
	if x != nil {
		return x.StartParam
	}
	return ""
}

// BotInlineResult
type BotInlineResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type        MediaType         `protobuf:"varint,2,opt,name=Type,proto3,enum=msg.MediaType" json:"Type,omitempty"`
	Title       string            `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description string            `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Url         string            `protobuf:"bytes,5,opt,name=Url,proto3" json:"Url,omitempty"`
	Thumb       *MediaWebDocument `protobuf:"bytes,6,opt,name=Thumb,proto3" json:"Thumb,omitempty"`
	Message     *BotInlineMessage `protobuf:"bytes,7,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *BotInlineResult) Reset() {
	*x = BotInlineResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotInlineResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInlineResult) ProtoMessage() {}

func (x *BotInlineResult) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInlineResult.ProtoReflect.Descriptor instead.
func (*BotInlineResult) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{21}
}

func (x *BotInlineResult) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BotInlineResult) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_MediaTypeEmpty
}

func (x *BotInlineResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BotInlineResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BotInlineResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BotInlineResult) GetThumb() *MediaWebDocument {
	if x != nil {
		return x.Thumb
	}
	return nil
}

func (x *BotInlineResult) GetMessage() *BotInlineMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// InputBotInlineResult
type InputBotInlineResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type        InputMediaType         `protobuf:"varint,2,opt,name=Type,proto3,enum=msg.InputMediaType" json:"Type,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Url         string                 `protobuf:"bytes,5,opt,name=Url,proto3" json:"Url,omitempty"`
	Thumb       *InputMediaWebDocument `protobuf:"bytes,6,opt,name=Thumb,proto3" json:"Thumb,omitempty"`
	Message     *InputBotInlineMessage `protobuf:"bytes,8,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *InputBotInlineResult) Reset() {
	*x = InputBotInlineResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputBotInlineResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputBotInlineResult) ProtoMessage() {}

func (x *InputBotInlineResult) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputBotInlineResult.ProtoReflect.Descriptor instead.
func (*InputBotInlineResult) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{22}
}

func (x *InputBotInlineResult) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *InputBotInlineResult) GetType() InputMediaType {
	if x != nil {
		return x.Type
	}
	return InputMediaType_InputMediaTypeEmpty
}

func (x *InputBotInlineResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InputBotInlineResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputBotInlineResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InputBotInlineResult) GetThumb() *InputMediaWebDocument {
	if x != nil {
		return x.Thumb
	}
	return nil
}

func (x *InputBotInlineResult) GetMessage() *InputBotInlineMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// BotInlineMessage
type BotInlineMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaData       []byte           `protobuf:"bytes,1,opt,name=MediaData,proto3" json:"MediaData,omitempty"`
	Body            string           `protobuf:"bytes,10,opt,name=Body,proto3" json:"Body,omitempty"`
	Entities        []*MessageEntity `protobuf:"bytes,11,rep,name=Entities,proto3" json:"Entities,omitempty"`
	ReplyTo         int64            `protobuf:"varint,12,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	ReplyMarkup     int64            `protobuf:"varint,13,opt,name=ReplyMarkup,proto3" json:"ReplyMarkup,omitempty"`
	ReplyMarkupData []byte           `protobuf:"bytes,14,opt,name=ReplyMarkupData,proto3" json:"ReplyMarkupData,omitempty"`
}

func (x *BotInlineMessage) Reset() {
	*x = BotInlineMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotInlineMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInlineMessage) ProtoMessage() {}

func (x *BotInlineMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInlineMessage.ProtoReflect.Descriptor instead.
func (*BotInlineMessage) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{23}
}

func (x *BotInlineMessage) GetMediaData() []byte {
	if x != nil {
		return x.MediaData
	}
	return nil
}

func (x *BotInlineMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *BotInlineMessage) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *BotInlineMessage) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *BotInlineMessage) GetReplyMarkup() int64 {
	if x != nil {
		return x.ReplyMarkup
	}
	return 0
}

func (x *BotInlineMessage) GetReplyMarkupData() []byte {
	if x != nil {
		return x.ReplyMarkupData
	}
	return nil
}

// InputBotInlineMessage
type InputBotInlineMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputMediaData  []byte           `protobuf:"bytes,1,opt,name=InputMediaData,proto3" json:"InputMediaData,omitempty"`
	NoWebPage       bool             `protobuf:"varint,2,opt,name=NoWebPage,proto3" json:"NoWebPage,omitempty"`
	Body            string           `protobuf:"bytes,10,opt,name=Body,proto3" json:"Body,omitempty"`
	Entities        []*MessageEntity `protobuf:"bytes,11,rep,name=Entities,proto3" json:"Entities,omitempty"`
	ReplyTo         int64            `protobuf:"varint,12,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	ReplyMarkup     int64            `protobuf:"varint,13,opt,name=ReplyMarkup,proto3" json:"ReplyMarkup,omitempty"`
	ReplyMarkupData []byte           `protobuf:"bytes,14,opt,name=ReplyMarkupData,proto3" json:"ReplyMarkupData,omitempty"`
}

func (x *InputBotInlineMessage) Reset() {
	*x = InputBotInlineMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputBotInlineMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputBotInlineMessage) ProtoMessage() {}

func (x *InputBotInlineMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputBotInlineMessage.ProtoReflect.Descriptor instead.
func (*InputBotInlineMessage) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{24}
}

func (x *InputBotInlineMessage) GetInputMediaData() []byte {
	if x != nil {
		return x.InputMediaData
	}
	return nil
}

func (x *InputBotInlineMessage) GetNoWebPage() bool {
	if x != nil {
		return x.NoWebPage
	}
	return false
}

func (x *InputBotInlineMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *InputBotInlineMessage) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *InputBotInlineMessage) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *InputBotInlineMessage) GetReplyMarkup() int64 {
	if x != nil {
		return x.ReplyMarkup
	}
	return 0
}

func (x *InputBotInlineMessage) GetReplyMarkupData() []byte {
	if x != nil {
		return x.ReplyMarkupData
	}
	return nil
}

// BotToken
type BotToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *BotToken) Reset() {
	*x = BotToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotToken) ProtoMessage() {}

func (x *BotToken) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotToken.ProtoReflect.Descriptor instead.
func (*BotToken) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{25}
}

func (x *BotToken) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

// BotRecalled
type BotRecalled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *BotRecalled) Reset() {
	*x = BotRecalled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotRecalled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotRecalled) ProtoMessage() {}

func (x *BotRecalled) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotRecalled.ProtoReflect.Descriptor instead.
func (*BotRecalled) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{26}
}

func (x *BotRecalled) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *BotRecalled) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// BotCallbackAnswer
type BotCallbackAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`              // URL to open
	Message   string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`      // Alert to show
	CacheTime int32  `protobuf:"varint,3,opt,name=CacheTime,proto3" json:"CacheTime,omitempty"` // For how long should this answer be cached (in seconds)
}

func (x *BotCallbackAnswer) Reset() {
	*x = BotCallbackAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotCallbackAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotCallbackAnswer) ProtoMessage() {}

func (x *BotCallbackAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotCallbackAnswer.ProtoReflect.Descriptor instead.
func (*BotCallbackAnswer) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{27}
}

func (x *BotCallbackAnswer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BotCallbackAnswer) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BotCallbackAnswer) GetCacheTime() int32 {
	if x != nil {
		return x.CacheTime
	}
	return 0
}

// BotsMany
type BotsMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bots  []*BotInfo `protobuf:"bytes,1,rep,name=Bots,proto3" json:"Bots,omitempty"`
	Empty bool       `protobuf:"varint,2,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *BotsMany) Reset() {
	*x = BotsMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotsMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotsMany) ProtoMessage() {}

func (x *BotsMany) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotsMany.ProtoReflect.Descriptor instead.
func (*BotsMany) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{28}
}

func (x *BotsMany) GetBots() []*BotInfo {
	if x != nil {
		return x.Bots
	}
	return nil
}

func (x *BotsMany) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

// BotGetCommands
// @Function
// @Return: BotCommandsMany
type BotGetCommands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *BotGetCommands) Reset() {
	*x = BotGetCommands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotGetCommands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotGetCommands) ProtoMessage() {}

func (x *BotGetCommands) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotGetCommands.ProtoReflect.Descriptor instead.
func (*BotGetCommands) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{29}
}

func (x *BotGetCommands) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// BotCommandsMany
type BotCommandsMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*BotCommands `protobuf:"bytes,1,rep,name=Commands,proto3" json:"Commands,omitempty"`
	Empty    bool           `protobuf:"varint,2,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *BotCommandsMany) Reset() {
	*x = BotCommandsMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotCommandsMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotCommandsMany) ProtoMessage() {}

func (x *BotCommandsMany) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotCommandsMany.ProtoReflect.Descriptor instead.
func (*BotCommandsMany) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{30}
}

func (x *BotCommandsMany) GetCommands() []*BotCommands {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *BotCommandsMany) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

var File_chat_bot_proto protoreflect.FileDescriptor

var file_chat_bot_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x08, 0x42, 0x6f, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x42, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x25, 0x0a, 0x09, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x0a, 0x42,
	0x6f, 0x74, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6f, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x47,
	0x65, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x47, 0x65, 0x6f, 0x22, 0x3a, 0x0a, 0x06, 0x42, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x9a, 0x02, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfe, 0x01, 0x0a,
	0x0e, 0x42, 0x6f, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72,
	0x6b, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x01,
	0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x22, 0x7b, 0x0a, 0x0f, 0x42, 0x6f, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x72, 0x74, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x22, 0x52, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0e, 0x42, 0x6f,
	0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x22, 0x56, 0x0a, 0x10, 0x42, 0x6f,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x73, 0x22, 0x7e, 0x0a, 0x14, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x07, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x14, 0x42, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xbc, 0x01, 0x0a, 0x13, 0x42, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x42, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8e, 0x02, 0x0a, 0x13, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78,
	0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e,
	0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x08, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x4d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x4d, 0x52, 0x08, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x50, 0x4d, 0x12, 0x1c, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44,
	0x22, 0xfc, 0x01, 0x0a, 0x14, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x69, 0x64, 0x65, 0x56, 0x69, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x69, 0x64, 0x65, 0x56, 0x69, 0x61, 0x22,
	0xa2, 0x01, 0x0a, 0x12, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x61, 0x6c,
	0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x12, 0x32, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x47, 0x69, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x46,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xc8, 0x01, 0x0a, 0x0a, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x50, 0x4d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42,
	0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x4d,
	0x52, 0x08, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x4d, 0x12, 0x2e, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x42, 0x6f,
	0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x4d, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x57, 0x65, 0x62, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x12, 0x2f, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x14, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6f, 0x74,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12,
	0x30, 0x0a, 0x05, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57,
	0x65, 0x62, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x12, 0x34, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6f,
	0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x74, 0x49,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6f,
	0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x57, 0x65, 0x62, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4e, 0x6f, 0x57, 0x65, 0x62,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75,
	0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61,
	0x72, 0x6b, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72,
	0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x20,
	0x0a, 0x08, 0x42, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x39, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x42,
	0x6f, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x08, 0x42, 0x6f,
	0x74, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x42, 0x6f, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6f, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34,
	0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x08, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x2e,
	0x2f, 0x3b, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_bot_proto_rawDescOnce sync.Once
	file_chat_bot_proto_rawDescData = file_chat_bot_proto_rawDesc
)

func file_chat_bot_proto_rawDescGZIP() []byte {
	file_chat_bot_proto_rawDescOnce.Do(func() {
		file_chat_bot_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_bot_proto_rawDescData)
	})
	return file_chat_bot_proto_rawDescData
}

var file_chat_bot_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_chat_bot_proto_goTypes = []interface{}{
	(*BotStart)(nil),              // 0: msg.BotStart
	(*BotRecall)(nil),             // 1: msg.BotRecall
	(*BotSetInfo)(nil),            // 2: msg.BotSetInfo
	(*BotGet)(nil),                // 3: msg.BotGet
	(*BotSendMessage)(nil),        // 4: msg.BotSendMessage
	(*BotEditMessage)(nil),        // 5: msg.BotEditMessage
	(*BotSendMedia)(nil),          // 6: msg.BotSendMedia
	(*BotSaveFilePart)(nil),       // 7: msg.BotSaveFilePart
	(*BotUpdateProfile)(nil),      // 8: msg.BotUpdateProfile
	(*BotUpdatePhoto)(nil),        // 9: msg.BotUpdatePhoto
	(*BotRevokeToken)(nil),        // 10: msg.BotRevokeToken
	(*BotDeleteMessage)(nil),      // 11: msg.BotDeleteMessage
	(*BotSetCallbackAnswer)(nil),  // 12: msg.BotSetCallbackAnswer
	(*BotGetCallbackAnswer)(nil),  // 13: msg.BotGetCallbackAnswer
	(*BotGetInlineResults)(nil),   // 14: msg.BotGetInlineResults
	(*BotSetInlineResults)(nil),   // 15: msg.BotSetInlineResults
	(*BotSendInlineResults)(nil),  // 16: msg.BotSendInlineResults
	(*BotUploadWallPaper)(nil),    // 17: msg.BotUploadWallPaper
	(*BotUploadGif)(nil),          // 18: msg.BotUploadGif
	(*BotResults)(nil),            // 19: msg.BotResults
	(*BotInlineSwitchPM)(nil),     // 20: msg.BotInlineSwitchPM
	(*BotInlineResult)(nil),       // 21: msg.BotInlineResult
	(*InputBotInlineResult)(nil),  // 22: msg.InputBotInlineResult
	(*BotInlineMessage)(nil),      // 23: msg.BotInlineMessage
	(*InputBotInlineMessage)(nil), // 24: msg.InputBotInlineMessage
	(*BotToken)(nil),              // 25: msg.BotToken
	(*BotRecalled)(nil),           // 26: msg.BotRecalled
	(*BotCallbackAnswer)(nil),     // 27: msg.BotCallbackAnswer
	(*BotsMany)(nil),              // 28: msg.BotsMany
	(*BotGetCommands)(nil),        // 29: msg.BotGetCommands
	(*BotCommandsMany)(nil),       // 30: msg.BotCommandsMany
	(*InputPeer)(nil),             // 31: msg.InputPeer
	(*BotCommands)(nil),           // 32: msg.BotCommands
	(*MessageEntity)(nil),         // 33: msg.MessageEntity
	(InputMediaType)(0),           // 34: msg.InputMediaType
	(*InputFileLocation)(nil),     // 35: msg.InputFileLocation
	(*InputUser)(nil),             // 36: msg.InputUser
	(*InputGeoLocation)(nil),      // 37: msg.InputGeoLocation
	(*WallPaperSettings)(nil),     // 38: msg.WallPaperSettings
	(*InputFile)(nil),             // 39: msg.InputFile
	(MediaType)(0),                // 40: msg.MediaType
	(*MediaWebDocument)(nil),      // 41: msg.MediaWebDocument
	(*InputMediaWebDocument)(nil), // 42: msg.InputMediaWebDocument
	(*BotInfo)(nil),               // 43: msg.BotInfo
}
var file_chat_bot_proto_depIdxs = []int32{
	31, // 0: msg.BotStart.Bot:type_name -> msg.InputPeer
	32, // 1: msg.BotSetInfo.BotCommands:type_name -> msg.BotCommands
	31, // 2: msg.BotSendMessage.Peer:type_name -> msg.InputPeer
	33, // 3: msg.BotSendMessage.Entities:type_name -> msg.MessageEntity
	31, // 4: msg.BotEditMessage.Peer:type_name -> msg.InputPeer
	33, // 5: msg.BotEditMessage.Entities:type_name -> msg.MessageEntity
	31, // 6: msg.BotSendMedia.Peer:type_name -> msg.InputPeer
	34, // 7: msg.BotSendMedia.MediaType:type_name -> msg.InputMediaType
	35, // 8: msg.BotUpdatePhoto.File:type_name -> msg.InputFileLocation
	31, // 9: msg.BotDeleteMessage.Peer:type_name -> msg.InputPeer
	31, // 10: msg.BotGetCallbackAnswer.Peer:type_name -> msg.InputPeer
	36, // 11: msg.BotGetInlineResults.Bot:type_name -> msg.InputUser
	31, // 12: msg.BotGetInlineResults.Peer:type_name -> msg.InputPeer
	37, // 13: msg.BotGetInlineResults.Location:type_name -> msg.InputGeoLocation
	22, // 14: msg.BotSetInlineResults.Results:type_name -> msg.InputBotInlineResult
	20, // 15: msg.BotSetInlineResults.SwitchPM:type_name -> msg.BotInlineSwitchPM
	31, // 16: msg.BotSendInlineResults.Peer:type_name -> msg.InputPeer
	35, // 17: msg.BotUploadWallPaper.File:type_name -> msg.InputFileLocation
	38, // 18: msg.BotUploadWallPaper.Settings:type_name -> msg.WallPaperSettings
	39, // 19: msg.BotUploadGif.File:type_name -> msg.InputFile
	39, // 20: msg.BotUploadGif.Thumb:type_name -> msg.InputFile
	20, // 21: msg.BotResults.SwitchPM:type_name -> msg.BotInlineSwitchPM
	21, // 22: msg.BotResults.Results:type_name -> msg.BotInlineResult
	40, // 23: msg.BotInlineResult.Type:type_name -> msg.MediaType
	41, // 24: msg.BotInlineResult.Thumb:type_name -> msg.MediaWebDocument
	23, // 25: msg.BotInlineResult.Message:type_name -> msg.BotInlineMessage
	34, // 26: msg.InputBotInlineResult.Type:type_name -> msg.InputMediaType
	42, // 27: msg.InputBotInlineResult.Thumb:type_name -> msg.InputMediaWebDocument
	24, // 28: msg.InputBotInlineResult.Message:type_name -> msg.InputBotInlineMessage
	33, // 29: msg.BotInlineMessage.Entities:type_name -> msg.MessageEntity
	33, // 30: msg.InputBotInlineMessage.Entities:type_name -> msg.MessageEntity
	43, // 31: msg.BotsMany.Bots:type_name -> msg.BotInfo
	31, // 32: msg.BotGetCommands.Peer:type_name -> msg.InputPeer
	32, // 33: msg.BotCommandsMany.Commands:type_name -> msg.BotCommands
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_chat_bot_proto_init() }
func file_chat_bot_proto_init() {
	if File_chat_bot_proto != nil {
		return
	}
	file_core_types_proto_init()
	file_chat_messages_medias_proto_init()
	file_chat_wallpaper_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chat_bot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotEditMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSendMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSaveFilePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotUpdateProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotUpdatePhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotRevokeToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotDeleteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSetCallbackAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotGetCallbackAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotGetInlineResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSetInlineResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSendInlineResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotUploadWallPaper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotUploadGif); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotInlineSwitchPM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotInlineResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputBotInlineResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotInlineMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputBotInlineMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotRecalled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotCallbackAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotsMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotGetCommands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotCommandsMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_bot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_bot_proto_goTypes,
		DependencyIndexes: file_chat_bot_proto_depIdxs,
		MessageInfos:      file_chat_bot_proto_msgTypes,
	}.Build()
	File_chat_bot_proto = out.File
	file_chat_bot_proto_rawDesc = nil
	file_chat_bot_proto_goTypes = nil
	file_chat_bot_proto_depIdxs = nil
}
