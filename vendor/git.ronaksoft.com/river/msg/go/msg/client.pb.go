// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: client.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClientFileType
type ClientFileType int32

const (
	ClientFileType_Unknown             ClientFileType = 0
	ClientFileType_Message             ClientFileType = 1
	ClientFileType_AccountProfilePhoto ClientFileType = 2
	ClientFileType_GroupProfilePhoto   ClientFileType = 3
	ClientFileType_Sticker             ClientFileType = 4
	ClientFileType_Thumbnail           ClientFileType = 5
	ClientFileType_Wallpaper           ClientFileType = 6
	ClientFileType_Gif                 ClientFileType = 7
)

// Enum value maps for ClientFileType.
var (
	ClientFileType_name = map[int32]string{
		0: "Unknown",
		1: "Message",
		2: "AccountProfilePhoto",
		3: "GroupProfilePhoto",
		4: "Sticker",
		5: "Thumbnail",
		6: "Wallpaper",
		7: "Gif",
	}
	ClientFileType_value = map[string]int32{
		"Unknown":             0,
		"Message":             1,
		"AccountProfilePhoto": 2,
		"GroupProfilePhoto":   3,
		"Sticker":             4,
		"Thumbnail":           5,
		"Wallpaper":           6,
		"Gif":                 7,
	}
)

func (x ClientFileType) Enum() *ClientFileType {
	p := new(ClientFileType)
	*p = x
	return p
}

func (x ClientFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[0].Descriptor()
}

func (ClientFileType) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[0]
}

func (x ClientFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientFileType.Descriptor instead.
func (ClientFileType) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

// ClientMediaType
type ClientMediaType int32

const (
	ClientMediaType_ClientMediaNone  ClientMediaType = 0
	ClientMediaType_ClientMediaFile  ClientMediaType = 1
	ClientMediaType_ClientMediaMedia ClientMediaType = 2
	ClientMediaType_ClientMediaVoice ClientMediaType = 3
	ClientMediaType_ClientMediaAudio ClientMediaType = 4
	ClientMediaType_ClientMediaLink  ClientMediaType = 5
	ClientMediaType_ClientMediaGif   ClientMediaType = 6
)

// Enum value maps for ClientMediaType.
var (
	ClientMediaType_name = map[int32]string{
		0: "ClientMediaNone",
		1: "ClientMediaFile",
		2: "ClientMediaMedia",
		3: "ClientMediaVoice",
		4: "ClientMediaAudio",
		5: "ClientMediaLink",
		6: "ClientMediaGif",
	}
	ClientMediaType_value = map[string]int32{
		"ClientMediaNone":  0,
		"ClientMediaFile":  1,
		"ClientMediaMedia": 2,
		"ClientMediaVoice": 3,
		"ClientMediaAudio": 4,
		"ClientMediaLink":  5,
		"ClientMediaGif":   6,
	}
)

func (x ClientMediaType) Enum() *ClientMediaType {
	p := new(ClientMediaType)
	*p = x
	return p
}

func (x ClientMediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientMediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[1].Descriptor()
}

func (ClientMediaType) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[1]
}

func (x ClientMediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientMediaType.Descriptor instead.
func (ClientMediaType) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

// ClientSendMessageMedia
// @Function
type ClientSendMessageMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer           *InputPeer           `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MediaType      InputMediaType       `protobuf:"varint,2,opt,name=MediaType,proto3,enum=msg.InputMediaType" json:"MediaType,omitempty"`
	Caption        string               `protobuf:"bytes,3,opt,name=Caption,proto3" json:"Caption,omitempty"`
	FileName       string               `protobuf:"bytes,4,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FilePath       string               `protobuf:"bytes,5,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	ThumbFilePath  string               `protobuf:"bytes,6,opt,name=ThumbFilePath,proto3" json:"ThumbFilePath,omitempty"`
	FileMIME       string               `protobuf:"bytes,7,opt,name=FileMIME,proto3" json:"FileMIME,omitempty"`
	ThumbMIME      string               `protobuf:"bytes,8,opt,name=ThumbMIME,proto3" json:"ThumbMIME,omitempty"`
	ReplyTo        int64                `protobuf:"varint,9,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	ClearDraft     bool                 `protobuf:"varint,10,opt,name=ClearDraft,proto3" json:"ClearDraft,omitempty"`
	Attributes     []*DocumentAttribute `protobuf:"bytes,11,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	FileUploadID   string               `protobuf:"bytes,12,opt,name=FileUploadID,proto3" json:"FileUploadID,omitempty"`
	ThumbUploadID  string               `protobuf:"bytes,13,opt,name=ThumbUploadID,proto3" json:"ThumbUploadID,omitempty"`
	FileID         int64                `protobuf:"varint,14,opt,name=FileID,proto3" json:"FileID,omitempty"`
	ThumbID        int64                `protobuf:"varint,15,opt,name=ThumbID,proto3" json:"ThumbID,omitempty"`
	FileTotalParts int32                `protobuf:"varint,16,opt,name=FileTotalParts,proto3" json:"FileTotalParts,omitempty"`
	Entities       []*MessageEntity     `protobuf:"bytes,17,rep,name=Entities,proto3" json:"Entities,omitempty"`
	TinyThumb      []byte               `protobuf:"bytes,18,opt,name=TinyThumb,proto3" json:"TinyThumb,omitempty"`
}

func (x *ClientSendMessageMedia) Reset() {
	*x = ClientSendMessageMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSendMessageMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSendMessageMedia) ProtoMessage() {}

func (x *ClientSendMessageMedia) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSendMessageMedia.ProtoReflect.Descriptor instead.
func (*ClientSendMessageMedia) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *ClientSendMessageMedia) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ClientSendMessageMedia) GetMediaType() InputMediaType {
	if x != nil {
		return x.MediaType
	}
	return InputMediaType_InputMediaTypeEmpty
}

func (x *ClientSendMessageMedia) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *ClientSendMessageMedia) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ClientSendMessageMedia) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ClientSendMessageMedia) GetThumbFilePath() string {
	if x != nil {
		return x.ThumbFilePath
	}
	return ""
}

func (x *ClientSendMessageMedia) GetFileMIME() string {
	if x != nil {
		return x.FileMIME
	}
	return ""
}

func (x *ClientSendMessageMedia) GetThumbMIME() string {
	if x != nil {
		return x.ThumbMIME
	}
	return ""
}

func (x *ClientSendMessageMedia) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *ClientSendMessageMedia) GetClearDraft() bool {
	if x != nil {
		return x.ClearDraft
	}
	return false
}

func (x *ClientSendMessageMedia) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ClientSendMessageMedia) GetFileUploadID() string {
	if x != nil {
		return x.FileUploadID
	}
	return ""
}

func (x *ClientSendMessageMedia) GetThumbUploadID() string {
	if x != nil {
		return x.ThumbUploadID
	}
	return ""
}

func (x *ClientSendMessageMedia) GetFileID() int64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *ClientSendMessageMedia) GetThumbID() int64 {
	if x != nil {
		return x.ThumbID
	}
	return 0
}

func (x *ClientSendMessageMedia) GetFileTotalParts() int32 {
	if x != nil {
		return x.FileTotalParts
	}
	return 0
}

func (x *ClientSendMessageMedia) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *ClientSendMessageMedia) GetTinyThumb() []byte {
	if x != nil {
		return x.TinyThumb
	}
	return nil
}

// ClientGlobalSearch
// @Function
// @Return: ClientSearchResult
type ClientGlobalSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string     `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	LabelIDs []int32    `protobuf:"varint,2,rep,packed,name=LabelIDs,proto3" json:"LabelIDs,omitempty"`
	Peer     *InputPeer `protobuf:"bytes,3,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Limit    int32      `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	SenderID int64      `protobuf:"varint,5,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
}

func (x *ClientGlobalSearch) Reset() {
	*x = ClientGlobalSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGlobalSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGlobalSearch) ProtoMessage() {}

func (x *ClientGlobalSearch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGlobalSearch.ProtoReflect.Descriptor instead.
func (*ClientGlobalSearch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *ClientGlobalSearch) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ClientGlobalSearch) GetLabelIDs() []int32 {
	if x != nil {
		return x.LabelIDs
	}
	return nil
}

func (x *ClientGlobalSearch) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ClientGlobalSearch) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ClientGlobalSearch) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

// ClientContactSearch
// @Function
// @Return: ClientSearchResult
type ClientContactSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *ClientContactSearch) Reset() {
	*x = ClientContactSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientContactSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientContactSearch) ProtoMessage() {}

func (x *ClientContactSearch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientContactSearch.ProtoReflect.Descriptor instead.
func (*ClientContactSearch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *ClientContactSearch) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// ClientGetCachedMedia
// @Function
// @Return: ClientCachedMedia
type ClientGetCachedMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientGetCachedMedia) Reset() {
	*x = ClientGetCachedMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetCachedMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetCachedMedia) ProtoMessage() {}

func (x *ClientGetCachedMedia) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetCachedMedia.ProtoReflect.Descriptor instead.
func (*ClientGetCachedMedia) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

// ClientClearCachedMedia
// @Function
// @Return: Bool
type ClientClearCachedMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *InputPeer        `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MediaTypes []ClientMediaType `protobuf:"varint,2,rep,packed,name=MediaTypes,proto3,enum=msg.ClientMediaType" json:"MediaTypes,omitempty"`
}

func (x *ClientClearCachedMedia) Reset() {
	*x = ClientClearCachedMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientClearCachedMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientClearCachedMedia) ProtoMessage() {}

func (x *ClientClearCachedMedia) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientClearCachedMedia.ProtoReflect.Descriptor instead.
func (*ClientClearCachedMedia) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *ClientClearCachedMedia) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ClientClearCachedMedia) GetMediaTypes() []ClientMediaType {
	if x != nil {
		return x.MediaTypes
	}
	return nil
}

// ClientGetLastBotKeyboard
// @Return: UserMessage
type ClientGetLastBotKeyboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *ClientGetLastBotKeyboard) Reset() {
	*x = ClientGetLastBotKeyboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetLastBotKeyboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetLastBotKeyboard) ProtoMessage() {}

func (x *ClientGetLastBotKeyboard) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetLastBotKeyboard.ProtoReflect.Descriptor instead.
func (*ClientGetLastBotKeyboard) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *ClientGetLastBotKeyboard) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// ClientGetMediaHistory
// @Function
// @Return: MessagesMany
type ClientGetMediaHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType []ClientMediaType `protobuf:"varint,1,rep,packed,name=MediaType,proto3,enum=msg.ClientMediaType" json:"MediaType,omitempty"`
	MaxID     int64             `protobuf:"varint,2,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
	MinID     int64             `protobuf:"varint,3,opt,name=MinID,proto3" json:"MinID,omitempty"`
	Limit     int32             `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Peer      *InputPeer        `protobuf:"bytes,5,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *ClientGetMediaHistory) Reset() {
	*x = ClientGetMediaHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetMediaHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetMediaHistory) ProtoMessage() {}

func (x *ClientGetMediaHistory) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetMediaHistory.ProtoReflect.Descriptor instead.
func (*ClientGetMediaHistory) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{6}
}

func (x *ClientGetMediaHistory) GetMediaType() []ClientMediaType {
	if x != nil {
		return x.MediaType
	}
	return nil
}

func (x *ClientGetMediaHistory) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

func (x *ClientGetMediaHistory) GetMinID() int64 {
	if x != nil {
		return x.MinID
	}
	return 0
}

func (x *ClientGetMediaHistory) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ClientGetMediaHistory) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// ClientGetAllDownloadedMedia
// @Function
// @Return: MessagesMany
type ClientGetAllDownloadedMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType ClientMediaType `protobuf:"varint,1,opt,name=MediaType,proto3,enum=msg.ClientMediaType" json:"MediaType,omitempty"`
}

func (x *ClientGetAllDownloadedMedia) Reset() {
	*x = ClientGetAllDownloadedMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetAllDownloadedMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetAllDownloadedMedia) ProtoMessage() {}

func (x *ClientGetAllDownloadedMedia) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetAllDownloadedMedia.ProtoReflect.Descriptor instead.
func (*ClientGetAllDownloadedMedia) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7}
}

func (x *ClientGetAllDownloadedMedia) GetMediaType() ClientMediaType {
	if x != nil {
		return x.MediaType
	}
	return ClientMediaType_ClientMediaNone
}

// ClientGetRecentSearch
// @Function
// @Return: RecentSearchMany
type ClientGetRecentSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *ClientGetRecentSearch) Reset() {
	*x = ClientGetRecentSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetRecentSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetRecentSearch) ProtoMessage() {}

func (x *ClientGetRecentSearch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetRecentSearch.ProtoReflect.Descriptor instead.
func (*ClientGetRecentSearch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{8}
}

func (x *ClientGetRecentSearch) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ClientPutRecentSearch
// @Function
// @Return: Bool
type ClientPutRecentSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *ClientPutRecentSearch) Reset() {
	*x = ClientPutRecentSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPutRecentSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPutRecentSearch) ProtoMessage() {}

func (x *ClientPutRecentSearch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPutRecentSearch.ProtoReflect.Descriptor instead.
func (*ClientPutRecentSearch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{9}
}

func (x *ClientPutRecentSearch) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// ClientPutRecentSearch
// @Function
// @Return: Bool
type ClientRemoveRecentSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *ClientRemoveRecentSearch) Reset() {
	*x = ClientRemoveRecentSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRemoveRecentSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRemoveRecentSearch) ProtoMessage() {}

func (x *ClientRemoveRecentSearch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRemoveRecentSearch.ProtoReflect.Descriptor instead.
func (*ClientRemoveRecentSearch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{10}
}

func (x *ClientRemoveRecentSearch) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// ClientRemoveAllRecentSearches
// @Function
// @Return: Bool
type ClientRemoveAllRecentSearches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra bool `protobuf:"varint,1,opt,name=Extra,proto3" json:"Extra,omitempty"`
}

func (x *ClientRemoveAllRecentSearches) Reset() {
	*x = ClientRemoveAllRecentSearches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRemoveAllRecentSearches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRemoveAllRecentSearches) ProtoMessage() {}

func (x *ClientRemoveAllRecentSearches) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRemoveAllRecentSearches.ProtoReflect.Descriptor instead.
func (*ClientRemoveAllRecentSearches) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{11}
}

func (x *ClientRemoveAllRecentSearches) GetExtra() bool {
	if x != nil {
		return x.Extra
	}
	return false
}

// ClientGetSavedGifs
// @Function
// @Return: ClientFilesMany
type ClientGetSavedGifs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientGetSavedGifs) Reset() {
	*x = ClientGetSavedGifs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetSavedGifs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetSavedGifs) ProtoMessage() {}

func (x *ClientGetSavedGifs) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetSavedGifs.ProtoReflect.Descriptor instead.
func (*ClientGetSavedGifs) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{12}
}

// ClientGetTeamCounters
// @Function
// @Return: ClientTeamCounters
type ClientGetTeamCounters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team      *InputTeam `protobuf:"bytes,1,opt,name=Team,proto3" json:"Team,omitempty"`
	WithMutes bool       `protobuf:"varint,2,opt,name=WithMutes,proto3" json:"WithMutes,omitempty"`
}

func (x *ClientGetTeamCounters) Reset() {
	*x = ClientGetTeamCounters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetTeamCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetTeamCounters) ProtoMessage() {}

func (x *ClientGetTeamCounters) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetTeamCounters.ProtoReflect.Descriptor instead.
func (*ClientGetTeamCounters) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{13}
}

func (x *ClientGetTeamCounters) GetTeam() *InputTeam {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *ClientGetTeamCounters) GetWithMutes() bool {
	if x != nil {
		return x.WithMutes
	}
	return false
}

// ClientPendingMessage
type ClientPendingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	RequestID      int64            `protobuf:"varint,2,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	PeerID         int64            `protobuf:"varint,3,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType       int32            `protobuf:"varint,4,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
	AccessHash     uint64           `protobuf:"fixed64,5,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
	CreatedOn      int64            `protobuf:"varint,6,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
	ReplyTo        int64            `protobuf:"varint,7,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	Body           string           `protobuf:"bytes,8,opt,name=Body,proto3" json:"Body,omitempty"`
	SenderID       int64            `protobuf:"varint,9,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	Entities       []*MessageEntity `protobuf:"bytes,10,rep,name=Entities,proto3" json:"Entities,omitempty"`
	MediaType      InputMediaType   `protobuf:"varint,11,opt,name=MediaType,proto3,enum=msg.InputMediaType" json:"MediaType,omitempty"`
	Media          []byte           `protobuf:"bytes,12,opt,name=Media,proto3" json:"Media,omitempty"`
	ClearDraft     bool             `protobuf:"varint,13,opt,name=ClearDraft,proto3" json:"ClearDraft,omitempty"`
	FileUploadID   string           `protobuf:"bytes,14,opt,name=FileUploadID,proto3" json:"FileUploadID,omitempty"`
	ThumbUploadID  string           `protobuf:"bytes,15,opt,name=ThumbUploadID,proto3" json:"ThumbUploadID,omitempty"`
	FileID         int64            `protobuf:"varint,16,opt,name=FileID,proto3" json:"FileID,omitempty"`
	ThumbID        int64            `protobuf:"varint,17,opt,name=ThumbID,proto3" json:"ThumbID,omitempty"`
	Sha256         []byte           `protobuf:"bytes,18,opt,name=Sha256,proto3" json:"Sha256,omitempty"`
	ServerFile     *FileLocation    `protobuf:"bytes,19,opt,name=ServerFile,proto3" json:"ServerFile,omitempty"`
	TeamID         int64            `protobuf:"varint,20,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	TeamAccessHash uint64           `protobuf:"varint,21,opt,name=TeamAccessHash,proto3" json:"TeamAccessHash,omitempty"`
	TinyThumb      []byte           `protobuf:"bytes,22,opt,name=TinyThumb,proto3" json:"TinyThumb,omitempty"`
}

func (x *ClientPendingMessage) Reset() {
	*x = ClientPendingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPendingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPendingMessage) ProtoMessage() {}

func (x *ClientPendingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPendingMessage.ProtoReflect.Descriptor instead.
func (*ClientPendingMessage) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{14}
}

func (x *ClientPendingMessage) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ClientPendingMessage) GetRequestID() int64 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *ClientPendingMessage) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *ClientPendingMessage) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *ClientPendingMessage) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *ClientPendingMessage) GetCreatedOn() int64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

func (x *ClientPendingMessage) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *ClientPendingMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ClientPendingMessage) GetSenderID() int64 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *ClientPendingMessage) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *ClientPendingMessage) GetMediaType() InputMediaType {
	if x != nil {
		return x.MediaType
	}
	return InputMediaType_InputMediaTypeEmpty
}

func (x *ClientPendingMessage) GetMedia() []byte {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ClientPendingMessage) GetClearDraft() bool {
	if x != nil {
		return x.ClearDraft
	}
	return false
}

func (x *ClientPendingMessage) GetFileUploadID() string {
	if x != nil {
		return x.FileUploadID
	}
	return ""
}

func (x *ClientPendingMessage) GetThumbUploadID() string {
	if x != nil {
		return x.ThumbUploadID
	}
	return ""
}

func (x *ClientPendingMessage) GetFileID() int64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *ClientPendingMessage) GetThumbID() int64 {
	if x != nil {
		return x.ThumbID
	}
	return 0
}

func (x *ClientPendingMessage) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *ClientPendingMessage) GetServerFile() *FileLocation {
	if x != nil {
		return x.ServerFile
	}
	return nil
}

func (x *ClientPendingMessage) GetTeamID() int64 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *ClientPendingMessage) GetTeamAccessHash() uint64 {
	if x != nil {
		return x.TeamAccessHash
	}
	return 0
}

func (x *ClientPendingMessage) GetTinyThumb() []byte {
	if x != nil {
		return x.TinyThumb
	}
	return nil
}

// ClientSearchResult
type ClientSearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages      []*UserMessage `protobuf:"bytes,1,rep,name=Messages,proto3" json:"Messages,omitempty"`
	Users         []*User        `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Groups        []*Group       `protobuf:"bytes,3,rep,name=Groups,proto3" json:"Groups,omitempty"`
	MatchedUsers  []*User        `protobuf:"bytes,4,rep,name=MatchedUsers,proto3" json:"MatchedUsers,omitempty"`
	MatchedGroups []*Group       `protobuf:"bytes,5,rep,name=MatchedGroups,proto3" json:"MatchedGroups,omitempty"`
}

func (x *ClientSearchResult) Reset() {
	*x = ClientSearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSearchResult) ProtoMessage() {}

func (x *ClientSearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSearchResult.ProtoReflect.Descriptor instead.
func (*ClientSearchResult) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{15}
}

func (x *ClientSearchResult) GetMessages() []*UserMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ClientSearchResult) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ClientSearchResult) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ClientSearchResult) GetMatchedUsers() []*User {
	if x != nil {
		return x.MatchedUsers
	}
	return nil
}

func (x *ClientSearchResult) GetMatchedGroups() []*Group {
	if x != nil {
		return x.MatchedGroups
	}
	return nil
}

// ClientFilesMany
type ClientFilesMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gifs  []*ClientFile `protobuf:"bytes,1,rep,name=Gifs,proto3" json:"Gifs,omitempty"`
	Total int32         `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *ClientFilesMany) Reset() {
	*x = ClientFilesMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientFilesMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientFilesMany) ProtoMessage() {}

func (x *ClientFilesMany) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientFilesMany.ProtoReflect.Descriptor instead.
func (*ClientFilesMany) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{16}
}

func (x *ClientFilesMany) GetGifs() []*ClientFile {
	if x != nil {
		return x.Gifs
	}
	return nil
}

func (x *ClientFilesMany) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ClientFile
type ClientFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterID   int32                `protobuf:"varint,1,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	FileID      int64                `protobuf:"varint,2,opt,name=FileID,proto3" json:"FileID,omitempty"`
	AccessHash  uint64               `protobuf:"varint,3,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
	Type        ClientFileType       `protobuf:"varint,4,opt,name=Type,proto3,enum=msg.ClientFileType" json:"Type,omitempty"`
	MimeType    string               `protobuf:"bytes,5,opt,name=MimeType,proto3" json:"MimeType,omitempty"`
	UserID      int64                `protobuf:"varint,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GroupID     int64                `protobuf:"varint,7,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	FileSize    int64                `protobuf:"varint,8,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	MessageID   int64                `protobuf:"varint,9,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	PeerID      int64                `protobuf:"varint,10,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType    int32                `protobuf:"varint,11,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
	Version     int32                `protobuf:"varint,12,opt,name=Version,proto3" json:"Version,omitempty"`
	Extension   string               `protobuf:"bytes,13,opt,name=Extension,proto3" json:"Extension,omitempty"`
	MD5Checksum string               `protobuf:"bytes,14,opt,name=MD5Checksum,proto3" json:"MD5Checksum,omitempty"`
	WallpaperID int64                `protobuf:"varint,15,opt,name=WallpaperID,proto3" json:"WallpaperID,omitempty"`
	Attributes  []*DocumentAttribute `protobuf:"bytes,16,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
}

func (x *ClientFile) Reset() {
	*x = ClientFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientFile) ProtoMessage() {}

func (x *ClientFile) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientFile.ProtoReflect.Descriptor instead.
func (*ClientFile) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{17}
}

func (x *ClientFile) GetClusterID() int32 {
	if x != nil {
		return x.ClusterID
	}
	return 0
}

func (x *ClientFile) GetFileID() int64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *ClientFile) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *ClientFile) GetType() ClientFileType {
	if x != nil {
		return x.Type
	}
	return ClientFileType_Unknown
}

func (x *ClientFile) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ClientFile) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ClientFile) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *ClientFile) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ClientFile) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *ClientFile) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *ClientFile) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *ClientFile) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ClientFile) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *ClientFile) GetMD5Checksum() string {
	if x != nil {
		return x.MD5Checksum
	}
	return ""
}

func (x *ClientFile) GetWallpaperID() int64 {
	if x != nil {
		return x.WallpaperID
	}
	return 0
}

func (x *ClientFile) GetAttributes() []*DocumentAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// ClientFileRequest
type ClientFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next *ClientFileRequest `protobuf:"bytes,100,opt,name=Next,proto3" json:"Next,omitempty"`
	// Logical Location
	PeerID    int64 `protobuf:"varint,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType  int32 `protobuf:"varint,2,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
	MessageID int64 `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	// Storage Location
	ClusterID        int32   `protobuf:"varint,4,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	FileID           int64   `protobuf:"varint,5,opt,name=FileID,proto3" json:"FileID,omitempty"`
	AccessHash       uint64  `protobuf:"fixed64,6,opt,name=AccessHash,proto3" json:"AccessHash,omitempty"`
	Version          int32   `protobuf:"varint,7,opt,name=Version,proto3" json:"Version,omitempty"`
	FileSize         int64   `protobuf:"varint,8,opt,name=FileSize,proto3" json:"FileSize,omitempty"`   // FileSize (Optional) if is set then progress will be calculated
	ChunkSize        int32   `protobuf:"varint,9,opt,name=ChunkSize,proto3" json:"ChunkSize,omitempty"` // ChunkSize identifies how many request we need to send to server to Download a file.
	FinishedParts    []int32 `protobuf:"varint,10,rep,packed,name=FinishedParts,proto3" json:"FinishedParts,omitempty"`
	TotalParts       int32   `protobuf:"varint,11,opt,name=TotalParts,proto3" json:"TotalParts,omitempty"`
	SkipDelegateCall bool    `protobuf:"varint,12,opt,name=SkipDelegateCall,proto3" json:"SkipDelegateCall,omitempty"`
	FilePath         string  `protobuf:"bytes,13,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	TempPath         string  `protobuf:"bytes,14,opt,name=TempPath,proto3" json:"TempPath,omitempty"`
	CheckSha256      bool    `protobuf:"varint,15,opt,name=CheckSha256,proto3" json:"CheckSha256,omitempty"`
	FileSha256       []byte  `protobuf:"bytes,16,opt,name=FileSha256,proto3" json:"FileSha256,omitempty"`
	IsProfilePhoto   bool    `protobuf:"varint,17,opt,name=IsProfilePhoto,proto3" json:"IsProfilePhoto,omitempty"`
	GroupID          int64   `protobuf:"varint,18,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	ThumbID          int64   `protobuf:"varint,19,opt,name=ThumbID,proto3" json:"ThumbID,omitempty"`
	ThumbPath        string  `protobuf:"bytes,20,opt,name=ThumbPath,proto3" json:"ThumbPath,omitempty"`
}

func (x *ClientFileRequest) Reset() {
	*x = ClientFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientFileRequest) ProtoMessage() {}

func (x *ClientFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientFileRequest.ProtoReflect.Descriptor instead.
func (*ClientFileRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{18}
}

func (x *ClientFileRequest) GetNext() *ClientFileRequest {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ClientFileRequest) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *ClientFileRequest) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *ClientFileRequest) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *ClientFileRequest) GetClusterID() int32 {
	if x != nil {
		return x.ClusterID
	}
	return 0
}

func (x *ClientFileRequest) GetFileID() int64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *ClientFileRequest) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *ClientFileRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ClientFileRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ClientFileRequest) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *ClientFileRequest) GetFinishedParts() []int32 {
	if x != nil {
		return x.FinishedParts
	}
	return nil
}

func (x *ClientFileRequest) GetTotalParts() int32 {
	if x != nil {
		return x.TotalParts
	}
	return 0
}

func (x *ClientFileRequest) GetSkipDelegateCall() bool {
	if x != nil {
		return x.SkipDelegateCall
	}
	return false
}

func (x *ClientFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ClientFileRequest) GetTempPath() string {
	if x != nil {
		return x.TempPath
	}
	return ""
}

func (x *ClientFileRequest) GetCheckSha256() bool {
	if x != nil {
		return x.CheckSha256
	}
	return false
}

func (x *ClientFileRequest) GetFileSha256() []byte {
	if x != nil {
		return x.FileSha256
	}
	return nil
}

func (x *ClientFileRequest) GetIsProfilePhoto() bool {
	if x != nil {
		return x.IsProfilePhoto
	}
	return false
}

func (x *ClientFileRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *ClientFileRequest) GetThumbID() int64 {
	if x != nil {
		return x.ThumbID
	}
	return 0
}

func (x *ClientFileRequest) GetThumbPath() string {
	if x != nil {
		return x.ThumbPath
	}
	return ""
}

// ClientFileStatus
type ClientFileStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int32  `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Progress int64  `protobuf:"varint,2,opt,name=Progress,proto3" json:"Progress,omitempty"`
	FilePath string `protobuf:"bytes,3,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
}

func (x *ClientFileStatus) Reset() {
	*x = ClientFileStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientFileStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientFileStatus) ProtoMessage() {}

func (x *ClientFileStatus) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientFileStatus.ProtoReflect.Descriptor instead.
func (*ClientFileStatus) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{19}
}

func (x *ClientFileStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ClientFileStatus) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ClientFileStatus) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// CachedMediaInfo
type ClientCachedMediaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaInfo []*ClientPeerMediaInfo `protobuf:"bytes,1,rep,name=MediaInfo,proto3" json:"MediaInfo,omitempty"`
}

func (x *ClientCachedMediaInfo) Reset() {
	*x = ClientCachedMediaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCachedMediaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCachedMediaInfo) ProtoMessage() {}

func (x *ClientCachedMediaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCachedMediaInfo.ProtoReflect.Descriptor instead.
func (*ClientCachedMediaInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{20}
}

func (x *ClientCachedMediaInfo) GetMediaInfo() []*ClientPeerMediaInfo {
	if x != nil {
		return x.MediaInfo
	}
	return nil
}

// PeerMediaInfo
type ClientPeerMediaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID   int64              `protobuf:"varint,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType PeerType           `protobuf:"varint,2,opt,name=PeerType,proto3,enum=msg.PeerType" json:"PeerType,omitempty"`
	Media    []*ClientMediaSize `protobuf:"bytes,3,rep,name=Media,proto3" json:"Media,omitempty"`
}

func (x *ClientPeerMediaInfo) Reset() {
	*x = ClientPeerMediaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPeerMediaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPeerMediaInfo) ProtoMessage() {}

func (x *ClientPeerMediaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPeerMediaInfo.ProtoReflect.Descriptor instead.
func (*ClientPeerMediaInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{21}
}

func (x *ClientPeerMediaInfo) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *ClientPeerMediaInfo) GetPeerType() PeerType {
	if x != nil {
		return x.PeerType
	}
	return PeerType_PeerSelf
}

func (x *ClientPeerMediaInfo) GetMedia() []*ClientMediaSize {
	if x != nil {
		return x.Media
	}
	return nil
}

// ClientMediaSize
type ClientMediaSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType ClientMediaType `protobuf:"varint,1,opt,name=MediaType,proto3,enum=msg.ClientMediaType" json:"MediaType,omitempty"`
	TotalSize int64           `protobuf:"varint,2,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"`
}

func (x *ClientMediaSize) Reset() {
	*x = ClientMediaSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMediaSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMediaSize) ProtoMessage() {}

func (x *ClientMediaSize) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMediaSize.ProtoReflect.Descriptor instead.
func (*ClientMediaSize) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{22}
}

func (x *ClientMediaSize) GetMediaType() ClientMediaType {
	if x != nil {
		return x.MediaType
	}
	return ClientMediaType_ClientMediaNone
}

func (x *ClientMediaSize) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// ClientRecentSearch
type ClientRecentSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Date int32 `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *ClientRecentSearch) Reset() {
	*x = ClientRecentSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRecentSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRecentSearch) ProtoMessage() {}

func (x *ClientRecentSearch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRecentSearch.ProtoReflect.Descriptor instead.
func (*ClientRecentSearch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{23}
}

func (x *ClientRecentSearch) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ClientRecentSearch) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

// RecentSearchMany
type ClientRecentSearchMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecentSearches []*ClientRecentSearch `protobuf:"bytes,1,rep,name=RecentSearches,proto3" json:"RecentSearches,omitempty"`
	Users          []*User               `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Groups         []*Group              `protobuf:"bytes,3,rep,name=Groups,proto3" json:"Groups,omitempty"`
}

func (x *ClientRecentSearchMany) Reset() {
	*x = ClientRecentSearchMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRecentSearchMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRecentSearchMany) ProtoMessage() {}

func (x *ClientRecentSearchMany) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRecentSearchMany.ProtoReflect.Descriptor instead.
func (*ClientRecentSearchMany) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{24}
}

func (x *ClientRecentSearchMany) GetRecentSearches() []*ClientRecentSearch {
	if x != nil {
		return x.RecentSearches
	}
	return nil
}

func (x *ClientRecentSearchMany) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ClientRecentSearchMany) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// ClientTeamCounters
type ClientTeamCounters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnreadCount  int64 `protobuf:"varint,1,opt,name=UnreadCount,proto3" json:"UnreadCount,omitempty"`
	MentionCount int64 `protobuf:"varint,2,opt,name=MentionCount,proto3" json:"MentionCount,omitempty"`
}

func (x *ClientTeamCounters) Reset() {
	*x = ClientTeamCounters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientTeamCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientTeamCounters) ProtoMessage() {}

func (x *ClientTeamCounters) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientTeamCounters.ProtoReflect.Descriptor instead.
func (*ClientTeamCounters) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{25}
}

func (x *ClientTeamCounters) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *ClientTeamCounters) GetMentionCount() int64 {
	if x != nil {
		return x.MentionCount
	}
	return 0
}

// ClientGetFrequentReactions
// @Function
// @Return: ClientFrequentReactions
type ClientGetFrequentReactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientGetFrequentReactions) Reset() {
	*x = ClientGetFrequentReactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetFrequentReactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetFrequentReactions) ProtoMessage() {}

func (x *ClientGetFrequentReactions) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetFrequentReactions.ProtoReflect.Descriptor instead.
func (*ClientGetFrequentReactions) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{26}
}

type ClientFrequentReactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactions []string `protobuf:"bytes,1,rep,name=Reactions,proto3" json:"Reactions,omitempty"`
}

func (x *ClientFrequentReactions) Reset() {
	*x = ClientFrequentReactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientFrequentReactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientFrequentReactions) ProtoMessage() {}

func (x *ClientFrequentReactions) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientFrequentReactions.ProtoReflect.Descriptor instead.
func (*ClientFrequentReactions) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{27}
}

func (x *ClientFrequentReactions) GetReactions() []string {
	if x != nil {
		return x.Reactions
	}
	return nil
}

// ClientDismissNotification
// @Function
// @Return: Bool
type ClientDismissNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Ts   int64      `protobuf:"varint,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *ClientDismissNotification) Reset() {
	*x = ClientDismissNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientDismissNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientDismissNotification) ProtoMessage() {}

func (x *ClientDismissNotification) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientDismissNotification.ProtoReflect.Descriptor instead.
func (*ClientDismissNotification) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{28}
}

func (x *ClientDismissNotification) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ClientDismissNotification) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

// ClientGetNotificationDismissTime
// @Function
// @Return: ClientNotificationDismissTime
type ClientGetNotificationDismissTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *ClientGetNotificationDismissTime) Reset() {
	*x = ClientGetNotificationDismissTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientGetNotificationDismissTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientGetNotificationDismissTime) ProtoMessage() {}

func (x *ClientGetNotificationDismissTime) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientGetNotificationDismissTime.ProtoReflect.Descriptor instead.
func (*ClientGetNotificationDismissTime) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{29}
}

func (x *ClientGetNotificationDismissTime) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type ClientNotificationDismissTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts int64 `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *ClientNotificationDismissTime) Reset() {
	*x = ClientNotificationDismissTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientNotificationDismissTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientNotificationDismissTime) ProtoMessage() {}

func (x *ClientNotificationDismissTime) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientNotificationDismissTime.ProtoReflect.Descriptor instead.
func (*ClientNotificationDismissTime) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{30}
}

func (x *ClientNotificationDismissTime) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x6d, 0x73, 0x67, 0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x85, 0x05, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x31, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x49, 0x4d, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x4d, 0x49, 0x4d, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x54, 0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x73,
	0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x72, 0x0a, 0x16, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x3e, 0x0a,
	0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6f,
	0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0xb1, 0x01,
	0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x61, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x22, 0x51, 0x0a, 0x1b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x12, 0x32, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x3b, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x22, 0x3e, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x22, 0x35, 0x0a, 0x1d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x47, 0x69, 0x66, 0x73, 0x22, 0x59, 0x0a,
	0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x69,
	0x74, 0x68, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x75, 0x74, 0x65, 0x73, 0x22, 0xbe, 0x05, 0x0a, 0x14, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x49,
	0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x31, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x54, 0x65, 0x61,
	0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x54, 0x69, 0x6e, 0x79, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x22, 0xe8, 0x01, 0x0a, 0x12, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2c, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x22, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x30, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x22, 0x4c, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x23, 0x0a, 0x04, 0x47, 0x69, 0x66, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x47, 0x69, 0x66, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xfb, 0x03, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x44, 0x35, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x44, 0x35, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x57, 0x61, 0x6c, 0x6c, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x57, 0x61, 0x6c,
	0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x22, 0xa1, 0x05, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x4e, 0x65,
	0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x65,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x6b, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x53, 0x6b, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x54, 0x65, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x54, 0x65, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x44, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x62, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x08, 0x50, 0x65, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x50, 0x65, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x22, 0x63, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x47, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x9e,
	0x01, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x5a, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x4f, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x54, 0x73, 0x22, 0x46, 0x0a, 0x20, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x1d, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x2a, 0x8e, 0x01, 0x0a,
	0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x69, 0x66, 0x10, 0x07, 0x2a, 0xa6, 0x01,
	0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x04, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x6e, 0x6b,
	0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x47, 0x69, 0x66, 0x10, 0x06, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x6d, 0x73, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_client_proto_goTypes = []interface{}{
	(ClientFileType)(0),                      // 0: msg.ClientFileType
	(ClientMediaType)(0),                     // 1: msg.ClientMediaType
	(*ClientSendMessageMedia)(nil),           // 2: msg.ClientSendMessageMedia
	(*ClientGlobalSearch)(nil),               // 3: msg.ClientGlobalSearch
	(*ClientContactSearch)(nil),              // 4: msg.ClientContactSearch
	(*ClientGetCachedMedia)(nil),             // 5: msg.ClientGetCachedMedia
	(*ClientClearCachedMedia)(nil),           // 6: msg.ClientClearCachedMedia
	(*ClientGetLastBotKeyboard)(nil),         // 7: msg.ClientGetLastBotKeyboard
	(*ClientGetMediaHistory)(nil),            // 8: msg.ClientGetMediaHistory
	(*ClientGetAllDownloadedMedia)(nil),      // 9: msg.ClientGetAllDownloadedMedia
	(*ClientGetRecentSearch)(nil),            // 10: msg.ClientGetRecentSearch
	(*ClientPutRecentSearch)(nil),            // 11: msg.ClientPutRecentSearch
	(*ClientRemoveRecentSearch)(nil),         // 12: msg.ClientRemoveRecentSearch
	(*ClientRemoveAllRecentSearches)(nil),    // 13: msg.ClientRemoveAllRecentSearches
	(*ClientGetSavedGifs)(nil),               // 14: msg.ClientGetSavedGifs
	(*ClientGetTeamCounters)(nil),            // 15: msg.ClientGetTeamCounters
	(*ClientPendingMessage)(nil),             // 16: msg.ClientPendingMessage
	(*ClientSearchResult)(nil),               // 17: msg.ClientSearchResult
	(*ClientFilesMany)(nil),                  // 18: msg.ClientFilesMany
	(*ClientFile)(nil),                       // 19: msg.ClientFile
	(*ClientFileRequest)(nil),                // 20: msg.ClientFileRequest
	(*ClientFileStatus)(nil),                 // 21: msg.ClientFileStatus
	(*ClientCachedMediaInfo)(nil),            // 22: msg.ClientCachedMediaInfo
	(*ClientPeerMediaInfo)(nil),              // 23: msg.ClientPeerMediaInfo
	(*ClientMediaSize)(nil),                  // 24: msg.ClientMediaSize
	(*ClientRecentSearch)(nil),               // 25: msg.ClientRecentSearch
	(*ClientRecentSearchMany)(nil),           // 26: msg.ClientRecentSearchMany
	(*ClientTeamCounters)(nil),               // 27: msg.ClientTeamCounters
	(*ClientGetFrequentReactions)(nil),       // 28: msg.ClientGetFrequentReactions
	(*ClientFrequentReactions)(nil),          // 29: msg.ClientFrequentReactions
	(*ClientDismissNotification)(nil),        // 30: msg.ClientDismissNotification
	(*ClientGetNotificationDismissTime)(nil), // 31: msg.ClientGetNotificationDismissTime
	(*ClientNotificationDismissTime)(nil),    // 32: msg.ClientNotificationDismissTime
	(*InputPeer)(nil),                        // 33: msg.InputPeer
	(InputMediaType)(0),                      // 34: msg.InputMediaType
	(*DocumentAttribute)(nil),                // 35: msg.DocumentAttribute
	(*MessageEntity)(nil),                    // 36: msg.MessageEntity
	(*InputTeam)(nil),                        // 37: msg.InputTeam
	(*FileLocation)(nil),                     // 38: msg.FileLocation
	(*UserMessage)(nil),                      // 39: msg.UserMessage
	(*User)(nil),                             // 40: msg.User
	(*Group)(nil),                            // 41: msg.Group
	(PeerType)(0),                            // 42: msg.PeerType
	(*Peer)(nil),                             // 43: msg.Peer
}
var file_client_proto_depIdxs = []int32{
	33, // 0: msg.ClientSendMessageMedia.Peer:type_name -> msg.InputPeer
	34, // 1: msg.ClientSendMessageMedia.MediaType:type_name -> msg.InputMediaType
	35, // 2: msg.ClientSendMessageMedia.Attributes:type_name -> msg.DocumentAttribute
	36, // 3: msg.ClientSendMessageMedia.Entities:type_name -> msg.MessageEntity
	33, // 4: msg.ClientGlobalSearch.Peer:type_name -> msg.InputPeer
	33, // 5: msg.ClientClearCachedMedia.Peer:type_name -> msg.InputPeer
	1,  // 6: msg.ClientClearCachedMedia.MediaTypes:type_name -> msg.ClientMediaType
	33, // 7: msg.ClientGetLastBotKeyboard.Peer:type_name -> msg.InputPeer
	1,  // 8: msg.ClientGetMediaHistory.MediaType:type_name -> msg.ClientMediaType
	33, // 9: msg.ClientGetMediaHistory.Peer:type_name -> msg.InputPeer
	1,  // 10: msg.ClientGetAllDownloadedMedia.MediaType:type_name -> msg.ClientMediaType
	33, // 11: msg.ClientPutRecentSearch.Peer:type_name -> msg.InputPeer
	33, // 12: msg.ClientRemoveRecentSearch.Peer:type_name -> msg.InputPeer
	37, // 13: msg.ClientGetTeamCounters.Team:type_name -> msg.InputTeam
	36, // 14: msg.ClientPendingMessage.Entities:type_name -> msg.MessageEntity
	34, // 15: msg.ClientPendingMessage.MediaType:type_name -> msg.InputMediaType
	38, // 16: msg.ClientPendingMessage.ServerFile:type_name -> msg.FileLocation
	39, // 17: msg.ClientSearchResult.Messages:type_name -> msg.UserMessage
	40, // 18: msg.ClientSearchResult.Users:type_name -> msg.User
	41, // 19: msg.ClientSearchResult.Groups:type_name -> msg.Group
	40, // 20: msg.ClientSearchResult.MatchedUsers:type_name -> msg.User
	41, // 21: msg.ClientSearchResult.MatchedGroups:type_name -> msg.Group
	19, // 22: msg.ClientFilesMany.Gifs:type_name -> msg.ClientFile
	0,  // 23: msg.ClientFile.Type:type_name -> msg.ClientFileType
	35, // 24: msg.ClientFile.Attributes:type_name -> msg.DocumentAttribute
	20, // 25: msg.ClientFileRequest.Next:type_name -> msg.ClientFileRequest
	23, // 26: msg.ClientCachedMediaInfo.MediaInfo:type_name -> msg.ClientPeerMediaInfo
	42, // 27: msg.ClientPeerMediaInfo.PeerType:type_name -> msg.PeerType
	24, // 28: msg.ClientPeerMediaInfo.Media:type_name -> msg.ClientMediaSize
	1,  // 29: msg.ClientMediaSize.MediaType:type_name -> msg.ClientMediaType
	43, // 30: msg.ClientRecentSearch.Peer:type_name -> msg.Peer
	25, // 31: msg.ClientRecentSearchMany.RecentSearches:type_name -> msg.ClientRecentSearch
	40, // 32: msg.ClientRecentSearchMany.Users:type_name -> msg.User
	41, // 33: msg.ClientRecentSearchMany.Groups:type_name -> msg.Group
	33, // 34: msg.ClientDismissNotification.Peer:type_name -> msg.InputPeer
	33, // 35: msg.ClientGetNotificationDismissTime.Peer:type_name -> msg.InputPeer
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	file_core_types_proto_init()
	file_chat_messages_medias_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSendMessageMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGlobalSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientContactSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetCachedMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientClearCachedMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetLastBotKeyboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetMediaHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetAllDownloadedMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetRecentSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPutRecentSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRemoveRecentSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRemoveAllRecentSearches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetSavedGifs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetTeamCounters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPendingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientFilesMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientFileStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCachedMediaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPeerMediaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMediaSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRecentSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRecentSearchMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientTeamCounters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetFrequentReactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientFrequentReactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientDismissNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientGetNotificationDismissTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientNotificationDismissTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		EnumInfos:         file_client_proto_enumTypes,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
