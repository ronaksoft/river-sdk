// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: chat.messages.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MessageSend
// @Function
// @Return: MessagesSent
type MessagesSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID   int64            `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer       *InputPeer       `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Body       string           `protobuf:"bytes,5,opt,name=Body,proto3" json:"Body,omitempty"`
	ReplyTo    int64            `protobuf:"varint,6,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	ClearDraft bool             `protobuf:"varint,7,opt,name=ClearDraft,proto3" json:"ClearDraft,omitempty"`
	Entities   []*MessageEntity `protobuf:"bytes,8,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *MessagesSend) Reset() {
	*x = MessagesSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSend) ProtoMessage() {}

func (x *MessagesSend) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSend.ProtoReflect.Descriptor instead.
func (*MessagesSend) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{0}
}

func (x *MessagesSend) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *MessagesSend) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesSend) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessagesSend) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *MessagesSend) GetClearDraft() bool {
	if x != nil {
		return x.ClearDraft
	}
	return false
}

func (x *MessagesSend) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// MessageSendMedia
// @Function
// @Return: Messages
type MessagesSendMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID   int64          `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer       *InputPeer     `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MediaType  InputMediaType `protobuf:"varint,3,opt,name=MediaType,proto3,enum=msg.InputMediaType" json:"MediaType,omitempty"`
	MediaData  []byte         `protobuf:"bytes,4,opt,name=MediaData,proto3" json:"MediaData,omitempty"`
	ReplyTo    int64          `protobuf:"varint,5,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	ClearDraft bool           `protobuf:"varint,6,opt,name=ClearDraft,proto3" json:"ClearDraft,omitempty"`
}

func (x *MessagesSendMedia) Reset() {
	*x = MessagesSendMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSendMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSendMedia) ProtoMessage() {}

func (x *MessagesSendMedia) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSendMedia.ProtoReflect.Descriptor instead.
func (*MessagesSendMedia) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{1}
}

func (x *MessagesSendMedia) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *MessagesSendMedia) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesSendMedia) GetMediaType() InputMediaType {
	if x != nil {
		return x.MediaType
	}
	return InputMediaType_InputMediaTypeEmpty
}

func (x *MessagesSendMedia) GetMediaData() []byte {
	if x != nil {
		return x.MediaData
	}
	return nil
}

func (x *MessagesSendMedia) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *MessagesSendMedia) GetClearDraft() bool {
	if x != nil {
		return x.ClearDraft
	}
	return false
}

// MessagesEdit
// @Function
// @Return: Bool
type MessagesEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID  int64            `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer      *InputPeer       `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Body      string           `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	MessageID int64            `protobuf:"varint,4,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Entities  []*MessageEntity `protobuf:"bytes,5,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *MessagesEdit) Reset() {
	*x = MessagesEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesEdit) ProtoMessage() {}

func (x *MessagesEdit) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesEdit.ProtoReflect.Descriptor instead.
func (*MessagesEdit) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{2}
}

func (x *MessagesEdit) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *MessagesEdit) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesEdit) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessagesEdit) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesEdit) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// MessagesEditMedia
// @Function
// @Return: Bool
type MessagesEditMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomID  int64            `protobuf:"varint,1,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	Peer      *InputPeer       `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64            `protobuf:"varint,3,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Caption   string           `protobuf:"bytes,4,opt,name=Caption,proto3" json:"Caption,omitempty"`
	Entities  []*MessageEntity `protobuf:"bytes,5,rep,name=Entities,proto3" json:"Entities,omitempty"`
}

func (x *MessagesEditMedia) Reset() {
	*x = MessagesEditMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesEditMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesEditMedia) ProtoMessage() {}

func (x *MessagesEditMedia) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesEditMedia.ProtoReflect.Descriptor instead.
func (*MessagesEditMedia) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{3}
}

func (x *MessagesEditMedia) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *MessagesEditMedia) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesEditMedia) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesEditMedia) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *MessagesEditMedia) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// MessageReadHistory
// @Function
// Returns:
type MessagesReadHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer  *InputPeer `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MaxID int64      `protobuf:"varint,3,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
}

func (x *MessagesReadHistory) Reset() {
	*x = MessagesReadHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesReadHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesReadHistory) ProtoMessage() {}

func (x *MessagesReadHistory) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesReadHistory.ProtoReflect.Descriptor instead.
func (*MessagesReadHistory) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{4}
}

func (x *MessagesReadHistory) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesReadHistory) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

// MessagesGet
// @Function
// Returns:     MessagesMany
type MessagesGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer        *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessagesIDs []int64    `protobuf:"varint,2,rep,packed,name=MessagesIDs,proto3" json:"MessagesIDs,omitempty"`
}

func (x *MessagesGet) Reset() {
	*x = MessagesGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGet) ProtoMessage() {}

func (x *MessagesGet) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGet.ProtoReflect.Descriptor instead.
func (*MessagesGet) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{5}
}

func (x *MessagesGet) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesGet) GetMessagesIDs() []int64 {
	if x != nil {
		return x.MessagesIDs
	}
	return nil
}

// MessagesGetHistory
// @Function
// Returns:     MessagesMany
type MessagesGetHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer  *InputPeer `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Limit int32      `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	MaxID int64      `protobuf:"varint,4,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
	MinID int64      `protobuf:"varint,5,opt,name=MinID,proto3" json:"MinID,omitempty"`
}

func (x *MessagesGetHistory) Reset() {
	*x = MessagesGetHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetHistory) ProtoMessage() {}

func (x *MessagesGetHistory) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetHistory.ProtoReflect.Descriptor instead.
func (*MessagesGetHistory) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{6}
}

func (x *MessagesGetHistory) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesGetHistory) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MessagesGetHistory) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

func (x *MessagesGetHistory) GetMinID() int64 {
	if x != nil {
		return x.MinID
	}
	return 0
}

// MessagesGetMediaHistory
// @Function
// Returns:     MessagesMany
type MessagesGetMediaHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer  *InputPeer    `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Limit int32         `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	MaxID int64         `protobuf:"varint,4,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
	Cat   MediaCategory `protobuf:"varint,5,opt,name=Cat,proto3,enum=msg.MediaCategory" json:"Cat,omitempty"`
}

func (x *MessagesGetMediaHistory) Reset() {
	*x = MessagesGetMediaHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetMediaHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetMediaHistory) ProtoMessage() {}

func (x *MessagesGetMediaHistory) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetMediaHistory.ProtoReflect.Descriptor instead.
func (*MessagesGetMediaHistory) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{7}
}

func (x *MessagesGetMediaHistory) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesGetMediaHistory) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MessagesGetMediaHistory) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

func (x *MessagesGetMediaHistory) GetCat() MediaCategory {
	if x != nil {
		return x.Cat
	}
	return MediaCategory_MediaCategoryNone
}

// MessagesGetDialogs
// @Function
// Returns:     MessagesDialogs
type MessagesGetDialogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit         int32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset        int32 `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	ExcludePinned bool  `protobuf:"varint,4,opt,name=ExcludePinned,proto3" json:"ExcludePinned,omitempty"`
}

func (x *MessagesGetDialogs) Reset() {
	*x = MessagesGetDialogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetDialogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetDialogs) ProtoMessage() {}

func (x *MessagesGetDialogs) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetDialogs.ProtoReflect.Descriptor instead.
func (*MessagesGetDialogs) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{8}
}

func (x *MessagesGetDialogs) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MessagesGetDialogs) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MessagesGetDialogs) GetExcludePinned() bool {
	if x != nil {
		return x.ExcludePinned
	}
	return false
}

// MessagesGetPinnedDialogs
// @Function
// @Returns: MessagesDialogs
type MessagesGetPinnedDialogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessagesGetPinnedDialogs) Reset() {
	*x = MessagesGetPinnedDialogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetPinnedDialogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetPinnedDialogs) ProtoMessage() {}

func (x *MessagesGetPinnedDialogs) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetPinnedDialogs.ProtoReflect.Descriptor instead.
func (*MessagesGetPinnedDialogs) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{9}
}

// MessagesGetDialog
// @Function
// Returns: Dialog
type MessagesGetDialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *MessagesGetDialog) Reset() {
	*x = MessagesGetDialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetDialog) ProtoMessage() {}

func (x *MessagesGetDialog) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetDialog.ProtoReflect.Descriptor instead.
func (*MessagesGetDialog) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{10}
}

func (x *MessagesGetDialog) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// MessagesSetTyping
// @Function
// Returns: Bool
type MessagesSetTyping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *InputPeer   `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Action TypingAction `protobuf:"varint,2,opt,name=Action,proto3,enum=msg.TypingAction" json:"Action,omitempty"`
}

func (x *MessagesSetTyping) Reset() {
	*x = MessagesSetTyping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSetTyping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSetTyping) ProtoMessage() {}

func (x *MessagesSetTyping) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSetTyping.ProtoReflect.Descriptor instead.
func (*MessagesSetTyping) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{11}
}

func (x *MessagesSetTyping) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesSetTyping) GetAction() TypingAction {
	if x != nil {
		return x.Action
	}
	return TypingAction_TypingActionTyping
}

// MessageClearHistory
// @Function
// Returns: Bool
type MessagesClearHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MaxID  int64      `protobuf:"varint,2,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
	Delete bool       `protobuf:"varint,3,opt,name=Delete,proto3" json:"Delete,omitempty"`
}

func (x *MessagesClearHistory) Reset() {
	*x = MessagesClearHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesClearHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesClearHistory) ProtoMessage() {}

func (x *MessagesClearHistory) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesClearHistory.ProtoReflect.Descriptor instead.
func (*MessagesClearHistory) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{12}
}

func (x *MessagesClearHistory) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesClearHistory) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

func (x *MessagesClearHistory) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

// MessagesDelete
// @Function
// Returns: Bool
type MessagesDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageIDs []int64    `protobuf:"varint,2,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	Revoke     bool       `protobuf:"varint,3,opt,name=Revoke,proto3" json:"Revoke,omitempty"`
}

func (x *MessagesDelete) Reset() {
	*x = MessagesDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesDelete) ProtoMessage() {}

func (x *MessagesDelete) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesDelete.ProtoReflect.Descriptor instead.
func (*MessagesDelete) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{13}
}

func (x *MessagesDelete) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesDelete) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

func (x *MessagesDelete) GetRevoke() bool {
	if x != nil {
		return x.Revoke
	}
	return false
}

// MessagesForward
// @Function
// Returns: Bool
type MessagesForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPeer   *InputPeer `protobuf:"bytes,1,opt,name=FromPeer,proto3" json:"FromPeer,omitempty"`
	ToPeer     *InputPeer `protobuf:"bytes,2,opt,name=ToPeer,proto3" json:"ToPeer,omitempty"`
	Silence    bool       `protobuf:"varint,3,opt,name=Silence,proto3" json:"Silence,omitempty"`
	MessageIDs []int64    `protobuf:"varint,4,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
	RandomID   int64      `protobuf:"varint,5,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
}

func (x *MessagesForward) Reset() {
	*x = MessagesForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesForward) ProtoMessage() {}

func (x *MessagesForward) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesForward.ProtoReflect.Descriptor instead.
func (*MessagesForward) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{14}
}

func (x *MessagesForward) GetFromPeer() *InputPeer {
	if x != nil {
		return x.FromPeer
	}
	return nil
}

func (x *MessagesForward) GetToPeer() *InputPeer {
	if x != nil {
		return x.ToPeer
	}
	return nil
}

func (x *MessagesForward) GetSilence() bool {
	if x != nil {
		return x.Silence
	}
	return false
}

func (x *MessagesForward) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

func (x *MessagesForward) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

// MessagesReadContents
// @Function
// Returns: Bool
type MessagesReadContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageIDs []int64    `protobuf:"varint,2,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
}

func (x *MessagesReadContents) Reset() {
	*x = MessagesReadContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesReadContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesReadContents) ProtoMessage() {}

func (x *MessagesReadContents) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesReadContents.ProtoReflect.Descriptor instead.
func (*MessagesReadContents) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{15}
}

func (x *MessagesReadContents) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesReadContents) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

// MessagesSaveDraft
// @Function
// Returns: Bool
type MessagesSaveDraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer     *InputPeer       `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	ReplyTo  int64            `protobuf:"varint,2,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	Body     string           `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	Entities []*MessageEntity `protobuf:"bytes,4,rep,name=Entities,proto3" json:"Entities,omitempty"`
	EditedID int64            `protobuf:"varint,5,opt,name=EditedID,proto3" json:"EditedID,omitempty"`
}

func (x *MessagesSaveDraft) Reset() {
	*x = MessagesSaveDraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSaveDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSaveDraft) ProtoMessage() {}

func (x *MessagesSaveDraft) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSaveDraft.ProtoReflect.Descriptor instead.
func (*MessagesSaveDraft) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{16}
}

func (x *MessagesSaveDraft) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesSaveDraft) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *MessagesSaveDraft) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessagesSaveDraft) GetEntities() []*MessageEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *MessagesSaveDraft) GetEditedID() int64 {
	if x != nil {
		return x.EditedID
	}
	return 0
}

// MessagesClearDraft
// @Function
// @Returns: Bool
type MessagesClearDraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *MessagesClearDraft) Reset() {
	*x = MessagesClearDraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesClearDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesClearDraft) ProtoMessage() {}

func (x *MessagesClearDraft) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesClearDraft.ProtoReflect.Descriptor instead.
func (*MessagesClearDraft) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{17}
}

func (x *MessagesClearDraft) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// MessagesToggleDialogPin
// @Function
// @Returns: Bool
type MessagesToggleDialogPin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	Pin  bool       `protobuf:"varint,2,opt,name=Pin,proto3" json:"Pin,omitempty"`
}

func (x *MessagesToggleDialogPin) Reset() {
	*x = MessagesToggleDialogPin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesToggleDialogPin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesToggleDialogPin) ProtoMessage() {}

func (x *MessagesToggleDialogPin) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesToggleDialogPin.ProtoReflect.Descriptor instead.
func (*MessagesToggleDialogPin) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{18}
}

func (x *MessagesToggleDialogPin) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesToggleDialogPin) GetPin() bool {
	if x != nil {
		return x.Pin
	}
	return false
}

// MessagesReorderPinnedDialogs
// @Function
// @Returns: Bool
type MessagesReorderPinnedDialogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*InputPeer `protobuf:"bytes,1,rep,name=Peers,proto3" json:"Peers,omitempty"`
}

func (x *MessagesReorderPinnedDialogs) Reset() {
	*x = MessagesReorderPinnedDialogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesReorderPinnedDialogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesReorderPinnedDialogs) ProtoMessage() {}

func (x *MessagesReorderPinnedDialogs) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesReorderPinnedDialogs.ProtoReflect.Descriptor instead.
func (*MessagesReorderPinnedDialogs) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{19}
}

func (x *MessagesReorderPinnedDialogs) GetPeers() []*InputPeer {
	if x != nil {
		return x.Peers
	}
	return nil
}

// MessagesSendScreenShotNotification
// @Function
// @Returns: Bool
type MessagesSendScreenShotNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer     *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	RandomID int64      `protobuf:"varint,2,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	ReplyTo  int64      `protobuf:"varint,3,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	MinID    int64      `protobuf:"varint,4,opt,name=MinID,proto3" json:"MinID,omitempty"`
	MaxID    int64      `protobuf:"varint,5,opt,name=MaxID,proto3" json:"MaxID,omitempty"`
}

func (x *MessagesSendScreenShotNotification) Reset() {
	*x = MessagesSendScreenShotNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSendScreenShotNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSendScreenShotNotification) ProtoMessage() {}

func (x *MessagesSendScreenShotNotification) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSendScreenShotNotification.ProtoReflect.Descriptor instead.
func (*MessagesSendScreenShotNotification) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{20}
}

func (x *MessagesSendScreenShotNotification) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesSendScreenShotNotification) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *MessagesSendScreenShotNotification) GetReplyTo() int64 {
	if x != nil {
		return x.ReplyTo
	}
	return 0
}

func (x *MessagesSendScreenShotNotification) GetMinID() int64 {
	if x != nil {
		return x.MinID
	}
	return 0
}

func (x *MessagesSendScreenShotNotification) GetMaxID() int64 {
	if x != nil {
		return x.MaxID
	}
	return 0
}

// MessageSendReaction
// @Function
// @Returns: Bool
type MessagesSendReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64      `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Reaction  string     `protobuf:"bytes,3,opt,name=Reaction,proto3" json:"Reaction,omitempty"`
}

func (x *MessagesSendReaction) Reset() {
	*x = MessagesSendReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSendReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSendReaction) ProtoMessage() {}

func (x *MessagesSendReaction) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSendReaction.ProtoReflect.Descriptor instead.
func (*MessagesSendReaction) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{21}
}

func (x *MessagesSendReaction) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesSendReaction) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesSendReaction) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

// MessagesDeleteReaction
// @Function
// @Returns: Bool
type MessagesDeleteReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64      `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Reactions []string   `protobuf:"bytes,3,rep,name=Reactions,proto3" json:"Reactions,omitempty"`
}

func (x *MessagesDeleteReaction) Reset() {
	*x = MessagesDeleteReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesDeleteReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesDeleteReaction) ProtoMessage() {}

func (x *MessagesDeleteReaction) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesDeleteReaction.ProtoReflect.Descriptor instead.
func (*MessagesDeleteReaction) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{22}
}

func (x *MessagesDeleteReaction) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesDeleteReaction) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesDeleteReaction) GetReactions() []string {
	if x != nil {
		return x.Reactions
	}
	return nil
}

// MessagesGetReactionList
// @Function
// @Return: MessagesReactionList
type MessagesGetReactionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64      `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Hash      int32      `protobuf:"varint,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *MessagesGetReactionList) Reset() {
	*x = MessagesGetReactionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesGetReactionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesGetReactionList) ProtoMessage() {}

func (x *MessagesGetReactionList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesGetReactionList.ProtoReflect.Descriptor instead.
func (*MessagesGetReactionList) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{23}
}

func (x *MessagesGetReactionList) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesGetReactionList) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesGetReactionList) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

// MessagesPin
// @Function
// @Return: Bool
type MessagesTogglePin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageID int64      `protobuf:"varint,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Silent    bool       `protobuf:"varint,3,opt,name=Silent,proto3" json:"Silent,omitempty"`
}

func (x *MessagesTogglePin) Reset() {
	*x = MessagesTogglePin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesTogglePin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesTogglePin) ProtoMessage() {}

func (x *MessagesTogglePin) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesTogglePin.ProtoReflect.Descriptor instead.
func (*MessagesTogglePin) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{24}
}

func (x *MessagesTogglePin) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesTogglePin) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesTogglePin) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

// MessagesReadReaction
// @Function
// @Return: Bool
type MessagesReadReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *InputPeer `protobuf:"bytes,1,opt,name=Peer,proto3" json:"Peer,omitempty"`
	MessageIDs []int64    `protobuf:"varint,2,rep,packed,name=MessageIDs,proto3" json:"MessageIDs,omitempty"`
}

func (x *MessagesReadReaction) Reset() {
	*x = MessagesReadReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesReadReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesReadReaction) ProtoMessage() {}

func (x *MessagesReadReaction) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesReadReaction.ProtoReflect.Descriptor instead.
func (*MessagesReadReaction) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{25}
}

func (x *MessagesReadReaction) GetPeer() *InputPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *MessagesReadReaction) GetMessageIDs() []int64 {
	if x != nil {
		return x.MessageIDs
	}
	return nil
}

// MessagesDialogs
type MessagesDialogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialogs  []*Dialog      `protobuf:"bytes,1,rep,name=Dialogs,proto3" json:"Dialogs,omitempty"`
	Users    []*User        `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Messages []*UserMessage `protobuf:"bytes,3,rep,name=Messages,proto3" json:"Messages,omitempty"`
	Count    int32          `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
	UpdateID int64          `protobuf:"varint,5,opt,name=UpdateID,proto3" json:"UpdateID,omitempty"`
	Groups   []*Group       `protobuf:"bytes,6,rep,name=Groups,proto3" json:"Groups,omitempty"`
}

func (x *MessagesDialogs) Reset() {
	*x = MessagesDialogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesDialogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesDialogs) ProtoMessage() {}

func (x *MessagesDialogs) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesDialogs.ProtoReflect.Descriptor instead.
func (*MessagesDialogs) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{26}
}

func (x *MessagesDialogs) GetDialogs() []*Dialog {
	if x != nil {
		return x.Dialogs
	}
	return nil
}

func (x *MessagesDialogs) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *MessagesDialogs) GetMessages() []*UserMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *MessagesDialogs) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MessagesDialogs) GetUpdateID() int64 {
	if x != nil {
		return x.UpdateID
	}
	return 0
}

func (x *MessagesDialogs) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// MessagesSent
type MessagesSent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int64 `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	RandomID  int64 `protobuf:"varint,2,opt,name=RandomID,proto3" json:"RandomID,omitempty"`
	CreatedOn int64 `protobuf:"varint,3,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
}

func (x *MessagesSent) Reset() {
	*x = MessagesSent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesSent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSent) ProtoMessage() {}

func (x *MessagesSent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSent.ProtoReflect.Descriptor instead.
func (*MessagesSent) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{27}
}

func (x *MessagesSent) GetMessageID() int64 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *MessagesSent) GetRandomID() int64 {
	if x != nil {
		return x.RandomID
	}
	return 0
}

func (x *MessagesSent) GetCreatedOn() int64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

// MessagesMany
type MessagesMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages   []*UserMessage `protobuf:"bytes,1,rep,name=Messages,proto3" json:"Messages,omitempty"`
	Users      []*User        `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Groups     []*Group       `protobuf:"bytes,3,rep,name=Groups,proto3" json:"Groups,omitempty"`
	Continuous bool           `protobuf:"varint,4,opt,name=Continuous,proto3" json:"Continuous,omitempty"`
	Empty      bool           `protobuf:"varint,5,opt,name=Empty,proto3" json:"Empty,omitempty"`
}

func (x *MessagesMany) Reset() {
	*x = MessagesMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesMany) ProtoMessage() {}

func (x *MessagesMany) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesMany.ProtoReflect.Descriptor instead.
func (*MessagesMany) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{28}
}

func (x *MessagesMany) GetMessages() []*UserMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *MessagesMany) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *MessagesMany) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *MessagesMany) GetContinuous() bool {
	if x != nil {
		return x.Continuous
	}
	return false
}

func (x *MessagesMany) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

// MessagesReactionList
type MessagesReactionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ReactionList `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Users    []*User         `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Hash     int32           `protobuf:"varint,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Modified bool            `protobuf:"varint,4,opt,name=Modified,proto3" json:"Modified,omitempty"`
}

func (x *MessagesReactionList) Reset() {
	*x = MessagesReactionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesReactionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesReactionList) ProtoMessage() {}

func (x *MessagesReactionList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesReactionList.ProtoReflect.Descriptor instead.
func (*MessagesReactionList) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{29}
}

func (x *MessagesReactionList) GetList() []*ReactionList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MessagesReactionList) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *MessagesReactionList) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *MessagesReactionList) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

// ReactionList
type ReactionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reaction string  `protobuf:"bytes,1,opt,name=Reaction,proto3" json:"Reaction,omitempty"`
	UserIDs  []int64 `protobuf:"varint,2,rep,packed,name=UserIDs,proto3" json:"UserIDs,omitempty"`
}

func (x *ReactionList) Reset() {
	*x = ReactionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionList) ProtoMessage() {}

func (x *ReactionList) ProtoReflect() protoreflect.Message {
	mi := &file_chat_messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionList.ProtoReflect.Descriptor instead.
func (*ReactionList) Descriptor() ([]byte, []int) {
	return file_chat_messages_proto_rawDescGZIP(), []int{30}
}

func (x *ReactionList) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

func (x *ReactionList) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

var File_chat_messages_proto protoreflect.FileDescriptor

var file_chat_messages_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x11,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0xb0, 0x01, 0x0a,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x2e, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0xbb, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x64, 0x69, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4f, 0x0a,
	0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x22, 0x53,
	0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x49, 0x44, 0x73, 0x22, 0x7a, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x69, 0x6e, 0x49, 0x44, 0x22,
	0x8f, 0x01, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x03, 0x43,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x03, 0x43, 0x61,
	0x74, 0x22, 0x68, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x45, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x22, 0x62, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x6c,
	0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22, 0xbb, 0x01, 0x0a,
	0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x2a, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06,
	0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x06, 0x54, 0x6f,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x14, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x12, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x69, 0x6e, 0x12,
	0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x50, 0x69, 0x6e, 0x22, 0x44, 0x0a, 0x1c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x22,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x53, 0x68, 0x6f, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x69, 0x6e,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x49, 0x44, 0x22, 0x74, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78,
	0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6f, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x6d, 0x0a, 0x11, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x69, 0x6e, 0x12, 0x22,
	0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x2c, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x22, 0x66, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x53, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x22, 0xb7, 0x01, 0x0a,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x2c, 0x0a,
	0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x06,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chat_messages_proto_rawDescOnce sync.Once
	file_chat_messages_proto_rawDescData = file_chat_messages_proto_rawDesc
)

func file_chat_messages_proto_rawDescGZIP() []byte {
	file_chat_messages_proto_rawDescOnce.Do(func() {
		file_chat_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_messages_proto_rawDescData)
	})
	return file_chat_messages_proto_rawDescData
}

var file_chat_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_chat_messages_proto_goTypes = []interface{}{
	(*MessagesSend)(nil),                       // 0: msg.MessagesSend
	(*MessagesSendMedia)(nil),                  // 1: msg.MessagesSendMedia
	(*MessagesEdit)(nil),                       // 2: msg.MessagesEdit
	(*MessagesEditMedia)(nil),                  // 3: msg.MessagesEditMedia
	(*MessagesReadHistory)(nil),                // 4: msg.MessagesReadHistory
	(*MessagesGet)(nil),                        // 5: msg.MessagesGet
	(*MessagesGetHistory)(nil),                 // 6: msg.MessagesGetHistory
	(*MessagesGetMediaHistory)(nil),            // 7: msg.MessagesGetMediaHistory
	(*MessagesGetDialogs)(nil),                 // 8: msg.MessagesGetDialogs
	(*MessagesGetPinnedDialogs)(nil),           // 9: msg.MessagesGetPinnedDialogs
	(*MessagesGetDialog)(nil),                  // 10: msg.MessagesGetDialog
	(*MessagesSetTyping)(nil),                  // 11: msg.MessagesSetTyping
	(*MessagesClearHistory)(nil),               // 12: msg.MessagesClearHistory
	(*MessagesDelete)(nil),                     // 13: msg.MessagesDelete
	(*MessagesForward)(nil),                    // 14: msg.MessagesForward
	(*MessagesReadContents)(nil),               // 15: msg.MessagesReadContents
	(*MessagesSaveDraft)(nil),                  // 16: msg.MessagesSaveDraft
	(*MessagesClearDraft)(nil),                 // 17: msg.MessagesClearDraft
	(*MessagesToggleDialogPin)(nil),            // 18: msg.MessagesToggleDialogPin
	(*MessagesReorderPinnedDialogs)(nil),       // 19: msg.MessagesReorderPinnedDialogs
	(*MessagesSendScreenShotNotification)(nil), // 20: msg.MessagesSendScreenShotNotification
	(*MessagesSendReaction)(nil),               // 21: msg.MessagesSendReaction
	(*MessagesDeleteReaction)(nil),             // 22: msg.MessagesDeleteReaction
	(*MessagesGetReactionList)(nil),            // 23: msg.MessagesGetReactionList
	(*MessagesTogglePin)(nil),                  // 24: msg.MessagesTogglePin
	(*MessagesReadReaction)(nil),               // 25: msg.MessagesReadReaction
	(*MessagesDialogs)(nil),                    // 26: msg.MessagesDialogs
	(*MessagesSent)(nil),                       // 27: msg.MessagesSent
	(*MessagesMany)(nil),                       // 28: msg.MessagesMany
	(*MessagesReactionList)(nil),               // 29: msg.MessagesReactionList
	(*ReactionList)(nil),                       // 30: msg.ReactionList
	(*InputPeer)(nil),                          // 31: msg.InputPeer
	(*MessageEntity)(nil),                      // 32: msg.MessageEntity
	(InputMediaType)(0),                        // 33: msg.InputMediaType
	(MediaCategory)(0),                         // 34: msg.MediaCategory
	(TypingAction)(0),                          // 35: msg.TypingAction
	(*Dialog)(nil),                             // 36: msg.Dialog
	(*User)(nil),                               // 37: msg.User
	(*UserMessage)(nil),                        // 38: msg.UserMessage
	(*Group)(nil),                              // 39: msg.Group
}
var file_chat_messages_proto_depIdxs = []int32{
	31, // 0: msg.MessagesSend.Peer:type_name -> msg.InputPeer
	32, // 1: msg.MessagesSend.Entities:type_name -> msg.MessageEntity
	31, // 2: msg.MessagesSendMedia.Peer:type_name -> msg.InputPeer
	33, // 3: msg.MessagesSendMedia.MediaType:type_name -> msg.InputMediaType
	31, // 4: msg.MessagesEdit.Peer:type_name -> msg.InputPeer
	32, // 5: msg.MessagesEdit.Entities:type_name -> msg.MessageEntity
	31, // 6: msg.MessagesEditMedia.Peer:type_name -> msg.InputPeer
	32, // 7: msg.MessagesEditMedia.Entities:type_name -> msg.MessageEntity
	31, // 8: msg.MessagesReadHistory.Peer:type_name -> msg.InputPeer
	31, // 9: msg.MessagesGet.Peer:type_name -> msg.InputPeer
	31, // 10: msg.MessagesGetHistory.Peer:type_name -> msg.InputPeer
	31, // 11: msg.MessagesGetMediaHistory.Peer:type_name -> msg.InputPeer
	34, // 12: msg.MessagesGetMediaHistory.Cat:type_name -> msg.MediaCategory
	31, // 13: msg.MessagesGetDialog.Peer:type_name -> msg.InputPeer
	31, // 14: msg.MessagesSetTyping.Peer:type_name -> msg.InputPeer
	35, // 15: msg.MessagesSetTyping.Action:type_name -> msg.TypingAction
	31, // 16: msg.MessagesClearHistory.Peer:type_name -> msg.InputPeer
	31, // 17: msg.MessagesDelete.Peer:type_name -> msg.InputPeer
	31, // 18: msg.MessagesForward.FromPeer:type_name -> msg.InputPeer
	31, // 19: msg.MessagesForward.ToPeer:type_name -> msg.InputPeer
	31, // 20: msg.MessagesReadContents.Peer:type_name -> msg.InputPeer
	31, // 21: msg.MessagesSaveDraft.Peer:type_name -> msg.InputPeer
	32, // 22: msg.MessagesSaveDraft.Entities:type_name -> msg.MessageEntity
	31, // 23: msg.MessagesClearDraft.Peer:type_name -> msg.InputPeer
	31, // 24: msg.MessagesToggleDialogPin.Peer:type_name -> msg.InputPeer
	31, // 25: msg.MessagesReorderPinnedDialogs.Peers:type_name -> msg.InputPeer
	31, // 26: msg.MessagesSendScreenShotNotification.Peer:type_name -> msg.InputPeer
	31, // 27: msg.MessagesSendReaction.Peer:type_name -> msg.InputPeer
	31, // 28: msg.MessagesDeleteReaction.Peer:type_name -> msg.InputPeer
	31, // 29: msg.MessagesGetReactionList.Peer:type_name -> msg.InputPeer
	31, // 30: msg.MessagesTogglePin.Peer:type_name -> msg.InputPeer
	31, // 31: msg.MessagesReadReaction.Peer:type_name -> msg.InputPeer
	36, // 32: msg.MessagesDialogs.Dialogs:type_name -> msg.Dialog
	37, // 33: msg.MessagesDialogs.Users:type_name -> msg.User
	38, // 34: msg.MessagesDialogs.Messages:type_name -> msg.UserMessage
	39, // 35: msg.MessagesDialogs.Groups:type_name -> msg.Group
	38, // 36: msg.MessagesMany.Messages:type_name -> msg.UserMessage
	37, // 37: msg.MessagesMany.Users:type_name -> msg.User
	39, // 38: msg.MessagesMany.Groups:type_name -> msg.Group
	30, // 39: msg.MessagesReactionList.List:type_name -> msg.ReactionList
	37, // 40: msg.MessagesReactionList.Users:type_name -> msg.User
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_chat_messages_proto_init() }
func file_chat_messages_proto_init() {
	if File_chat_messages_proto != nil {
		return
	}
	file_core_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chat_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSendMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesEditMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesReadHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetMediaHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetDialogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetPinnedDialogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetDialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSetTyping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesClearHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesReadContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSaveDraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesClearDraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesToggleDialogPin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesReorderPinnedDialogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSendScreenShotNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSendReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesDeleteReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesGetReactionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesTogglePin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesReadReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesDialogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesSent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesReactionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_messages_proto_goTypes,
		DependencyIndexes: file_chat_messages_proto_depIdxs,
		MessageInfos:      file_chat_messages_proto_msgTypes,
	}.Build()
	File_chat_messages_proto = out.File
	file_chat_messages_proto_rawDesc = nil
	file_chat_messages_proto_goTypes = nil
	file_chat_messages_proto_depIdxs = nil
}
