// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: client.updates.proto

package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ClientPendingMessageDelivery
type ClientPendingMessageDelivery struct {
	Messages       *UserMessage          `protobuf:"bytes,1,req,name=Messages" json:"Messages,omitempty"`
	PendingMessage *ClientPendingMessage `protobuf:"bytes,2,req,name=PendingMessage" json:"PendingMessage,omitempty"`
	Success        bool                  `protobuf:"varint,3,req,name=Success" json:"Success"`
}

func (m *ClientPendingMessageDelivery) Reset()         { *m = ClientPendingMessageDelivery{} }
func (m *ClientPendingMessageDelivery) String() string { return proto.CompactTextString(m) }
func (*ClientPendingMessageDelivery) ProtoMessage()    {}
func (*ClientPendingMessageDelivery) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_updates_3d7bee4d63a50438, []int{0}
}
func (m *ClientPendingMessageDelivery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClientPendingMessageDelivery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClientPendingMessageDelivery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ClientPendingMessageDelivery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientPendingMessageDelivery.Merge(dst, src)
}
func (m *ClientPendingMessageDelivery) XXX_Size() int {
	return m.Size()
}
func (m *ClientPendingMessageDelivery) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientPendingMessageDelivery.DiscardUnknown(m)
}

var xxx_messageInfo_ClientPendingMessageDelivery proto.InternalMessageInfo

func (m *ClientPendingMessageDelivery) GetMessages() *UserMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *ClientPendingMessageDelivery) GetPendingMessage() *ClientPendingMessage {
	if m != nil {
		return m.PendingMessage
	}
	return nil
}

func (m *ClientPendingMessageDelivery) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*ClientPendingMessageDelivery)(nil), "msg.ClientPendingMessageDelivery")
}
func (m *ClientPendingMessageDelivery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClientPendingMessageDelivery) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Messages == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Messages")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintClientUpdates(dAtA, i, uint64(m.Messages.Size()))
		n1, err := m.Messages.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.PendingMessage == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("PendingMessage")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintClientUpdates(dAtA, i, uint64(m.PendingMessage.Size()))
		n2, err := m.PendingMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	dAtA[i] = 0x18
	i++
	if m.Success {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}

func encodeVarintClientUpdates(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ClientPendingMessageDelivery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Messages != nil {
		l = m.Messages.Size()
		n += 1 + l + sovClientUpdates(uint64(l))
	}
	if m.PendingMessage != nil {
		l = m.PendingMessage.Size()
		n += 1 + l + sovClientUpdates(uint64(l))
	}
	n += 2
	return n
}

func sovClientUpdates(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozClientUpdates(x uint64) (n int) {
	return sovClientUpdates(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClientPendingMessageDelivery) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClientUpdates
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClientPendingMessageDelivery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClientPendingMessageDelivery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Messages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientUpdates
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientUpdates
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Messages == nil {
				m.Messages = &UserMessage{}
			}
			if err := m.Messages.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientUpdates
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClientUpdates
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PendingMessage == nil {
				m.PendingMessage = &ClientPendingMessage{}
			}
			if err := m.PendingMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClientUpdates
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipClientUpdates(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthClientUpdates
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Messages")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PendingMessage")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Success")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClientUpdates(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClientUpdates
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientUpdates
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClientUpdates
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthClientUpdates
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowClientUpdates
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipClientUpdates(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthClientUpdates = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClientUpdates   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("client.updates.proto", fileDescriptor_client_updates_3d7bee4d63a50438)
}

var fileDescriptor_client_updates_3d7bee4d63a50438 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x2d, 0x48, 0x49, 0x2c, 0x49, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0xce, 0x2d, 0x4e, 0x97, 0x12, 0x48, 0xce, 0x2f, 0x4a, 0xd5, 0x2b, 0xa9, 0x2c, 0x80,
	0x09, 0x4b, 0x49, 0x41, 0x15, 0x83, 0x25, 0x72, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x61, 0x72, 0x4a,
	0xeb, 0x19, 0xb9, 0x64, 0x9c, 0xc1, 0xd2, 0x01, 0xa9, 0x79, 0x29, 0x99, 0x79, 0xe9, 0xbe, 0x10,
	0x79, 0x97, 0xd4, 0x9c, 0xcc, 0xb2, 0xd4, 0xa2, 0x4a, 0x21, 0x1d, 0x2e, 0x0e, 0xa8, 0x50, 0xb1,
	0x04, 0xa3, 0x02, 0x93, 0x06, 0xb7, 0x91, 0x80, 0x5e, 0x6e, 0x71, 0xba, 0x5e, 0x68, 0x71, 0x6a,
	0x11, 0x54, 0x22, 0x08, 0xae, 0x42, 0xc8, 0x91, 0x8b, 0x0f, 0xd5, 0x1c, 0x09, 0x26, 0xb0, 0x1e,
	0x49, 0xb0, 0x1e, 0x6c, 0x16, 0x05, 0xa1, 0x69, 0x10, 0x92, 0xe3, 0x62, 0x0f, 0x2e, 0x4d, 0x4e,
	0x4e, 0x2d, 0x2e, 0x96, 0x60, 0x56, 0x60, 0xd2, 0xe0, 0x70, 0x62, 0x39, 0x71, 0x4f, 0x9e, 0x21,
	0x08, 0x26, 0xe8, 0x24, 0x71, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9,
	0x31, 0x4e, 0x78, 0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf5, 0xac, 0x53, 0xd6, 0x15, 0x01, 0x00, 0x00,
}
