// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: core.message_medias.proto

package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// InputMediaUploadedPhoto
type InputMediaUploadedPhoto struct {
	Caption  string           `protobuf:"bytes,1,req,name=Caption" json:"Caption"`
	Stickers []*InputDocument `protobuf:"bytes,2,rep,name=Stickers" json:"Stickers,omitempty"`
	File     *InputFile       `protobuf:"bytes,3,req,name=File" json:"File,omitempty"`
}

func (m *InputMediaUploadedPhoto) Reset()         { *m = InputMediaUploadedPhoto{} }
func (m *InputMediaUploadedPhoto) String() string { return proto.CompactTextString(m) }
func (*InputMediaUploadedPhoto) ProtoMessage()    {}
func (*InputMediaUploadedPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_message_medias_74147aafd880c80f, []int{0}
}
func (m *InputMediaUploadedPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputMediaUploadedPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputMediaUploadedPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *InputMediaUploadedPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputMediaUploadedPhoto.Merge(dst, src)
}
func (m *InputMediaUploadedPhoto) XXX_Size() int {
	return m.Size()
}
func (m *InputMediaUploadedPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_InputMediaUploadedPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_InputMediaUploadedPhoto proto.InternalMessageInfo

func (m *InputMediaUploadedPhoto) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *InputMediaUploadedPhoto) GetStickers() []*InputDocument {
	if m != nil {
		return m.Stickers
	}
	return nil
}

func (m *InputMediaUploadedPhoto) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

// InputMediaPhoto
type InputMediaPhoto struct {
	Caption string         `protobuf:"bytes,1,req,name=Caption" json:"Caption"`
	Photo   *InputDocument `protobuf:"bytes,2,req,name=Photo" json:"Photo,omitempty"`
}

func (m *InputMediaPhoto) Reset()         { *m = InputMediaPhoto{} }
func (m *InputMediaPhoto) String() string { return proto.CompactTextString(m) }
func (*InputMediaPhoto) ProtoMessage()    {}
func (*InputMediaPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_message_medias_74147aafd880c80f, []int{1}
}
func (m *InputMediaPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputMediaPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputMediaPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *InputMediaPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputMediaPhoto.Merge(dst, src)
}
func (m *InputMediaPhoto) XXX_Size() int {
	return m.Size()
}
func (m *InputMediaPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_InputMediaPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_InputMediaPhoto proto.InternalMessageInfo

func (m *InputMediaPhoto) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *InputMediaPhoto) GetPhoto() *InputDocument {
	if m != nil {
		return m.Photo
	}
	return nil
}

// InputMediaContact
type InputMediaContact struct {
	Phone     string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	FirstName string `protobuf:"bytes,2,req,name=FirstName" json:"FirstName"`
	LastName  string `protobuf:"bytes,3,req,name=LastName" json:"LastName"`
}

func (m *InputMediaContact) Reset()         { *m = InputMediaContact{} }
func (m *InputMediaContact) String() string { return proto.CompactTextString(m) }
func (*InputMediaContact) ProtoMessage()    {}
func (*InputMediaContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_message_medias_74147aafd880c80f, []int{2}
}
func (m *InputMediaContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputMediaContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputMediaContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *InputMediaContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputMediaContact.Merge(dst, src)
}
func (m *InputMediaContact) XXX_Size() int {
	return m.Size()
}
func (m *InputMediaContact) XXX_DiscardUnknown() {
	xxx_messageInfo_InputMediaContact.DiscardUnknown(m)
}

var xxx_messageInfo_InputMediaContact proto.InternalMessageInfo

func (m *InputMediaContact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *InputMediaContact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *InputMediaContact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

// InputMediaUploadedDocument
type InputMediaUploadedDocument struct {
	File      *InputFile       `protobuf:"bytes,1,req,name=File" json:"File,omitempty"`
	Thumbnail *InputFile       `protobuf:"bytes,2,req,name=Thumbnail" json:"Thumbnail,omitempty"`
	MimeType  string           `protobuf:"bytes,3,req,name=MimeType" json:"MimeType"`
	Caption   string           `protobuf:"bytes,4,req,name=Caption" json:"Caption"`
	Stickers  []*InputDocument `protobuf:"bytes,5,rep,name=Stickers" json:"Stickers,omitempty"`
}

func (m *InputMediaUploadedDocument) Reset()         { *m = InputMediaUploadedDocument{} }
func (m *InputMediaUploadedDocument) String() string { return proto.CompactTextString(m) }
func (*InputMediaUploadedDocument) ProtoMessage()    {}
func (*InputMediaUploadedDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_message_medias_74147aafd880c80f, []int{3}
}
func (m *InputMediaUploadedDocument) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputMediaUploadedDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputMediaUploadedDocument.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *InputMediaUploadedDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputMediaUploadedDocument.Merge(dst, src)
}
func (m *InputMediaUploadedDocument) XXX_Size() int {
	return m.Size()
}
func (m *InputMediaUploadedDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_InputMediaUploadedDocument.DiscardUnknown(m)
}

var xxx_messageInfo_InputMediaUploadedDocument proto.InternalMessageInfo

func (m *InputMediaUploadedDocument) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *InputMediaUploadedDocument) GetThumbnail() *InputFile {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

func (m *InputMediaUploadedDocument) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *InputMediaUploadedDocument) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *InputMediaUploadedDocument) GetStickers() []*InputDocument {
	if m != nil {
		return m.Stickers
	}
	return nil
}

// InputMediaDocument
type InputMediaDocument struct {
	Caption  string         `protobuf:"bytes,1,req,name=Caption" json:"Caption"`
	Document *InputDocument `protobuf:"bytes,2,req,name=Document" json:"Document,omitempty"`
}

func (m *InputMediaDocument) Reset()         { *m = InputMediaDocument{} }
func (m *InputMediaDocument) String() string { return proto.CompactTextString(m) }
func (*InputMediaDocument) ProtoMessage()    {}
func (*InputMediaDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_message_medias_74147aafd880c80f, []int{4}
}
func (m *InputMediaDocument) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InputMediaDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InputMediaDocument.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *InputMediaDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputMediaDocument.Merge(dst, src)
}
func (m *InputMediaDocument) XXX_Size() int {
	return m.Size()
}
func (m *InputMediaDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_InputMediaDocument.DiscardUnknown(m)
}

var xxx_messageInfo_InputMediaDocument proto.InternalMessageInfo

func (m *InputMediaDocument) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *InputMediaDocument) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func init() {
	proto.RegisterType((*InputMediaUploadedPhoto)(nil), "msg.InputMediaUploadedPhoto")
	proto.RegisterType((*InputMediaPhoto)(nil), "msg.InputMediaPhoto")
	proto.RegisterType((*InputMediaContact)(nil), "msg.InputMediaContact")
	proto.RegisterType((*InputMediaUploadedDocument)(nil), "msg.InputMediaUploadedDocument")
	proto.RegisterType((*InputMediaDocument)(nil), "msg.InputMediaDocument")
}
func (m *InputMediaUploadedPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputMediaUploadedPhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.Caption)))
	i += copy(dAtA[i:], m.Caption)
	if len(m.Stickers) > 0 {
		for _, msg := range m.Stickers {
			dAtA[i] = 0x12
			i++
			i = encodeVarintCoreMessageMedias(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.File == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	} else {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCoreMessageMedias(dAtA, i, uint64(m.File.Size()))
		n1, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *InputMediaPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputMediaPhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.Caption)))
	i += copy(dAtA[i:], m.Caption)
	if m.Photo == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Photo")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCoreMessageMedias(dAtA, i, uint64(m.Photo.Size()))
		n2, err := m.Photo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *InputMediaContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputMediaContact) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.FirstName)))
	i += copy(dAtA[i:], m.FirstName)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.LastName)))
	i += copy(dAtA[i:], m.LastName)
	return i, nil
}

func (m *InputMediaUploadedDocument) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputMediaUploadedDocument) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.File == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCoreMessageMedias(dAtA, i, uint64(m.File.Size()))
		n3, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Thumbnail == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Thumbnail")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCoreMessageMedias(dAtA, i, uint64(m.Thumbnail.Size()))
		n4, err := m.Thumbnail.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	dAtA[i] = 0x1a
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.MimeType)))
	i += copy(dAtA[i:], m.MimeType)
	dAtA[i] = 0x22
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.Caption)))
	i += copy(dAtA[i:], m.Caption)
	if len(m.Stickers) > 0 {
		for _, msg := range m.Stickers {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintCoreMessageMedias(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *InputMediaDocument) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputMediaDocument) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintCoreMessageMedias(dAtA, i, uint64(len(m.Caption)))
	i += copy(dAtA[i:], m.Caption)
	if m.Document == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Document")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCoreMessageMedias(dAtA, i, uint64(m.Document.Size()))
		n5, err := m.Document.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func encodeVarintCoreMessageMedias(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *InputMediaUploadedPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Caption)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	if len(m.Stickers) > 0 {
		for _, e := range m.Stickers {
			l = e.Size()
			n += 1 + l + sovCoreMessageMedias(uint64(l))
		}
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovCoreMessageMedias(uint64(l))
	}
	return n
}

func (m *InputMediaPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Caption)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovCoreMessageMedias(uint64(l))
	}
	return n
}

func (m *InputMediaContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	l = len(m.FirstName)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	return n
}

func (m *InputMediaUploadedDocument) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovCoreMessageMedias(uint64(l))
	}
	if m.Thumbnail != nil {
		l = m.Thumbnail.Size()
		n += 1 + l + sovCoreMessageMedias(uint64(l))
	}
	l = len(m.MimeType)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	l = len(m.Caption)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	if len(m.Stickers) > 0 {
		for _, e := range m.Stickers {
			l = e.Size()
			n += 1 + l + sovCoreMessageMedias(uint64(l))
		}
	}
	return n
}

func (m *InputMediaDocument) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Caption)
	n += 1 + l + sovCoreMessageMedias(uint64(l))
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovCoreMessageMedias(uint64(l))
	}
	return n
}

func sovCoreMessageMedias(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozCoreMessageMedias(x uint64) (n int) {
	return sovCoreMessageMedias(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *InputMediaUploadedPhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMessageMedias
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputMediaUploadedPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputMediaUploadedPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Caption = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickers = append(m.Stickers, &InputDocument{})
			if err := m.Stickers[len(m.Stickers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMessageMedias(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Caption")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputMediaPhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMessageMedias
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputMediaPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputMediaPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Caption = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputDocument{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMessageMedias(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Caption")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Photo")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputMediaContact) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMessageMedias
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputMediaContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputMediaContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMessageMedias(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FirstName")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastName")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputMediaUploadedDocument) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMessageMedias
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputMediaUploadedDocument: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputMediaUploadedDocument: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumbnail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumbnail == nil {
				m.Thumbnail = &InputFile{}
			}
			if err := m.Thumbnail.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Caption = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickers = append(m.Stickers, &InputDocument{})
			if err := m.Stickers[len(m.Stickers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMessageMedias(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Thumbnail")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("MimeType")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Caption")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputMediaDocument) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMessageMedias
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputMediaDocument: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputMediaDocument: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Caption = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMessageMedias(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMessageMedias
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Caption")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Document")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCoreMessageMedias(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCoreMessageMedias
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoreMessageMedias
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthCoreMessageMedias
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCoreMessageMedias
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCoreMessageMedias(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCoreMessageMedias = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCoreMessageMedias   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("core.message_medias.proto", fileDescriptor_core_message_medias_74147aafd880c80f)
}

var fileDescriptor_core_message_medias_74147aafd880c80f = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xbf, 0x6e, 0xea, 0x30,
	0x18, 0xc5, 0xe3, 0x04, 0x74, 0xc1, 0x48, 0xf7, 0xde, 0x7a, 0x69, 0xca, 0xe0, 0x46, 0x9e, 0x32,
	0x54, 0x19, 0x78, 0x04, 0xa8, 0x90, 0x2a, 0x95, 0xaa, 0xa2, 0x74, 0xea, 0x50, 0xb9, 0x89, 0x05,
	0x56, 0x71, 0x1c, 0xc5, 0xce, 0xc0, 0x43, 0x54, 0xea, 0x63, 0x31, 0x32, 0x76, 0xaa, 0x10, 0xbc,
	0x48, 0x15, 0x43, 0x12, 0x4a, 0xff, 0xc0, 0x7a, 0xbe, 0x9f, 0x8f, 0xce, 0x77, 0x3e, 0xc3, 0xb3,
	0x50, 0xa6, 0x2c, 0x10, 0x4c, 0x29, 0x3a, 0x66, 0x8f, 0x82, 0x45, 0x9c, 0xaa, 0x20, 0x49, 0xa5,
	0x96, 0xc8, 0x11, 0x6a, 0xdc, 0xfe, 0x6f, 0xe6, 0x7a, 0x96, 0xb0, 0xad, 0x4c, 0x5e, 0x00, 0x3c,
	0xbd, 0x8a, 0x93, 0x4c, 0x0f, 0x72, 0xf8, 0x3e, 0x99, 0x4a, 0x1a, 0xb1, 0xe8, 0x76, 0x92, 0x3f,
	0xc1, 0xf0, 0x4f, 0x8f, 0x26, 0x9a, 0xcb, 0xd8, 0x05, 0x9e, 0xed, 0x37, 0xbb, 0xb5, 0xf9, 0xfb,
	0xb9, 0x35, 0x2c, 0x44, 0x14, 0xc0, 0xc6, 0x9d, 0xe6, 0xe1, 0x33, 0x4b, 0x95, 0x6b, 0x7b, 0x8e,
	0xdf, 0xea, 0xa0, 0x40, 0xa8, 0x71, 0x60, 0xfc, 0x2e, 0x65, 0x98, 0x09, 0x16, 0xeb, 0x61, 0xc9,
	0x20, 0x02, 0x6b, 0x7d, 0x3e, 0x65, 0xae, 0xe3, 0xd9, 0x7e, 0xab, 0xf3, 0xb7, 0x62, 0x73, 0x75,
	0x68, 0x66, 0xe4, 0x01, 0xfe, 0xab, 0xe2, 0x1c, 0x17, 0xc3, 0x87, 0x75, 0x03, 0xba, 0xb6, 0xf1,
	0xfd, 0x2e, 0xc3, 0x06, 0x20, 0x19, 0x3c, 0xa9, 0xcc, 0x7b, 0x32, 0xd6, 0x34, 0xd4, 0xa8, 0x6d,
	0x9e, 0xc7, 0xec, 0x93, 0xf9, 0x46, 0x42, 0x04, 0x36, 0xfb, 0x3c, 0x55, 0xfa, 0x86, 0x0a, 0x66,
	0xec, 0x8b, 0x79, 0x25, 0x23, 0x0f, 0x36, 0xae, 0xe9, 0x16, 0x71, 0x76, 0x90, 0x52, 0x25, 0x4b,
	0x00, 0xdb, 0x5f, 0x3b, 0x2e, 0xc2, 0x95, 0xb5, 0x80, 0x9f, 0x6b, 0x41, 0x17, 0xb0, 0x39, 0x9a,
	0x64, 0xe2, 0x29, 0xa6, 0x7c, 0xba, 0xdd, 0x73, 0x1f, 0xac, 0x80, 0x3c, 0xd2, 0x80, 0x0b, 0x36,
	0x9a, 0x25, 0x7b, 0x91, 0x0a, 0x75, 0xb7, 0xd3, 0xda, 0xa1, 0xd3, 0xd6, 0x0f, 0x9f, 0x96, 0x44,
	0x10, 0x55, 0x1b, 0x96, 0x9b, 0x1d, 0xf1, 0x81, 0x0a, 0xf6, 0x97, 0xe3, 0x95, 0x4c, 0xd7, 0x9d,
	0xaf, 0x30, 0x58, 0xac, 0x30, 0x58, 0xae, 0x30, 0x78, 0x5d, 0x63, 0x6b, 0xb1, 0xc6, 0xd6, 0xdb,
	0x1a, 0x5b, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x54, 0x58, 0x02, 0x2b, 0xf9, 0x02, 0x00, 0x00,
}
