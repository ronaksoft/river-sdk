// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.dev.proto

package msg

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// EchoWithDelay
type EchoWithDelay struct {
	DelayInSeconds int32 `protobuf:"varint,1,req,name=DelayInSeconds" json:"DelayInSeconds"`
}

func (m *EchoWithDelay) Reset()         { *m = EchoWithDelay{} }
func (m *EchoWithDelay) String() string { return proto.CompactTextString(m) }
func (*EchoWithDelay) ProtoMessage()    {}
func (*EchoWithDelay) Descriptor() ([]byte, []int) {
	return fileDescriptor_d549237421a44291, []int{0}
}
func (m *EchoWithDelay) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EchoWithDelay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EchoWithDelay.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EchoWithDelay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoWithDelay.Merge(m, src)
}
func (m *EchoWithDelay) XXX_Size() int {
	return m.Size()
}
func (m *EchoWithDelay) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoWithDelay.DiscardUnknown(m)
}

var xxx_messageInfo_EchoWithDelay proto.InternalMessageInfo

func (m *EchoWithDelay) GetDelayInSeconds() int32 {
	if m != nil {
		return m.DelayInSeconds
	}
	return 0
}

func init() {
	proto.RegisterType((*EchoWithDelay)(nil), "msg.EchoWithDelay")
}

func init() { proto.RegisterFile("chat.api.dev.proto", fileDescriptor_d549237421a44291) }

var fileDescriptor_d549237421a44291 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xce, 0x48, 0x2c,
	0xd1, 0x4b, 0x2c, 0xc8, 0xd4, 0x4b, 0x49, 0x2d, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0xce, 0x2d, 0x4e, 0x57, 0xb2, 0xe5, 0xe2, 0x75, 0x4d, 0xce, 0xc8, 0x0f, 0xcf, 0x2c, 0xc9, 0x70,
	0x49, 0xcd, 0x49, 0xac, 0x14, 0xd2, 0xe1, 0xe2, 0x03, 0x33, 0x3c, 0xf3, 0x82, 0x53, 0x93, 0xf3,
	0xf3, 0x52, 0x8a, 0x25, 0x18, 0x15, 0x98, 0x34, 0x58, 0x9d, 0x58, 0x4e, 0xdc, 0x93, 0x67, 0x08,
	0x42, 0x93, 0x73, 0x92, 0x38, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4,
	0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x06, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xe6, 0x83, 0x90, 0xd2, 0x72, 0x00, 0x00, 0x00,
}

func (m *EchoWithDelay) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EchoWithDelay) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintChatApiDev(dAtA, i, uint64(m.DelayInSeconds))
	return i, nil
}

func encodeVarintChatApiDev(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *EchoWithDelay) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiDev(uint64(m.DelayInSeconds))
	return n
}

func sovChatApiDev(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozChatApiDev(x uint64) (n int) {
	return sovChatApiDev(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EchoWithDelay) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiDev
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EchoWithDelay: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EchoWithDelay: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelayInSeconds", wireType)
			}
			m.DelayInSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiDev
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DelayInSeconds |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiDev(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiDev
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DelayInSeconds")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiDev(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiDev
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiDev
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiDev
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthChatApiDev
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowChatApiDev
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipChatApiDev(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthChatApiDev = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiDev   = fmt.Errorf("proto: integer overflow")
)
