// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.accounts.proto

package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// AccountPrivacyKey
type AccountPrivacyKey int32

const (
	AccountPrivacyKey_AccountPrivacyKeyNone            AccountPrivacyKey = 0
	AccountPrivacyKey_AccountPrivacyKeyChatInvite      AccountPrivacyKey = 1
	AccountPrivacyKey_AccountPrivacyKeyStatusTimestamp AccountPrivacyKey = 2
	AccountPrivacyKey_AccountPrivacyKeyPhoneCall       AccountPrivacyKey = 3
)

var AccountPrivacyKey_name = map[int32]string{
	0: "AccountPrivacyKeyNone",
	1: "AccountPrivacyKeyChatInvite",
	2: "AccountPrivacyKeyStatusTimestamp",
	3: "AccountPrivacyKeyPhoneCall",
}
var AccountPrivacyKey_value = map[string]int32{
	"AccountPrivacyKeyNone":            0,
	"AccountPrivacyKeyChatInvite":      1,
	"AccountPrivacyKeyStatusTimestamp": 2,
	"AccountPrivacyKeyPhoneCall":       3,
}

func (x AccountPrivacyKey) Enum() *AccountPrivacyKey {
	p := new(AccountPrivacyKey)
	*p = x
	return p
}
func (x AccountPrivacyKey) String() string {
	return proto.EnumName(AccountPrivacyKey_name, int32(x))
}
func (x *AccountPrivacyKey) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountPrivacyKey_value, data, "AccountPrivacyKey")
	if err != nil {
		return err
	}
	*x = AccountPrivacyKey(value)
	return nil
}
func (AccountPrivacyKey) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{0}
}

// AccountPrivacyValue
type AccountPrivacyType int32

const (
	AccountPrivacyType_AccountPrivacyTypeAllowAll         AccountPrivacyType = 0
	AccountPrivacyType_AccountPrivacyTypeAllowContacts    AccountPrivacyType = 1
	AccountPrivacyType_AccountPrivacyTypeAllowUsers       AccountPrivacyType = 2
	AccountPrivacyType_AccountPrivacyTypeDisallowAll      AccountPrivacyType = 3
	AccountPrivacyType_AccountPrivacyTypeDisallowContacts AccountPrivacyType = 4
	AccountPrivacyType_AccountPrivacyTypeDisallowUsers    AccountPrivacyType = 5
)

var AccountPrivacyType_name = map[int32]string{
	0: "AccountPrivacyTypeAllowAll",
	1: "AccountPrivacyTypeAllowContacts",
	2: "AccountPrivacyTypeAllowUsers",
	3: "AccountPrivacyTypeDisallowAll",
	4: "AccountPrivacyTypeDisallowContacts",
	5: "AccountPrivacyTypeDisallowUsers",
}
var AccountPrivacyType_value = map[string]int32{
	"AccountPrivacyTypeAllowAll":         0,
	"AccountPrivacyTypeAllowContacts":    1,
	"AccountPrivacyTypeAllowUsers":       2,
	"AccountPrivacyTypeDisallowAll":      3,
	"AccountPrivacyTypeDisallowContacts": 4,
	"AccountPrivacyTypeDisallowUsers":    5,
}

func (x AccountPrivacyType) Enum() *AccountPrivacyType {
	p := new(AccountPrivacyType)
	*p = x
	return p
}
func (x AccountPrivacyType) String() string {
	return proto.EnumName(AccountPrivacyType_name, int32(x))
}
func (x *AccountPrivacyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountPrivacyType_value, data, "AccountPrivacyType")
	if err != nil {
		return err
	}
	*x = AccountPrivacyType(value)
	return nil
}
func (AccountPrivacyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{1}
}

// AccountSetNotifySettings
// @Function
// @Return: Bool
type AccountSetNotifySettings struct {
	Peer     *InputPeer          `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	Settings *PeerNotifySettings `protobuf:"bytes,2,req,name=Settings" json:"Settings,omitempty"`
}

func (m *AccountSetNotifySettings) Reset()         { *m = AccountSetNotifySettings{} }
func (m *AccountSetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*AccountSetNotifySettings) ProtoMessage()    {}
func (*AccountSetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{0}
}
func (m *AccountSetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountSetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetNotifySettings.Merge(dst, src)
}
func (m *AccountSetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetNotifySettings proto.InternalMessageInfo

func (m *AccountSetNotifySettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *AccountSetNotifySettings) GetSettings() *PeerNotifySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// AccountGetNotifySettings
// @Function
// @Return: NotifySettings
type AccountGetNotifySettings struct {
	Peer *InputPeer `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
}

func (m *AccountGetNotifySettings) Reset()         { *m = AccountGetNotifySettings{} }
func (m *AccountGetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*AccountGetNotifySettings) ProtoMessage()    {}
func (*AccountGetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{1}
}
func (m *AccountGetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountGetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetNotifySettings.Merge(dst, src)
}
func (m *AccountGetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetNotifySettings proto.InternalMessageInfo

func (m *AccountGetNotifySettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// AccountRegisterDevice
// @Function
// @Return: Bool
type AccountRegisterDevice struct {
	TokenType     int32  `protobuf:"varint,1,req,name=TokenType" json:"TokenType"`
	Token         string `protobuf:"bytes,2,req,name=Token" json:"Token"`
	DeviceModel   string `protobuf:"bytes,3,req,name=DeviceModel" json:"DeviceModel"`
	SystemVersion string `protobuf:"bytes,4,req,name=SystemVersion" json:"SystemVersion"`
	AppVersion    string `protobuf:"bytes,5,req,name=AppVersion" json:"AppVersion"`
	LangCode      string `protobuf:"bytes,6,req,name=LangCode" json:"LangCode"`
}

func (m *AccountRegisterDevice) Reset()         { *m = AccountRegisterDevice{} }
func (m *AccountRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*AccountRegisterDevice) ProtoMessage()    {}
func (*AccountRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{2}
}
func (m *AccountRegisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRegisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRegisterDevice.Merge(dst, src)
}
func (m *AccountRegisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *AccountRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRegisterDevice proto.InternalMessageInfo

func (m *AccountRegisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *AccountRegisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AccountRegisterDevice) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *AccountRegisterDevice) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *AccountRegisterDevice) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AccountRegisterDevice) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// AccountUnregisterDevice
// @Function
// @Return: Bool
type AccountUnregisterDevice struct {
	TokenType int32  `protobuf:"varint,1,req,name=TokenType" json:"TokenType"`
	Token     string `protobuf:"bytes,2,req,name=Token" json:"Token"`
}

func (m *AccountUnregisterDevice) Reset()         { *m = AccountUnregisterDevice{} }
func (m *AccountUnregisterDevice) String() string { return proto.CompactTextString(m) }
func (*AccountUnregisterDevice) ProtoMessage()    {}
func (*AccountUnregisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{3}
}
func (m *AccountUnregisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUnregisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUnregisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountUnregisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUnregisterDevice.Merge(dst, src)
}
func (m *AccountUnregisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *AccountUnregisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUnregisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUnregisterDevice proto.InternalMessageInfo

func (m *AccountUnregisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *AccountUnregisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// AccountUpdateProfile
// @Function
// @Return: UserFull
type AccountUpdateProfile struct {
	FirstName string `protobuf:"bytes,1,req,name=FirstName" json:"FirstName"`
	LastName  string `protobuf:"bytes,2,req,name=LastName" json:"LastName"`
	Bio       string `protobuf:"bytes,3,opt,name=Bio" json:"Bio"`
}

func (m *AccountUpdateProfile) Reset()         { *m = AccountUpdateProfile{} }
func (m *AccountUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateProfile) ProtoMessage()    {}
func (*AccountUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{4}
}
func (m *AccountUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateProfile.Merge(dst, src)
}
func (m *AccountUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateProfile proto.InternalMessageInfo

func (m *AccountUpdateProfile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AccountUpdateProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AccountUpdateProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

// AccountCheckUsername
// @Function
// @Return: Bool
type AccountCheckUsername struct {
	Username string `protobuf:"bytes,1,req,name=Username" json:"Username"`
}

func (m *AccountCheckUsername) Reset()         { *m = AccountCheckUsername{} }
func (m *AccountCheckUsername) String() string { return proto.CompactTextString(m) }
func (*AccountCheckUsername) ProtoMessage()    {}
func (*AccountCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{5}
}
func (m *AccountCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountCheckUsername.Merge(dst, src)
}
func (m *AccountCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *AccountCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_AccountCheckUsername proto.InternalMessageInfo

func (m *AccountCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// AccountUpdateUsername
// @Function
// @Return: UserFull
type AccountUpdateUsername struct {
	Username string `protobuf:"bytes,1,req,name=Username" json:"Username"`
}

func (m *AccountUpdateUsername) Reset()         { *m = AccountUpdateUsername{} }
func (m *AccountUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateUsername) ProtoMessage()    {}
func (*AccountUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{6}
}
func (m *AccountUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateUsername.Merge(dst, src)
}
func (m *AccountUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateUsername proto.InternalMessageInfo

func (m *AccountUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// AccountChangePhone
// @Function
// @Return: User
type AccountChangePhone struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	PhoneCode     string `protobuf:"bytes,3,req,name=PhoneCode" json:"PhoneCode"`
}

func (m *AccountChangePhone) Reset()         { *m = AccountChangePhone{} }
func (m *AccountChangePhone) String() string { return proto.CompactTextString(m) }
func (*AccountChangePhone) ProtoMessage()    {}
func (*AccountChangePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{7}
}
func (m *AccountChangePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountChangePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountChangePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountChangePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountChangePhone.Merge(dst, src)
}
func (m *AccountChangePhone) XXX_Size() int {
	return m.Size()
}
func (m *AccountChangePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountChangePhone.DiscardUnknown(m)
}

var xxx_messageInfo_AccountChangePhone proto.InternalMessageInfo

func (m *AccountChangePhone) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountChangePhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AccountChangePhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// AccountSetPrivacy
// @Function
// @Return: AccountPrivacyRules
type AccountSetPrivacy struct {
	Key   AccountPrivacyKey     `protobuf:"varint,1,req,name=Key,enum=msg.AccountPrivacyKey" json:"Key"`
	Rules []*AccountPrivacyRule `protobuf:"bytes,2,rep,name=Rules" json:"Rules,omitempty"`
}

func (m *AccountSetPrivacy) Reset()         { *m = AccountSetPrivacy{} }
func (m *AccountSetPrivacy) String() string { return proto.CompactTextString(m) }
func (*AccountSetPrivacy) ProtoMessage()    {}
func (*AccountSetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{8}
}
func (m *AccountSetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountSetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetPrivacy.Merge(dst, src)
}
func (m *AccountSetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetPrivacy proto.InternalMessageInfo

func (m *AccountSetPrivacy) GetKey() AccountPrivacyKey {
	if m != nil {
		return m.Key
	}
	return AccountPrivacyKey_AccountPrivacyKeyNone
}

func (m *AccountSetPrivacy) GetRules() []*AccountPrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

// AccountGetPrivacy
// @Function
// @Return: AccountPrivacyRules
type AccountGetPrivacy struct {
	Key AccountPrivacyKey `protobuf:"varint,1,req,name=Key,enum=msg.AccountPrivacyKey" json:"Key"`
}

func (m *AccountGetPrivacy) Reset()         { *m = AccountGetPrivacy{} }
func (m *AccountGetPrivacy) String() string { return proto.CompactTextString(m) }
func (*AccountGetPrivacy) ProtoMessage()    {}
func (*AccountGetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{9}
}
func (m *AccountGetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountGetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetPrivacy.Merge(dst, src)
}
func (m *AccountGetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetPrivacy proto.InternalMessageInfo

func (m *AccountGetPrivacy) GetKey() AccountPrivacyKey {
	if m != nil {
		return m.Key
	}
	return AccountPrivacyKey_AccountPrivacyKeyNone
}

// AccountPrivacyRules
type AccountPrivacyRules struct {
	Rules []*AccountPrivacyRule `protobuf:"bytes,1,rep,name=Rules" json:"Rules,omitempty"`
}

func (m *AccountPrivacyRules) Reset()         { *m = AccountPrivacyRules{} }
func (m *AccountPrivacyRules) String() string { return proto.CompactTextString(m) }
func (*AccountPrivacyRules) ProtoMessage()    {}
func (*AccountPrivacyRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{10}
}
func (m *AccountPrivacyRules) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPrivacyRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPrivacyRules.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountPrivacyRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPrivacyRules.Merge(dst, src)
}
func (m *AccountPrivacyRules) XXX_Size() int {
	return m.Size()
}
func (m *AccountPrivacyRules) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPrivacyRules.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPrivacyRules proto.InternalMessageInfo

func (m *AccountPrivacyRules) GetRules() []*AccountPrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

// AccountPrivacyRule
type AccountPrivacyRule struct {
	PrivacyType AccountPrivacyType `protobuf:"varint,1,req,name=PrivacyType,enum=msg.AccountPrivacyType" json:"PrivacyType"`
	Data        []byte             `protobuf:"bytes,2,req,name=Data" json:"Data"`
}

func (m *AccountPrivacyRule) Reset()         { *m = AccountPrivacyRule{} }
func (m *AccountPrivacyRule) String() string { return proto.CompactTextString(m) }
func (*AccountPrivacyRule) ProtoMessage()    {}
func (*AccountPrivacyRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_accounts_4b67f4cb728da234, []int{11}
}
func (m *AccountPrivacyRule) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPrivacyRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPrivacyRule.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AccountPrivacyRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPrivacyRule.Merge(dst, src)
}
func (m *AccountPrivacyRule) XXX_Size() int {
	return m.Size()
}
func (m *AccountPrivacyRule) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPrivacyRule.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPrivacyRule proto.InternalMessageInfo

func (m *AccountPrivacyRule) GetPrivacyType() AccountPrivacyType {
	if m != nil {
		return m.PrivacyType
	}
	return AccountPrivacyType_AccountPrivacyTypeAllowAll
}

func (m *AccountPrivacyRule) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountSetNotifySettings)(nil), "msg.AccountSetNotifySettings")
	proto.RegisterType((*AccountGetNotifySettings)(nil), "msg.AccountGetNotifySettings")
	proto.RegisterType((*AccountRegisterDevice)(nil), "msg.AccountRegisterDevice")
	proto.RegisterType((*AccountUnregisterDevice)(nil), "msg.AccountUnregisterDevice")
	proto.RegisterType((*AccountUpdateProfile)(nil), "msg.AccountUpdateProfile")
	proto.RegisterType((*AccountCheckUsername)(nil), "msg.AccountCheckUsername")
	proto.RegisterType((*AccountUpdateUsername)(nil), "msg.AccountUpdateUsername")
	proto.RegisterType((*AccountChangePhone)(nil), "msg.AccountChangePhone")
	proto.RegisterType((*AccountSetPrivacy)(nil), "msg.AccountSetPrivacy")
	proto.RegisterType((*AccountGetPrivacy)(nil), "msg.AccountGetPrivacy")
	proto.RegisterType((*AccountPrivacyRules)(nil), "msg.AccountPrivacyRules")
	proto.RegisterType((*AccountPrivacyRule)(nil), "msg.AccountPrivacyRule")
	proto.RegisterEnum("msg.AccountPrivacyKey", AccountPrivacyKey_name, AccountPrivacyKey_value)
	proto.RegisterEnum("msg.AccountPrivacyType", AccountPrivacyType_name, AccountPrivacyType_value)
}
func (m *AccountSetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintApiAccounts(dAtA, i, uint64(m.Peer.Size()))
		n1, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Settings == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Settings")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintApiAccounts(dAtA, i, uint64(m.Settings.Size()))
		n2, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *AccountGetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintApiAccounts(dAtA, i, uint64(m.Peer.Size()))
		n3, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}

func (m *AccountRegisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRegisterDevice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(m.TokenType))
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Token)))
	i += copy(dAtA[i:], m.Token)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.DeviceModel)))
	i += copy(dAtA[i:], m.DeviceModel)
	dAtA[i] = 0x22
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.SystemVersion)))
	i += copy(dAtA[i:], m.SystemVersion)
	dAtA[i] = 0x2a
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.AppVersion)))
	i += copy(dAtA[i:], m.AppVersion)
	dAtA[i] = 0x32
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.LangCode)))
	i += copy(dAtA[i:], m.LangCode)
	return i, nil
}

func (m *AccountUnregisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUnregisterDevice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(m.TokenType))
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Token)))
	i += copy(dAtA[i:], m.Token)
	return i, nil
}

func (m *AccountUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.FirstName)))
	i += copy(dAtA[i:], m.FirstName)
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.LastName)))
	i += copy(dAtA[i:], m.LastName)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Bio)))
	i += copy(dAtA[i:], m.Bio)
	return i, nil
}

func (m *AccountCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Username)))
	i += copy(dAtA[i:], m.Username)
	return i, nil
}

func (m *AccountUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Username)))
	i += copy(dAtA[i:], m.Username)
	return i, nil
}

func (m *AccountChangePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountChangePhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i += copy(dAtA[i:], m.PhoneCodeHash)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.PhoneCode)))
	i += copy(dAtA[i:], m.PhoneCode)
	return i, nil
}

func (m *AccountSetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(m.Key))
	if len(m.Rules) > 0 {
		for _, msg := range m.Rules {
			dAtA[i] = 0x12
			i++
			i = encodeVarintApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AccountGetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(m.Key))
	return i, nil
}

func (m *AccountPrivacyRules) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPrivacyRules) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Rules) > 0 {
		for _, msg := range m.Rules {
			dAtA[i] = 0xa
			i++
			i = encodeVarintApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AccountPrivacyRule) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPrivacyRule) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAccounts(dAtA, i, uint64(m.PrivacyType))
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintApiAccounts(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	return i, nil
}

func encodeVarintApiAccounts(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AccountSetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovApiAccounts(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountGetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountRegisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAccounts(uint64(m.TokenType))
	l = len(m.Token)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.DeviceModel)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.SystemVersion)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.AppVersion)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.LangCode)
	n += 1 + l + sovApiAccounts(uint64(l))
	return n
}

func (m *AccountUnregisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAccounts(uint64(m.TokenType))
	l = len(m.Token)
	n += 1 + l + sovApiAccounts(uint64(l))
	return n
}

func (m *AccountUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FirstName)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.Bio)
	n += 1 + l + sovApiAccounts(uint64(l))
	return n
}

func (m *AccountCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	n += 1 + l + sovApiAccounts(uint64(l))
	return n
}

func (m *AccountUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	n += 1 + l + sovApiAccounts(uint64(l))
	return n
}

func (m *AccountChangePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovApiAccounts(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovApiAccounts(uint64(l))
	return n
}

func (m *AccountSetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAccounts(uint64(m.Key))
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountGetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAccounts(uint64(m.Key))
	return n
}

func (m *AccountPrivacyRules) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountPrivacyRule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAccounts(uint64(m.PrivacyType))
	if m.Data != nil {
		l = len(m.Data)
		n += 1 + l + sovApiAccounts(uint64(l))
	}
	return n
}

func sovApiAccounts(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozApiAccounts(x uint64) (n int) {
	return sovApiAccounts(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AccountSetNotifySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &PeerNotifySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Settings")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetNotifySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountRegisterDevice) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRegisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRegisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000020)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TokenType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeviceModel")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SystemVersion")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AppVersion")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LangCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUnregisterDevice) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUnregisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUnregisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TokenType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateProfile) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FirstName")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastName")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountCheckUsername) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountCheckUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountCheckUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateUsername) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountChangePhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountChangePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountChangePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountSetPrivacy) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			m.Key = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Key |= (AccountPrivacyKey(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &AccountPrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Key")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetPrivacy) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			m.Key = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Key |= (AccountPrivacyKey(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Key")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPrivacyRules) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPrivacyRules: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPrivacyRules: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &AccountPrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPrivacyRule) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPrivacyRule: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPrivacyRule: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivacyType", wireType)
			}
			m.PrivacyType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrivacyType |= (AccountPrivacyType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthApiAccounts
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PrivacyType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Data")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApiAccounts(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApiAccounts
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiAccounts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthApiAccounts
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowApiAccounts
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipApiAccounts(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthApiAccounts = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApiAccounts   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("api.accounts.proto", fileDescriptor_api_accounts_4b67f4cb728da234) }

var fileDescriptor_api_accounts_4b67f4cb728da234 = []byte{
	// 666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x4f, 0xd4, 0x40,
	0x18, 0xc6, 0xb7, 0xdb, 0x5d, 0x03, 0x2f, 0x4a, 0xea, 0xa8, 0x50, 0x51, 0xcb, 0x5a, 0x09, 0x31,
	0x24, 0xee, 0x01, 0x2f, 0x7a, 0xd1, 0x2c, 0xbb, 0x11, 0x09, 0x4a, 0x36, 0xbb, 0x60, 0xe2, 0x71,
	0x52, 0x5e, 0x76, 0x1b, 0xba, 0x33, 0x4d, 0x67, 0x16, 0xd3, 0x9b, 0x1f, 0xc1, 0x8b, 0xdf, 0x89,
	0x23, 0x47, 0x4f, 0xc6, 0xc0, 0xd1, 0xa3, 0x5f, 0xc0, 0x74, 0xda, 0x4e, 0x5b, 0x17, 0x12, 0x25,
	0xde, 0xda, 0xe7, 0xf9, 0xcd, 0xfb, 0xbc, 0xef, 0xfc, 0x01, 0x42, 0x43, 0xbf, 0x4d, 0x3d, 0x8f,
	0x4f, 0x99, 0x14, 0xed, 0x30, 0xe2, 0x92, 0x13, 0x73, 0x22, 0x46, 0x2b, 0x96, 0xc7, 0x23, 0x6c,
	0xcb, 0x38, 0xc4, 0x4c, 0x76, 0x05, 0xd8, 0x9d, 0x14, 0x1c, 0xa2, 0xdc, 0xe3, 0xd2, 0x3f, 0x8a,
	0x87, 0x28, 0xa5, 0xcf, 0x46, 0x82, 0xb8, 0xd0, 0xe8, 0x23, 0x46, 0xb6, 0xd1, 0xaa, 0x3f, 0x5d,
	0xd8, 0x5c, 0x6c, 0x4f, 0xc4, 0xa8, 0xbd, 0xc3, 0xc2, 0xa9, 0x4c, 0xd4, 0x81, 0xf2, 0xc8, 0x73,
	0x98, 0xcb, 0x79, 0xbb, 0xae, 0xb8, 0x65, 0xc5, 0x25, 0x66, 0xb5, 0xdc, 0x40, 0x83, 0xee, 0x2b,
	0x1d, 0xba, 0x7d, 0x9d, 0x50, 0xf7, 0x97, 0x01, 0xf7, 0xb2, 0x02, 0x03, 0x1c, 0xf9, 0x42, 0x62,
	0xd4, 0xc3, 0x13, 0xdf, 0x43, 0xe2, 0xc2, 0xfc, 0x3e, 0x3f, 0x46, 0xb6, 0x1f, 0x87, 0xa8, 0x4a,
	0x34, 0xb7, 0x1a, 0xa7, 0xdf, 0x57, 0x6b, 0x83, 0x42, 0x26, 0x2b, 0xd0, 0x54, 0x3f, 0xaa, 0xdf,
	0xf9, 0xcc, 0x4f, 0x25, 0xb2, 0x0e, 0x0b, 0x69, 0xa5, 0xf7, 0xfc, 0x10, 0x03, 0xdb, 0x2c, 0x11,
	0x65, 0x83, 0x6c, 0xc0, 0xad, 0x61, 0x2c, 0x24, 0x4e, 0x3e, 0x60, 0x24, 0x7c, 0xce, 0xec, 0x46,
	0x89, 0xac, 0x5a, 0x64, 0x0d, 0xa0, 0x13, 0x86, 0x39, 0xd8, 0x2c, 0x81, 0x25, 0x9d, 0xb4, 0x60,
	0xee, 0x1d, 0x65, 0xa3, 0x2e, 0x3f, 0x44, 0xfb, 0x46, 0x89, 0xd1, 0xaa, 0xfb, 0x11, 0x96, 0xb3,
	0xa1, 0x0f, 0x58, 0xf4, 0x5f, 0xc7, 0x76, 0x25, 0xdc, 0xcd, 0x4b, 0x87, 0x87, 0x54, 0x62, 0x3f,
	0xe2, 0x47, 0x7e, 0xa0, 0xea, 0xbe, 0xf1, 0x23, 0x21, 0xf7, 0xe8, 0x24, 0xad, 0x9b, 0xaf, 0x2b,
	0xe4, 0xb4, 0xf1, 0x0c, 0xa9, 0x57, 0x1b, 0xcf, 0x88, 0x25, 0x30, 0xb7, 0x7c, 0x6e, 0x9b, 0x2d,
	0x43, 0x9b, 0x89, 0xe0, 0xbe, 0xd0, 0xa9, 0xdd, 0x31, 0x7a, 0xc7, 0x07, 0x02, 0x23, 0x96, 0x55,
	0xcc, 0xbf, 0x2b, 0xa1, 0x5a, 0x75, 0x5f, 0xea, 0xf3, 0x4f, 0xfb, 0xfd, 0x87, 0xa5, 0x9f, 0x0d,
	0x20, 0x3a, 0x95, 0xb2, 0x11, 0xf6, 0xc7, 0x9c, 0xa9, 0xdd, 0x51, 0x1f, 0x95, 0x55, 0xa9, 0x94,
	0x1c, 0xb6, 0xfa, 0x48, 0x4e, 0xe1, 0x2d, 0x15, 0xe3, 0xca, 0x98, 0x55, 0x2b, 0xd9, 0x31, 0x2d,
	0x54, 0xae, 0x4f, 0x21, 0xbb, 0x11, 0xdc, 0x2e, 0xde, 0x5c, 0x3f, 0xf2, 0x4f, 0xa8, 0x17, 0x93,
	0x36, 0x98, 0xbb, 0x18, 0xab, 0xf8, 0xc5, 0xcd, 0x25, 0x75, 0xed, 0x33, 0x28, 0x23, 0x76, 0x31,
	0xce, 0x37, 0x6f, 0x17, 0x63, 0xf2, 0x0c, 0x9a, 0x83, 0x69, 0x80, 0xc9, 0xab, 0x33, 0xf5, 0xab,
	0xab, 0xae, 0x48, 0xfc, 0x41, 0x4a, 0xb9, 0x5d, 0x9d, 0xb9, 0x7d, 0xed, 0x4c, 0xb7, 0x07, 0x77,
	0x66, 0x13, 0x44, 0xd1, 0x8a, 0xf1, 0x57, 0xad, 0x70, 0x7d, 0x00, 0x25, 0x93, 0xbc, 0x86, 0x85,
	0xec, 0x57, 0x5f, 0xe2, 0xc5, 0x4b, 0x4b, 0x25, 0x76, 0xfe, 0x24, 0x4b, 0x12, 0xb1, 0xa1, 0xd1,
	0xa3, 0x92, 0xaa, 0xc3, 0xb9, 0x99, 0x01, 0x4a, 0xd9, 0xf8, 0x6a, 0xe8, 0xe1, 0x8b, 0xb9, 0xc8,
	0x7d, 0x7d, 0x87, 0x0a, 0x71, 0x8f, 0x33, 0xb4, 0x6a, 0x64, 0x15, 0x1e, 0xcc, 0x58, 0xdd, 0x31,
	0x95, 0x3b, 0xec, 0xc4, 0x97, 0x68, 0x19, 0x64, 0x0d, 0x5a, 0x33, 0xc0, 0x50, 0x52, 0x39, 0x15,
	0xfb, 0xfe, 0x04, 0x85, 0xa4, 0x93, 0xd0, 0xaa, 0x13, 0x07, 0x56, 0x66, 0xa8, 0xf4, 0x16, 0xd0,
	0x20, 0xb0, 0xcc, 0x8d, 0x9f, 0xc6, 0x9f, 0x3b, 0xa1, 0x06, 0x99, 0x59, 0x96, 0xa8, 0x9d, 0x20,
	0xe0, 0x9f, 0x3a, 0x41, 0x60, 0xd5, 0xc8, 0x13, 0x58, 0xbd, 0xc2, 0xef, 0x72, 0x26, 0xa9, 0x27,
	0x85, 0x65, 0x90, 0x16, 0x3c, 0xbc, 0x02, 0x4a, 0x5e, 0x82, 0xb0, 0xea, 0xe4, 0x31, 0x3c, 0x9a,
	0x25, 0x7a, 0xbe, 0xa0, 0x79, 0x92, 0x49, 0xd6, 0xc1, 0xbd, 0x1a, 0xd1, 0x61, 0x8d, 0xcb, 0x3b,
	0xca, 0xb9, 0x34, 0xaf, 0xb9, 0x65, 0x9f, 0x9e, 0x3b, 0xc6, 0xd9, 0xb9, 0x63, 0xfc, 0x38, 0x77,
	0x8c, 0x2f, 0x17, 0x4e, 0xed, 0xec, 0xc2, 0xa9, 0x7d, 0xbb, 0x70, 0x6a, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x66, 0x9b, 0x42, 0x74, 0xaf, 0x06, 0x00, 0x00,
}
