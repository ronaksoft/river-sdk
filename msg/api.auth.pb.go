// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.auth.proto

package msg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
import encoding_binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// AuthRegister
// @Function
// @Return: AuthAuthorization
type AuthRegister struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	FirstName     string `protobuf:"bytes,2,req,name=FirstName" json:"FirstName"`
	LastName      string `protobuf:"bytes,3,req,name=LastName" json:"LastName"`
	PhoneCode     string `protobuf:"bytes,4,req,name=PhoneCode" json:"PhoneCode"`
	PhoneCodeHash string `protobuf:"bytes,5,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
}

func (m *AuthRegister) Reset()         { *m = AuthRegister{} }
func (m *AuthRegister) String() string { return proto.CompactTextString(m) }
func (*AuthRegister) ProtoMessage()    {}
func (*AuthRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{0}
}
func (m *AuthRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRegister.Merge(dst, src)
}
func (m *AuthRegister) XXX_Size() int {
	return m.Size()
}
func (m *AuthRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRegister.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRegister proto.InternalMessageInfo

func (m *AuthRegister) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthRegister) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AuthRegister) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AuthRegister) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

func (m *AuthRegister) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

// AuthLogin
// @Function
// @Return: AuthAuthorization
type AuthLogin struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	PhoneCode     string `protobuf:"bytes,3,req,name=PhoneCode" json:"PhoneCode"`
}

func (m *AuthLogin) Reset()         { *m = AuthLogin{} }
func (m *AuthLogin) String() string { return proto.CompactTextString(m) }
func (*AuthLogin) ProtoMessage()    {}
func (*AuthLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{1}
}
func (m *AuthLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLogin.Merge(dst, src)
}
func (m *AuthLogin) XXX_Size() int {
	return m.Size()
}
func (m *AuthLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLogin.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLogin proto.InternalMessageInfo

func (m *AuthLogin) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthLogin) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AuthLogin) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// AuthLogout
// @Function
// @Return: Bool
type AuthLogout struct {
	AuthIDs []int64 `protobuf:"varint,1,rep,name=AuthIDs" json:"AuthIDs,omitempty"`
}

func (m *AuthLogout) Reset()         { *m = AuthLogout{} }
func (m *AuthLogout) String() string { return proto.CompactTextString(m) }
func (*AuthLogout) ProtoMessage()    {}
func (*AuthLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{2}
}
func (m *AuthLogout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthLogout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLogout.Merge(dst, src)
}
func (m *AuthLogout) XXX_Size() int {
	return m.Size()
}
func (m *AuthLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLogout.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLogout proto.InternalMessageInfo

func (m *AuthLogout) GetAuthIDs() []int64 {
	if m != nil {
		return m.AuthIDs
	}
	return nil
}

// AuthCheckPhone
// @Function
// @Return: AuthCheckedPhone
type AuthCheckPhone struct {
	Phone string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
}

func (m *AuthCheckPhone) Reset()         { *m = AuthCheckPhone{} }
func (m *AuthCheckPhone) String() string { return proto.CompactTextString(m) }
func (*AuthCheckPhone) ProtoMessage()    {}
func (*AuthCheckPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{3}
}
func (m *AuthCheckPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthCheckPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthCheckPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthCheckPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCheckPhone.Merge(dst, src)
}
func (m *AuthCheckPhone) XXX_Size() int {
	return m.Size()
}
func (m *AuthCheckPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCheckPhone.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCheckPhone proto.InternalMessageInfo

func (m *AuthCheckPhone) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// AuthSendCode
// @Function
// @Return: AuthSentCode
type AuthSendCode struct {
	Phone string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
}

func (m *AuthSendCode) Reset()         { *m = AuthSendCode{} }
func (m *AuthSendCode) String() string { return proto.CompactTextString(m) }
func (*AuthSendCode) ProtoMessage()    {}
func (*AuthSendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{4}
}
func (m *AuthSendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthSendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthSendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthSendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthSendCode.Merge(dst, src)
}
func (m *AuthSendCode) XXX_Size() int {
	return m.Size()
}
func (m *AuthSendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthSendCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthSendCode proto.InternalMessageInfo

func (m *AuthSendCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// AuthResendCode
// @Function
// @Return: Bool
type AuthResendCode struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
}

func (m *AuthResendCode) Reset()         { *m = AuthResendCode{} }
func (m *AuthResendCode) String() string { return proto.CompactTextString(m) }
func (*AuthResendCode) ProtoMessage()    {}
func (*AuthResendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{5}
}
func (m *AuthResendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthResendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthResendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthResendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResendCode.Merge(dst, src)
}
func (m *AuthResendCode) XXX_Size() int {
	return m.Size()
}
func (m *AuthResendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResendCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResendCode proto.InternalMessageInfo

func (m *AuthResendCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthResendCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

// AuthRecall
// @Function
// @Return: AuthRecalled
type AuthRecall struct {
	ClientID int64 `protobuf:"varint,1,req,name=ClientID" json:"ClientID"`
}

func (m *AuthRecall) Reset()         { *m = AuthRecall{} }
func (m *AuthRecall) String() string { return proto.CompactTextString(m) }
func (*AuthRecall) ProtoMessage()    {}
func (*AuthRecall) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{6}
}
func (m *AuthRecall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRecall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRecall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthRecall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRecall.Merge(dst, src)
}
func (m *AuthRecall) XXX_Size() int {
	return m.Size()
}
func (m *AuthRecall) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRecall.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRecall proto.InternalMessageInfo

func (m *AuthRecall) GetClientID() int64 {
	if m != nil {
		return m.ClientID
	}
	return 0
}

// AuthDestroyKey
// @Function
// @Return: Bool
type AuthDestroyKey struct {
}

func (m *AuthDestroyKey) Reset()         { *m = AuthDestroyKey{} }
func (m *AuthDestroyKey) String() string { return proto.CompactTextString(m) }
func (*AuthDestroyKey) ProtoMessage()    {}
func (*AuthDestroyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{7}
}
func (m *AuthDestroyKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthDestroyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthDestroyKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthDestroyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthDestroyKey.Merge(dst, src)
}
func (m *AuthDestroyKey) XXX_Size() int {
	return m.Size()
}
func (m *AuthDestroyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthDestroyKey.DiscardUnknown(m)
}

var xxx_messageInfo_AuthDestroyKey proto.InternalMessageInfo

// AuthRecalled
type AuthRecalled struct {
	ClientID          int64      `protobuf:"varint,1,req,name=ClientID" json:"ClientID"`
	Timestamp         int64      `protobuf:"varint,2,req,name=Timestamp" json:"Timestamp"`
	AvailableClusters []*Cluster `protobuf:"bytes,3,rep,name=AvailableClusters" json:"AvailableClusters,omitempty"`
}

func (m *AuthRecalled) Reset()         { *m = AuthRecalled{} }
func (m *AuthRecalled) String() string { return proto.CompactTextString(m) }
func (*AuthRecalled) ProtoMessage()    {}
func (*AuthRecalled) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{8}
}
func (m *AuthRecalled) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthRecalled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthRecalled.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthRecalled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRecalled.Merge(dst, src)
}
func (m *AuthRecalled) XXX_Size() int {
	return m.Size()
}
func (m *AuthRecalled) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRecalled.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRecalled proto.InternalMessageInfo

func (m *AuthRecalled) GetClientID() int64 {
	if m != nil {
		return m.ClientID
	}
	return 0
}

func (m *AuthRecalled) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AuthRecalled) GetAvailableClusters() []*Cluster {
	if m != nil {
		return m.AvailableClusters
	}
	return nil
}

// AuthAuthorization
type AuthAuthorization struct {
	Expired uint64 `protobuf:"fixed64,1,req,name=Expired" json:"Expired"`
	User    *User  `protobuf:"bytes,2,req,name=User" json:"User,omitempty"`
}

func (m *AuthAuthorization) Reset()         { *m = AuthAuthorization{} }
func (m *AuthAuthorization) String() string { return proto.CompactTextString(m) }
func (*AuthAuthorization) ProtoMessage()    {}
func (*AuthAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{9}
}
func (m *AuthAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthAuthorization.Merge(dst, src)
}
func (m *AuthAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AuthAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AuthAuthorization proto.InternalMessageInfo

func (m *AuthAuthorization) GetExpired() uint64 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *AuthAuthorization) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// AuthCheckedPhone
type AuthCheckedPhone struct {
	Invited    bool `protobuf:"varint,1,req,name=Invited" json:"Invited"`
	Registered bool `protobuf:"varint,2,req,name=Registered" json:"Registered"`
}

func (m *AuthCheckedPhone) Reset()         { *m = AuthCheckedPhone{} }
func (m *AuthCheckedPhone) String() string { return proto.CompactTextString(m) }
func (*AuthCheckedPhone) ProtoMessage()    {}
func (*AuthCheckedPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{10}
}
func (m *AuthCheckedPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthCheckedPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthCheckedPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthCheckedPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCheckedPhone.Merge(dst, src)
}
func (m *AuthCheckedPhone) XXX_Size() int {
	return m.Size()
}
func (m *AuthCheckedPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCheckedPhone.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCheckedPhone proto.InternalMessageInfo

func (m *AuthCheckedPhone) GetInvited() bool {
	if m != nil {
		return m.Invited
	}
	return false
}

func (m *AuthCheckedPhone) GetRegistered() bool {
	if m != nil {
		return m.Registered
	}
	return false
}

// AuthSentCode
type AuthSentCode struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
}

func (m *AuthSentCode) Reset()         { *m = AuthSentCode{} }
func (m *AuthSentCode) String() string { return proto.CompactTextString(m) }
func (*AuthSentCode) ProtoMessage()    {}
func (*AuthSentCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_auth_358dd3aedcdbe352, []int{11}
}
func (m *AuthSentCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthSentCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthSentCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AuthSentCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthSentCode.Merge(dst, src)
}
func (m *AuthSentCode) XXX_Size() int {
	return m.Size()
}
func (m *AuthSentCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthSentCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthSentCode proto.InternalMessageInfo

func (m *AuthSentCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AuthSentCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRegister)(nil), "msg.AuthRegister")
	proto.RegisterType((*AuthLogin)(nil), "msg.AuthLogin")
	proto.RegisterType((*AuthLogout)(nil), "msg.AuthLogout")
	proto.RegisterType((*AuthCheckPhone)(nil), "msg.AuthCheckPhone")
	proto.RegisterType((*AuthSendCode)(nil), "msg.AuthSendCode")
	proto.RegisterType((*AuthResendCode)(nil), "msg.AuthResendCode")
	proto.RegisterType((*AuthRecall)(nil), "msg.AuthRecall")
	proto.RegisterType((*AuthDestroyKey)(nil), "msg.AuthDestroyKey")
	proto.RegisterType((*AuthRecalled)(nil), "msg.AuthRecalled")
	proto.RegisterType((*AuthAuthorization)(nil), "msg.AuthAuthorization")
	proto.RegisterType((*AuthCheckedPhone)(nil), "msg.AuthCheckedPhone")
	proto.RegisterType((*AuthSentCode)(nil), "msg.AuthSentCode")
}
func (m *AuthRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRegister) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.FirstName)))
	i += copy(dAtA[i:], m.FirstName)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.LastName)))
	i += copy(dAtA[i:], m.LastName)
	dAtA[i] = 0x22
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.PhoneCode)))
	i += copy(dAtA[i:], m.PhoneCode)
	dAtA[i] = 0x2a
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i += copy(dAtA[i:], m.PhoneCodeHash)
	return i, nil
}

func (m *AuthLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthLogin) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i += copy(dAtA[i:], m.PhoneCodeHash)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.PhoneCode)))
	i += copy(dAtA[i:], m.PhoneCode)
	return i, nil
}

func (m *AuthLogout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthLogout) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AuthIDs) > 0 {
		for _, num := range m.AuthIDs {
			dAtA[i] = 0x8
			i++
			i = encodeVarintApiAuth(dAtA, i, uint64(num))
		}
	}
	return i, nil
}

func (m *AuthCheckPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthCheckPhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	return i, nil
}

func (m *AuthSendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthSendCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	return i, nil
}

func (m *AuthResendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthResendCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i += copy(dAtA[i:], m.PhoneCodeHash)
	return i, nil
}

func (m *AuthRecall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRecall) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(m.ClientID))
	return i, nil
}

func (m *AuthDestroyKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthDestroyKey) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *AuthRecalled) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthRecalled) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(m.ClientID))
	dAtA[i] = 0x10
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(m.Timestamp))
	if len(m.AvailableClusters) > 0 {
		for _, msg := range m.AvailableClusters {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintApiAuth(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AuthAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x9
	i++
	encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(m.Expired))
	i += 8
	if m.User == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("User")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintApiAuth(dAtA, i, uint64(m.User.Size()))
		n1, err := m.User.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func (m *AuthCheckedPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthCheckedPhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	if m.Invited {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x10
	i++
	if m.Registered {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}

func (m *AuthSentCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthSentCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintApiAuth(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i += copy(dAtA[i:], m.PhoneCodeHash)
	return i, nil
}

func encodeVarintApiAuth(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AuthRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.FirstName)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovApiAuth(uint64(l))
	return n
}

func (m *AuthLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovApiAuth(uint64(l))
	return n
}

func (m *AuthLogout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AuthIDs) > 0 {
		for _, e := range m.AuthIDs {
			n += 1 + sovApiAuth(uint64(e))
		}
	}
	return n
}

func (m *AuthCheckPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAuth(uint64(l))
	return n
}

func (m *AuthSendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAuth(uint64(l))
	return n
}

func (m *AuthResendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovApiAuth(uint64(l))
	return n
}

func (m *AuthRecall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAuth(uint64(m.ClientID))
	return n
}

func (m *AuthDestroyKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AuthRecalled) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovApiAuth(uint64(m.ClientID))
	n += 1 + sovApiAuth(uint64(m.Timestamp))
	if len(m.AvailableClusters) > 0 {
		for _, e := range m.AvailableClusters {
			l = e.Size()
			n += 1 + l + sovApiAuth(uint64(l))
		}
	}
	return n
}

func (m *AuthAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 9
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovApiAuth(uint64(l))
	}
	return n
}

func (m *AuthCheckedPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	n += 2
	return n
}

func (m *AuthSentCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovApiAuth(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovApiAuth(uint64(l))
	return n
}

func sovApiAuth(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozApiAuth(x uint64) (n int) {
	return sovApiAuth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AuthRegister) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FirstName")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastName")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthLogin) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthLogout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthLogout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthLogout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApiAuth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AuthIDs = append(m.AuthIDs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApiAuth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthApiAuth
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AuthIDs) == 0 {
					m.AuthIDs = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApiAuth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AuthIDs = append(m.AuthIDs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthIDs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthCheckPhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthCheckPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthCheckPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthSendCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthSendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthSendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthResendCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthResendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthResendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthRecall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRecall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRecall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			m.ClientID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClientID |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthDestroyKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthDestroyKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthDestroyKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthRecalled) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthRecalled: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthRecalled: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			m.ClientID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClientID |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableClusters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableClusters = append(m.AvailableClusters, &Cluster{})
			if err := m.AvailableClusters[len(m.AvailableClusters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Timestamp")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expired", wireType)
			}
			m.Expired = 0
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			m.Expired = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &User{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Expired")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("User")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthCheckedPhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthCheckedPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthCheckedPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Invited", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Invited = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Registered", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Registered = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Invited")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Registered")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthSentCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthSentCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthSentCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApiAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApiAuth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApiAuth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthApiAuth
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowApiAuth
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipApiAuth(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthApiAuth = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApiAuth   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("api.auth.proto", fileDescriptor_api_auth_358dd3aedcdbe352) }

var fileDescriptor_api_auth_358dd3aedcdbe352 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x9b, 0xa6, 0x5b, 0xdb, 0x77, 0x63, 0xea, 0x7c, 0x8a, 0x26, 0x08, 0x95, 0xc5, 0xa1,
	0xaa, 0x50, 0x55, 0xed, 0xc8, 0x6d, 0x6d, 0x41, 0x54, 0x4c, 0x08, 0x99, 0x3f, 0xda, 0xd5, 0x34,
	0xaf, 0x1a, 0x8b, 0x24, 0x8e, 0x62, 0x77, 0x50, 0x3e, 0x05, 0xe2, 0x13, 0x71, 0xdc, 0x71, 0x47,
	0x4e, 0x08, 0xb5, 0x5f, 0x04, 0xd9, 0xf9, 0x43, 0xa6, 0x41, 0x35, 0x24, 0x0e, 0x91, 0xe2, 0x9f,
	0x9f, 0x3c, 0x7e, 0xfc, 0xbe, 0x6f, 0xe0, 0x88, 0xa7, 0x62, 0xc4, 0x57, 0x3a, 0x1c, 0xa5, 0x99,
	0xd4, 0x92, 0xb8, 0xb1, 0x5a, 0x9e, 0xf4, 0x16, 0x32, 0xc3, 0x91, 0x5e, 0xa7, 0xa8, 0x72, 0x4c,
	0xbf, 0x39, 0x70, 0x78, 0xb6, 0xd2, 0x21, 0xc3, 0xa5, 0x50, 0x1a, 0x33, 0x72, 0x02, 0x7b, 0xaf,
	0x42, 0x99, 0xa0, 0xe7, 0xf4, 0x9b, 0x83, 0xee, 0xa4, 0x75, 0xf5, 0xe3, 0x61, 0x83, 0xe5, 0x88,
	0x50, 0xe8, 0x3e, 0x13, 0x99, 0xd2, 0x2f, 0x79, 0x8c, 0x5e, 0xb3, 0xb6, 0xff, 0x1b, 0x93, 0x3e,
	0x74, 0xce, 0x79, 0x21, 0x71, 0x6b, 0x92, 0x8a, 0x1a, 0x17, 0x6b, 0x37, 0x95, 0x01, 0x7a, 0xad,
	0xba, 0x4b, 0x85, 0xc9, 0x10, 0xee, 0x55, 0x8b, 0xe7, 0x5c, 0x85, 0xde, 0x5e, 0x4d, 0x77, 0x73,
	0x8b, 0x7e, 0x84, 0xae, 0xb9, 0xc1, 0xb9, 0x5c, 0x8a, 0x64, 0x67, 0xfc, 0x5b, 0xa6, 0xcd, 0xbf,
	0x9a, 0xde, 0x0c, 0xe9, 0xfe, 0x31, 0x24, 0x1d, 0x02, 0x14, 0x07, 0xcb, 0x95, 0x26, 0xf7, 0xa1,
	0x6d, 0x56, 0xf3, 0x99, 0xf2, 0x9c, 0xbe, 0x3b, 0x70, 0x27, 0xcd, 0xb1, 0xc3, 0x4a, 0x44, 0x1f,
	0xc3, 0x91, 0x79, 0x9d, 0x86, 0xb8, 0xf8, 0x90, 0xa7, 0xd9, 0x91, 0x94, 0x0e, 0xf3, 0xa6, 0xbc,
	0xc6, 0x24, 0xb0, 0xe5, 0xd8, 0xa5, 0xbd, 0xc8, 0x9d, 0x19, 0xaa, 0x3b, 0xa8, 0xff, 0xa5, 0x06,
	0x74, 0x9c, 0xdf, 0x8f, 0xe1, 0x82, 0x47, 0x11, 0xa1, 0xd0, 0x99, 0x46, 0x02, 0x13, 0x3d, 0x9f,
	0x59, 0x63, 0x77, 0xb2, 0x6f, 0x3e, 0x1a, 0x3b, 0xac, 0xe2, 0xb4, 0x97, 0x67, 0x99, 0xa1, 0xd2,
	0x99, 0x5c, 0xbf, 0xc0, 0x35, 0xfd, 0x5a, 0xcd, 0x97, 0x31, 0xc1, 0xe0, 0x2e, 0x36, 0xa6, 0xf8,
	0x6f, 0x44, 0x8c, 0x4a, 0xf3, 0x38, 0xb5, 0x01, 0xdd, 0xb2, 0xf8, 0x15, 0x26, 0x4f, 0xe0, 0xf8,
	0xec, 0x92, 0x8b, 0x88, 0xbf, 0x8f, 0x70, 0x1a, 0xad, 0xcc, 0xec, 0x2a, 0xcf, 0xed, 0xbb, 0x83,
	0x83, 0xd3, 0xc3, 0x51, 0xac, 0x96, 0xa3, 0x02, 0xb2, 0xdb, 0x32, 0xca, 0xe0, 0xd8, 0x64, 0x32,
	0x8f, 0xcc, 0xc4, 0x67, 0xae, 0x85, 0x4c, 0x88, 0x0f, 0xed, 0xa7, 0x9f, 0x52, 0x91, 0x61, 0x60,
	0x73, 0xed, 0x17, 0x47, 0x96, 0x90, 0x3c, 0x80, 0xd6, 0x5b, 0x85, 0x99, 0xcd, 0x73, 0x70, 0xda,
	0xb5, 0x67, 0x18, 0xc0, 0x2c, 0xa6, 0x17, 0xd0, 0xab, 0x1a, 0x8c, 0x41, 0x5e, 0x6c, 0x1f, 0xda,
	0xf3, 0xe4, 0x52, 0xe8, 0xc2, 0xb2, 0x53, 0x5a, 0x16, 0x90, 0x3c, 0x02, 0x28, 0xff, 0x3b, 0x0c,
	0xac, 0x71, 0x29, 0xa9, 0x71, 0xfa, 0xae, 0x1a, 0x06, 0xfd, 0x3f, 0xdb, 0x3b, 0xf1, 0xae, 0x36,
	0xbe, 0x73, 0xbd, 0xf1, 0x9d, 0x9f, 0x1b, 0xdf, 0xf9, 0xb2, 0xf5, 0x1b, 0xd7, 0x5b, 0xbf, 0xf1,
	0x7d, 0xeb, 0x37, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x87, 0xd1, 0xdc, 0x41, 0x3c, 0x04, 0x00,
	0x00,
}
