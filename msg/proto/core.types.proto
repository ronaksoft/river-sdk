syntax = "proto2";
package msg;

// TypingAction
enum TypingAction {
    Typing = 0;
    RecordingVoice = 1;
    RecordingVideo = 2;
    Uploading = 3;
    Cancel = 4;
}

// Dialog
message Dialog {
    required int64 PeerID = 1 [jstype = JS_STRING];
    required int32 PeerType = 2;
    required int64 TopMessageID = 3;
    required int64 ReadInboxMaxID = 4;
    required int64 ReadOutboxMaxID = 5;
    required int32 UnreadCount = 6;
    required fixed64 AccessHash = 7 [jstype = JS_STRING];
    optional PeerNotifySettings NotifySettings = 8;
}

// Peer
message Peer {
    required int64 ID = 1 [jstype = JS_STRING];
    required int32 Type = 2;
    required fixed64 AccessHash = 3 [jstype = JS_STRING];
}

// InputPeer
message InputPeer {
    required int64 ID = 1 [jstype = JS_STRING];
    required PeerType Type = 2;
    required fixed64 AccessHash = 3 [jstype = JS_STRING];
}

// PeerType
enum PeerType {
    PeerSelf = 0;
    PeerUser = 1;
    PeerChat = 2;
    PeerChannel = 3;
}

// InputPeer
message InputUser {
    required int64 UserID = 1 [jstype = JS_STRING];
    required fixed64 AccessHash = 2 [jstype = JS_STRING];
}

// User
message User {
    required int64 ID = 1 [jstype = JS_STRING];
    required string FirstName = 2;
    required string LastName = 3;
    required string Username = 4;
}

// ContactUser
message ContactUser {
    required int64 ID = 1 [jstype = JS_STRING];
    required string FirstName = 2;
    required string LastName = 3;
    required fixed64 AccessHash = 4 [jstype = JS_STRING];
    required string Phone = 5;
    required string Username = 6;
    required int64 ClientID = 7 [jstype = JS_STRING];

}

// UserMessage
message UserMessage {
    required int64 ID = 1;
    required int64 PeerID = 2 [jstype = JS_STRING];
    required int32 PeerType = 3;
    required int64 CreatedOn = 4;
    required int64 EditedOn = 5;
    required int64 FwdSenderID = 6 [jstype = JS_STRING];
    required int64 FwdChannelID = 7 [jstype = JS_STRING];
    required int64 FwdChannelMessageID = 8 [jstype = JS_STRING];
    required int32 Flags = 9;
    required int64 MessageType = 10;
    required string Body = 11;
    required int64 SenderID = 12 [jstype = JS_STRING];
    required bool ContentRead = 13;
    required bool Inbox = 14;
    optional int64 ReplyTo = 15;
    optional int32 MessageAction = 16;
}

// RSAPublicKey
message RSAPublicKey {
    required int64 FingerPrint = 1;
    required string N = 2;
    required uint32 E = 3;
}

// DHGroup
message DHGroup {
    required int64 FingerPrint = 1;
    required string Prime = 2;
    required int32 Gen = 3;
}

// PhoneContact
message PhoneContact {
    required int64 ClientID = 1 [jstype = JS_STRING];
    required string FirstName = 2;
    required string LastName = 3;
    required string Phone = 4;
}

// PeerNotifySettings
message PeerNotifySettings {
    required int32 Flags = 1;
    optional int64 MuteUntil = 2;
    optional string Sound = 3;
}

// InputFile
message InputFile {
    required int64 FileID = 1 [jstype = JS_STRING];
    required int32 TotalParts = 2;
    required string FileName = 3;
}

// Group
message Group {
    required int64 ID = 1 [jstype = JS_STRING];
    required string Title = 2;
    required int64 CreatedOn = 3;
    required int32 Participants = 4;
    optional int64 EditedOn = 5;
}

// GroupFull
message GroupFull {
    required Group Group = 1;
    repeated User Users = 2;
    repeated GroupParticipant Participants = 3;
    required PeerNotifySettings NotifySettings = 4;
}

// ParticipantType
enum ParticipantType {
    Creator = 0;
    Admin = 1;
    Member = 2;
}

// GroupParticipant
message GroupParticipant {
    required int64 UserID = 1;
    required int64 InviterID = 2;
    required int64 Date = 3;
    required ParticipantType Type = 4;
}

