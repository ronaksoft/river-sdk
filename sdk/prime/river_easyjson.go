// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package riversdk

import (
	"github.com/mailru/easyjson/jlexer"
	"github.com/mailru/easyjson/jwriter"
)

func (DHGroup) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*DHGroup) UnmarshalJSON([]byte) error        { return nil }
func (DHGroup) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*DHGroup) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_DHGroup *DHGroup

func (PublicKey) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*PublicKey) UnmarshalJSON([]byte) error        { return nil }
func (PublicKey) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*PublicKey) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PublicKey *PublicKey

func (RiverConnection) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*RiverConnection) UnmarshalJSON([]byte) error        { return nil }
func (RiverConnection) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*RiverConnection) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RiverConnection *RiverConnection

func (ServerKeys) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*ServerKeys) UnmarshalJSON([]byte) error        { return nil }
func (ServerKeys) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*ServerKeys) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ServerKeys *ServerKeys
